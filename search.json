[{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Contributing","text":"reading vignette probably contribute mapme.biodiversity package. great news happy receive Pull-Requests extending package’s functionality! receive important -depth information add resources indicators make process seamless possible package’s maintainers. Please make sure read understand guide opening PR. doubt, especially feel framework support specific use case, always feel free raise issue happily discuss can support ideas. already done , make sure read Terminology vignette get familiar important concepts package. Note use tidyverse style guide package. specifically means function variable names follow snake case pattern. also use arrow assignment operator (<-). submitting PR consistently follow tidyverse style guide, maintainers package might change code adhere code style without notice accepting PR.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Contributing","text":"Ideally, clone GitHub repository via git command command line Linux MacOS systems via GitHub Desktop application Windows. Linux, command look like : accept pushes main, thus first step create specific branch extension. tutorial, pretend reimplement soilgrids resources associated soilproperties indicator, create branch reflecting . Don’t forget check newly created branch! , assume develop extension package R Studio. general guidelines follow also apply choose different tooling development process, however, covered vignette. assume R development dependencies state package used git clone command installed. easiest way ensure using devtools package’s directory:","code":"git clone https://github.com/mapme-initiative/mapme.biodiversity git branch add-soilgrid-indicators git checkout add-soilgrid-indicators devtools::install_dev_deps()"},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"checklist","dir":"Articles","previous_headings":"Adding a resource","what":"Checklist","title":"Contributing","text":"Add new resource R/resources_backlog.R following standardized template Create file necessary code download resource (R/get_resource_name.R) Include roxygen documentation resource following provided template Check user-specified arguments () correctness Retrieve portfolio-wide parameters interest resource portfolio Match spatio-temporal extent portfolio resource Provide download functionality use .download_or_skip() Delete intermediate files longer required Return absolute file paths matching resource files Write testthat script testing newly added functionality (except actual download) write test/testthat/test-get_resource_name.R Add small example data set resource inst/res/resource_name/ Added new dependency? Make sure include supporting statement dependency PR!","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"introducing-a-new-resource-to-the-backlog","dir":"Articles","previous_headings":"Adding a resource","what":"Introducing a new resource to the backlog","title":"Contributing","text":"resource supported dataset can downloaded user’s perspective via get_resources() function. Currently, package supports raster vector resources. wish submit support new resource, please aware accept new resources associated least one indicator calculation. first step adding resource add internal resource backlog function package aware existence. checkout new branch project opened R Studio, issue following command open resource backlog file: file keeps track supported resources list object. see resource shares common structure specified. name list object name package uses identify specific resource. importantly, type argument specifies whether resource type ‘raster’ ‘vector’. applicable, source argument shall contain URL pointing webpage documenting resource. downloader argument package internal function name used download resource. function important code file new resource. , arguments default value govern download process can specified. additional arguments needed just enter empty list. soilgrids resource, internal backlog looks like (don’t spend much effort understanding arguments just yet. become clearer “write” downloader. contributing new resource, usually iterative process backlog downloader y arguments need specified users): resource backlogged, package now can find resource called soilgrids type raster can also identify downloader function specific case, package can also determine default values three arguments case users specify anything. important information determine get_resources() function works called users.","code":"file.edit(\"R/resources_backlog.R\") soilgrids <- list(   type = \"raster\",   source = \"https://www.isric.org/explore/soilgrids\",   downloader = \".get_soilgrids\",   arguments = list(     layers = \"clay\",     depths = \"0-5cm\",     stats = \"mean\"   ) )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"documenting-the-new-resource","dir":"Articles","previous_headings":"Adding a resource","what":"Documenting the new resource","title":"Contributing","text":"convention, filename downloader MUST start get_<resource_name>.R appended name resource. case soilgrids resource translates get_soilgrids.R. first part downloader, make sure include detailed documentation. documentation explain resource represents, comes (including citation), arguments users specify control downloaded. Importantly, documentation MUST receive roxygen tag @docType data well @keywords resource tag, documentation can identified resource. NULL value documentation MUST included. template used documenting resource.","code":"#' Short title #' #' One or more description paragraphs might follow here. Please describe #' required user arguments here, ideally as itemized lists. #' #' @name <the short name of your resource, same as in the backlog> #' @docType data <we document resources as a dataset> #' @keywords resource <identifies the documentation as a resource> #' @format <one sentence on data format and spatial extent> #' @references <ideally a citable scientific publication> #' @source <a link in the \\url{} tag linking to an online documentation> NULL"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"function-inputs-for-resources","dir":"Articles","previous_headings":"Adding a resource","what":"Function inputs for resources","title":"Contributing","text":"documenting resource, can get started implementing actual downloader. downloader package’s internal function users directly interact . convention, append package internal function names dot. Similar filename , resource downloaders start .get_<resource_name>. first argument always x, corresponds portfolio object. Important attributes (e.g. spatial-temporal extent) can derived object. additional user-facing arguments might follow. arguments, resource downloader receives argument rundir default point output tempdir(), pointing output directory disk output shall written used users. Additionally, logical called verbose, default set TRUE, controls verbosity downloader well dots argument. soilgrids resource, function header thus looks like :","code":".get_soilgrids <- function(x, layers, depths, stats,                            rundir = tempdir(),                            verbose = TRUE,                            ...) {                            # downloader coder goes here                            }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"check-arguments-and-retrieval-of-portfolio-wide-parameters","dir":"Articles","previous_headings":"Adding a resource","what":"Check arguments and retrieval of portfolio-wide parameters","title":"Contributing","text":"actually conducting downloads, important provider new resource check extensively required arguments correctly specified. specifically applies user-defined variables downloader requires. package framework check correctness arguments. something downloader take care . arguments wrongly specified, function fail (via stop()) gracefully inform users arguments misspecified values represent valid values. can head soilgrids downloader (use file.edit(\"R/get_soilgrids.R\")) analyse first lines file (line ~130) see inputs checked soilgrids resource. portfolio-wide parameters might important specific downloader can determined analysing x portfolio attributes. Currently, following attributes regard resource download set, users initialize portfolio: resource downloader take care user-specified arguments portfolio-wide parameters files matching spatio-temporal extent portfolio downloaded. can queried following syntax temporal extent portfolio example:","code":"attr(x, \"nitems\") <- nrow(x)   attr(x, \"bbox\") <- st_bbox(x)   attr(x, \"years\") <- years   attr(x, \"aria_bin\") <- aria_bin attributes(x)$years"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"using-helper-functions","dir":"Articles","previous_headings":"Adding a resource","what":"Using helper functions","title":"Contributing","text":"construct several URLs associated local filenames wish iterate , package provides helper function download files skip already existing ones. following code snippet shows use function: function attempt download specified URLs corresponding local filenames. URLs corresponding filename already exists skipped information issued message verbose set TRUE. stubbornness controls number retries failed downloads. check_existence set TRUE, RCurl::url.exists(url) used check given URL exists online. check takes time run, resources, can useful sure constructed URL exists remote location. Users enabled specify executable aria2c installation support parallel downloads. value aria_bin variable NULL valid executable specified. Otherwise, downloader use aria2c program download specified URLs. free also encouraged develop helper functions resource increase understandability ease maintenance downloader. helper functions associated resource located file. feel helper function might serve purpose across different resources, feel free raise comment can consider moving R/utils.R. Since helper functions internal package, MUST start dot. Package internal functions require roxygen documentation. wish include documentation make code easier understand, make sure add @keywords internal @noRd tags functions.","code":"aria_bin <- attributes(x)$aria_bin verbose <- attributes(x)$verbose  .download_or_skip(urls = source_urls, filenames = target_filenames,                   verbose = verbose, stubbornnes = 6, check_existencs = TRUE,                   aria_bin = aria_bin)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"defining-the-output-and-handling-intermediate-files","dir":"Articles","previous_headings":"Adding a resource","what":"Defining the output and handling intermediate files","title":"Contributing","text":"can create delete intermediate files directories within rundir. expected output resource downloader character vector including local file paths target files matching spatio-temporal extent portfolio x. raster resources, tile index indicating location earth raster file file path constructed added resource portfolio. Vector resources expected translated GeoPackages (.gpkg) appended portfolio .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-sample-resource-for-package-internal-testing","dir":"Articles","previous_headings":"Adding a resource","what":"Adding sample resource for package internal testing","title":"Contributing","text":"ask provide small subset resource inst/res/resource_name indicators depend resource can tested without need actual download resource. restrictions final size package, ask put substantial effort reducing size files minimum. includes cropping resource samples spatial extent polygon provided inst/extdata/sierra_de_neibe_478140.gpkg polygon similar size supplied case spatial extent intersect resource. raster resources, original raster encoded float, consider changing data type integer introducing scale factor. Also, please use compression algorithm reduce file size. vector resources, consider reducing number vertices case geometries complex.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"a-note-on-dependencies-for-resources","dir":"Articles","previous_headings":"Adding a resource","what":"A note on dependencies for resources","title":"Contributing","text":"Note, resource SHALL add additional dependencies package. add dependencies require add supporting statement PR explaining dependencies needed approaches fail. accepting PR, might request change code remove dependencies, feasible achieve functionality without.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-an-indicator","dir":"Articles","previous_headings":"","what":"Adding an indicator","title":"Contributing","text":"process adding indicator similar one resources. However, input-output requirements actually different. Note, case added new resource also expect new indicator taking advantage resource PR. see, two new important concepts mind adding indicator. processing mode computational engines. briefly explain concepts , however, can also head Terminology vignette interested comprehensive definition two terms.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"checklist-1","dir":"Articles","previous_headings":"Adding an indicator","what":"Checklist","title":"Contributing","text":"Add new indicator R/indicators_backlog.R following standardized template Create file necessary code compute indicator (R/calc_indicator_name.R) Include roxygen documentation indicator following provided template Check user-specified arguments () correctness Retrieve portfolio-wide parameters interest indicator asset/portfolio Implement different computation engines indicator applicable, implement , asset portfolio based processing modes Return tibble long format (variables “hidden” column names) Write testthat script testing newly added functionality write test/testthat/test-calc_indicator_name.R, use snapshots check correctness numeric outputs Added new dependency? Make sure include supporting statement dependency PR, check dependency installed, add Suggests field DESCRIPTION file","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"introducing-a-new-indicator-to-the-backlog","dir":"Articles","previous_headings":"Adding an indicator","what":"Introducing a new indicator to the backlog","title":"Contributing","text":"indicator logical routine depending one resources extracts numeric outputs assets portfolio. user’s perspective, indicators processed via calc_indicators() function. realized, large (potentially global) portfolios, depending spatial resolution resource, different processing modes substantially decrease time needed computation. high medium resolution raster resources, processing asset level benefits computation time. However, spatially cropping coarse resolution datasets high number assets introduces significant overhead, thus processing resources portfolio level makes sense. asked provide sensible approach indicator submit internal backlog. adding indicator , package aware made aware existence. can issue following command open resource backlog file (open manually): file keeps track supported indicators list object. see indicator shares common structure. name list object name package uses identify specific indicator. Note, name indicator MUST equal indicator resource. processor argument specifies name function provide indicator calculation. inputs argument refers supported resources required inputs indicator. requirement, least one resource needs specified, indicator can also depend resources. also ask provide type resource (e.g. raster vector). arguments list object, can specify additional arguments users need specify want call indicator function. additional arguments, simply add empty list. Please put sensible default values case indicator function requires arguments. Finally, processing_mode governs indicator functions receive inputs. case set asset, call indicator function receive single asset required resources crop spatial extent asset. set portfolio function receive whole portfolio object required resource spatial extent portfolio. , find example precipitation indicator: neither two processing modes lead satisfactory processing times indicator, please leave issue/comment discuss addition another processing mode maintainers package.","code":"file.edit(\"R/indicator_backlog.R\") precipitation <- list(   processor = \".calc_precipitation\",   inputs = list(chirps = \"raster\"),   arguments = list(     scales_spi = NULL,     engine = \"extract\"   ),   processing_mode = \"portfolio\" )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"documenting-the-new-indicator","dir":"Articles","previous_headings":"Adding an indicator","what":"Documenting the new indicator","title":"Contributing","text":"convention, filename indicator processor MUST start calc_indicator_name.R appended name resource. case precipitation indicator translates calc_precipitation.R. first part indicator processor, make sure include detailed documentation. documentation explain derives numeric output, resources required calculation, arguments users specify control functioning. Importantly, documentation MUST receive roxygen tag @docType data well @keywords indicator tag, documentation can identified indicator NULL value documentation MUST included. template used documenting indicator","code":"#' Short title #' #' One or more description paragraphs might follow here. Please describe #' required resource and user arguments here, ideally as itemized lists. #' Please document which processing engines are available for your indicator #' and briefly describe how the indicator is derived from its inputs. #' #' @name <the short name of your indicator, same as in the backlog> #' @docType data <we document indicators as a dataset> #' @keywords indicator <identifies the documentation as an indicator> #' @format <one sentence on number of columns, columns names of ouput tibble> NULL"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"function-inputs-for-indicators","dir":"Articles","previous_headings":"Adding an indicator","what":"Function inputs for indicators","title":"Contributing","text":"documenting indicator, can get started implementing actual processor. indicator processor package’s internal function users directly interact . convention, append package internal function names dot. Similar filename , indicator processors start .calc_indicator_name>. first argument indicator processor receives always shp, corresponds single asset portfolio specified processing_mode \"asset\" entire portfolio object specified \"portfolio\". Important attributes (e.g. spatial-temporal extent) can derived object, irrespective represents single asset whole portfolio. , one required resource specified exact names included resource backlog. , case processing_mode set \"asset\", resource spatial cropped extent single asset, case set \"portfolio\" complete spatial extent portfolio included. resource, user-defined additional arguments follow. can assume users specify argument, default values indicator backlog inserted instead. Note, define engine argument set users order give fine-control output computed. close look engines . indicator functions also receive argument rundir, intermediate files can written . take care cleaning directory, since framework clean processing done. Also, logical controlling verbosity handed use decide whether print additional informative messages. raster resources, included logical todisk governing intermediate raster files shall kept memory written disk. Currently, decision handled indicator processor, however, evaluating possibilities determine behaviour within package . Last, processing mode specified. can helpful wish supply processor possibility support either two modes. precipitation indicator, function header look like :","code":".calc_precipitation <- function(shp,                                 chirps,                                 scales_spi = NULL,                                 engine = \"extract\",                                 rundir = tempdir(),                                 verbose = TRUE,                                 todisk = FALSE,                                 processing_mode = \"portfolio\",                                 ...) {                                 # processor logic goes here                                 }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"check-arguments-and-retrieval-of-portfolio-wide-parameters-1","dir":"Articles","previous_headings":"Adding an indicator","what":"Check arguments and retrieval of portfolio-wide parameters","title":"Contributing","text":"actually conducting computation, important provider new indicator check extensively required arguments correctly specified. specifically applies user-defined variables processor requires. package framework check correctness arguments. arguments wrongly specified, function fail (via stop()) gracefully inform users arguments misspecified values represent valid values. can head precipitation processor (use file.edit(\"R/calc_precipitation.R\")) analyse first lines file (line ~76) see inputs checked. Also note, case required resource NULL (default value asset intersect resource), configurations (e.g. years smaller 1981 case precipitation indicator) prevent sensible processing indicator, simply return NA. package fill tibble values asset NA, users now given indicator calculated . portfolio-wide parameters might important specific indicator routine, can derived via attributes() function, e.g. years attribute:","code":"years = attributes(shp)$years"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"using-helper-functions-1","dir":"Articles","previous_headings":"Adding an indicator","what":"Using helper functions","title":"Contributing","text":"package internal helper function found use multiple indicators free use indicator processor. find R/utils.R. helpers currently : .check_available_years(): Checks given target year vector available given indicator .check_engine(): Checks user-specified engine available .check_stats(): Stats user-specified zonal statistic available encouraged write helper function needed indicator processor. located file main processor, start dot exported. wish include roxygen documentation helpers, make sure add @keywords internal @noRd tags functions. feel one helper functions benefit just one indicator, please comment issue/pull-request discuss package maintainers helper function moved R/utils.R.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-engines-to-your-indicator-processor","dir":"Articles","previous_headings":"Adding an indicator","what":"Adding engines to your indicator processor","title":"Contributing","text":"writing package realized depending structure portfolio (.e. number assets, size geometric complexity), different engines might lead better processing times. thus included three different engines indicators, invite contribution. Engines mostly used last step indicator calculation, kind zonal statistics calculated specific asset. currently used engines : terra::extract(): Takes SpatRaster SpatVector input computes zonal statistic pixels within SpatVector terra::zonal(): Takes two SpatRasters input, one target variable(s) representing rasterized input polygon. zonal statistic pixels correspond asset extent calculated exactextractr::exact_extract(): Takes SpatRaster sf-object input calculates zonal statistic. implemented C, thus promising fast processing even large extents. wish include another processing engine indicator, please indicate comment can discussed packages maintainers. Note, indicators ideally add new dependencies possible. , please add supporting statement dependency necessary indicator. also ask add dependencies Suggests field DESCRIPTION file check whether dependency installed beginning indicator routine.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"defining-the-output-of-indicator-functions","dir":"Articles","previous_headings":"Adding an indicator","what":"Defining the output of indicator functions","title":"Contributing","text":"Indicator functions, return tibble long format output without “hiding” variables column names. Beside requirement, output indicator need follow specific shape, except columns shall equal across assets. case calculate indicator specific indicator (e.g. extents overlap), simply return NA. package handle values internally fill NA single row asset column names assets, values set NA.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Introduction","text":"mapme.biodiversity facilitates statistical data analysis protected areas around globe. supports high number biodiversity related datasets associated indicators can utilized monitor evaluate effectiveness protection efforts. Several indicators available regular intervals almost two decades (2000 2020). allows users analyse spatial temporal dynamics biodiversity portfolios. package abstracts away repetitive tasks, temporal spatial selection resources. allows seamless approach quantitative data analysis even large (potentially global) portfolios users enabled focus aims analysis. package tested Microsoft Azure’s cloud infrastructure well local machines. internal framework designed allow easy process provide extensions form additional resources indicators, unlocking potential future growth supported datasets Pull-Requests highly appreciated. geographic data analysis, package uses sf operation vector data terra raster data.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"mapme-biodiversity-package","dir":"Articles","previous_headings":"","what":"mapme.biodiversity package","title":"Introduction","text":"mapme.biodiversity provides standardized interface download analyse great variety biodiversity related spatial datasets allowing users focus aims analysis. sometimes cumbersome process handling different spatial data formats spatial temporal selection handled internally. Many organizations provide value-added datasets related biodiversity. organizations often use different technology stacks distribute data. mapme.biodiversity contains simple routines communicate different backends provide seamless access data. desired resources made available locally, users can decide indicators want calculate fine-control routines provided.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"functionalities","dir":"Articles","previous_headings":"","what":"Functionalities","title":"Introduction","text":"Currently, package offers several functionalities, ideally used consecutive manner order realize seamless analysis workflow: initiate portfolio based sf object get resources spatio-temporal extent portfolio calculate indicators based available resources asset portfolio write results disk GeoPackage use Geo-Spatial software, conduct statistical analysis R","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"inputs-outputs","dir":"Articles","previous_headings":"","what":"Inputs, Outputs","title":"Introduction","text":"sf object containing geometries type 'POLYGON' arbitrary metadata additional information temporal extent output folder structure raster vector resources matching spatio-temporal extent portfolio downloaded made available locally. necessary inputs subsequent calculation indicators, raw resource course also can used, e.g. custom visualizations analysis. Importantly, resource directory can used different portfolios matching resources figured run time. Thus, need store multiple copies input resources. results indicator calculation added portfolio object nested list columns. approach makes feasible support variety indicators differently shaped outputs (e.g. time variant vs. invariant indicators). analysis done R, pose serious limitations, desired indicator can easily unnested via tidyr::unnest(). However, data shared use geospatial software (e.g.  QGIS), routine write portfolio object GeoPackage disk provided. indicator written independent table unique identifier allows joining attributes geometries later.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"Introduction","text":"potential limiting factor now processing single large polygons. terra package provides memory-save framework process large raster extents, RAM overflows occur several large polygons processed parallel. advise process large polygons sequentially substantially reduce number cores. Windows, parallel processing currently supported. thoroughly tested provided routines also work Windows machines, sequential processing large numbers polygons can take . wish process large portfolios parallel, please make sure use UNIX based operating system (e.g. using docker image). took great effort evaluate efficient processing routines indicator. submit new indicator efficient routine mind currently supported package, please contact maintainers via e-mail, issue pull-request happily discuss options integrate routine wider framework planning add new features extend functionality mapme.biodiversity, address limitations best possible.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"How To: Use downloaded resources","text":"mapme.biodiversity can used simply download number spatial resources conduct custom analysis data. tutorial shows access downloaded data conducting small example analysis. scope tutorial, interested analyzing fire intensities Serengeti National Park (NP), Tanzania. going use mapme.biodiversity download fire detection product based MODIS satellites distributed NASA conduct fairly simple analysis fire intensities within national park.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"How To: Use downloaded resources","text":"First, start loading required packages needed analysis. Next, create directory write data . keep path directory variable, going need later access data. using wdpar package download data base protected areas Tanzania subset Serengeti NP. Note, cast geometry \"POLYGON\" type geometry actually expected mapme.biodiversity. next code chunk, initiate portfolio geometry Serengeti NP specifying temporal extent interested - years 2010 2020 - well output directory data downloaded . now ready actually download data. Note, running next code chunk actually takes significant time nasa_firms resource rather large data set. nasa_firms data set processed mapme.biodiversity package collection points stored GeoPackage year observation indicating detection fire associated confidence level detection. Follow resources linked help(nasa_firms) find data. download completed, can find data data_dir specified earlier constructing portfolio. new subfolder requested resource name. Since nasa_firms data global data set interested fires observed Serengeti NP, apply one filter reading data contain points within bounding box AOI. apply another filter subset points actually fall within polygon. ’s ! actually accessed original data mapme.biodiversity package downloaded us. Now can work data way suitable analysis. Follow along want learn nasa_firms resource can used map fire intensity within Serengeti NP!","code":"library(sf) library(rgl) library(wdpar) library(dplyr) library(purrr) library(units) library(stringr) library(ggplot2) library(spatstat) library(lubridate) library(mapme.biodiversity) data_dir <- \"assets/data\" dir.create(data_dir, recursive = TRUE, showWarnings = FALSE) data <- wdpa_fetch(\"Tanzania\", download_dir = data_dir) aoi <- data[data$NAME == \"Serengeti National Park\", ] aoi <- st_cast(aoi[1, ], \"POLYGON\") aoi <- init_portfolio(aoi, years = 2010:2020, outdir = data_dir) aoi <- get_resources(aoi, \"nasa_firms\", instrument = \"MODIS\") gpkgs <- list.files(file.path(data_dir, \"nasa_firms\"),   pattern = \".gpkg\", full.names = TRUE ) nasa_firms <- map_dfr(gpkgs, function(x) {   read_sf(x, wkt_filter = st_as_text(st_as_sfc(st_bbox(aoi)))) }) nasa_firms <- nasa_firms[unlist(st_contains(aoi, nasa_firms)), ]"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"eda-of-fire-events","dir":"Articles","previous_headings":"","what":"EDA of fire events","title":"How To: Use downloaded resources","text":"First, let’s take look . select confidence value 50 include detection higher probability actually representing fire event. , construct new variable representing year observation finally create plot showing spatio-temporal distribution fire events Serengeti NP.  Visually, seems gradient higher numbers fires detected North-East National Park towards lower numbers South-West park. Also, years substantially fewer fires seem occur compared years. Let’s confirm last observation plotting barplot numbers fires every years. find fires occurred 2016 2020 lowest numbers observed 2017 2011. difference highest lowest observed fires 1270 fires average number fires per year 853  now take closer look intra-annual distribution fires. , , construct new variable indicating month certain observation made.  see clear seasonal pattern occurrences fires fires observed months June July. February September also substantiall numbers fires observer, fewer fire season. now might look intra-annual distribution different angle dividing year quarters starting month March using meteorological division year.  perspective, relevant quarter analyzing fires Serengeti NP seems second one spanning months June, July, August. thus filter data include fire observations second quarter ignore rest scope tutorial. , let’s spatial visualization data going work now.","code":"nasa_firms <- filter(nasa_firms, confidence > 50) nasa_firms$year <- as.factor(year(nasa_firms$acq_date))  ggplot() +   geom_sf(data = aoi, inherit.aes = TRUE) +   geom_sf(data = nasa_firms, alpha = .1, color = \"#f18e26\") +   coord_sf(expand = FALSE) +   theme_classic() +   theme(axis.text.x = element_text(angle = 90)) +   scale_x_continuous(breaks = seq(from = 34.0, to = 35.0, by = .5)) +   facet_wrap(~year, nrow = 2, switch = \"x\") nasa_firms %>%   st_drop_geometry() %>%   ggplot() +   geom_bar(aes(as.factor(year)), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Year\", y = \"Count of fire events\") nasa_firms$month <- factor(format(as.Date(nasa_firms$acq_date), \"%b\"),   labels = month(1:12, label = TRUE, abbr = TRUE) )  nasa_firms %>%   st_drop_geometry() %>%   ggplot() +   geom_bar(aes(x = month), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Month\", y = \"Count of fire events\") nasa_firms$quarter <- quarter(nasa_firms$acq_date, fiscal_start = 3)  nasa_firms %>%   st_drop_geometry() %>%   mutate(quarter = paste0(\"Q\", quarter)) %>%   ggplot() +   geom_bar(aes(x = quarter), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Quarter\", y = \"Count of fire events\") nasa_firms <- filter(nasa_firms, quarter == 2)  ggplot() +   geom_sf(data = aoi) +   geom_sf(data = nasa_firms, alpha = .1, color = \"#f18e26\") +   theme_classic() +   theme(axis.text.x = element_text(angle = 90)) +   scale_x_continuous(breaks = seq(from = 34.0, to = 35.0, by = .5)) +   facet_wrap(~year, nrow = 2, switch = \"x\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"kernel-based-intensity-estimation","dir":"Articles","previous_headings":"","what":"Kernel-based intensity estimation","title":"How To: Use downloaded resources","text":"visual interpretation data might conclude occurrence fire events spatially clustered tendency fires observed North-East compared South-West. Imagine wanted highlight areas park rangers watch emerging fires closely order prevent burning large area. One approach produce map use kernel-based estimation intensity observed point pattern. spatstat package provides ton functionality work point patterns, one allows empirical estimation intensity surface. , need transform data planar coordinate system plug spatstat specific point-pattern object. summary Planar Point Pattern object shows important information. First, 7361 points begin . distributed observation window constituted shape Serengeti NP size 13094316275 m². Thus, obtain average intensity whole national park 5.62152299153907e-07 1/m² 0.5622 1/km². Let’s now test assumption point pattern fires observed shows tendency clustering. use spatstat estimate Ripley’s K function (see information). K function compares observed point pattern simulation number patterns product process showing complete spatially randomness (CSR). statistic count number neighboring points within increasing distance r point observed pattern simulated ones. Comparing two, simply put, allows draw conclusions behavior observed pattern certain distances. observed number points specific distance higher expected one CSR, points tend cluster together distance. hand, less points spatial neighborhood point expected CSR, indication inhibition points. Note, estimation K assumes point process stationary - intensity fire events homogeneous within observation window. intensity - homogeneous, sure clustering result spatially varying intensity (first order effect) points attract form clusters (second order effect). Since interested drawing conclusions process generating observed pattern tutorial, can accept caveat.  see largest part varying distance r, observed pattern seems clustered CSR process (note, units r meters). large values r observed pattern within expected range CSR. now interested producing map estimated intensity informs us areas fires likely occur. using kernel-based empirical estimation observed intensity. means moving kernel point pattern calculate empirical intensity within current kernel. main challenge determine bandwidth parameter sigma best fits data. standard approach spatstat solely determine sigma based size shape observation window. might achieve better visualization customized value sigma. Since point pattern shows tendency towards clustering, apply simple heuristic derive value sigma. calculate difference observed K K values CSR. , determine spatial distance r difference two maximal. get sigma simply take half value distance. indicates distance observed simulated K maximal distance 14050 bandwidth kernel estimation intensity 7025. can now use density() function apply kernel-based estimation intensity custom sigma value.  Let’s make quick sanity check empirical intensity matches point pattern. , remember units intensity fires per m². thus need multiply sum pixel values spatial resolution. actual identical values, kernel-based estimate number events close enough observed one. now might also include 3D animation intensity surface allow even better investigation.","code":"center <- st_coordinates(st_centroid(aoi)) laea <- paste0(   \"+proj=laea +lat_0=\", center[2],   \" +lon_0=\", center[1], \" +x_0=0 +y_0=0\" )  aoi_laea <- st_transform(aoi, crs = laea) fires_laea <- st_transform(nasa_firms, crs = laea)  ppp_fires <- as.ppp(c(st_as_sfc(aoi_laea), st_as_sfc(fires_laea))) summary(ppp_fires) #> Planar point pattern:  7361 points #> Average intensity 5.646643e-07 points per square unit #>  #> Coordinates are given to 3 decimal places #> i.e. rounded to the nearest multiple of 0.001 units #>  #> Window: polygonal boundary #> single connected closed polygon with 401 vertices #> enclosing rectangle: [-101678.14, 53378.67] x [-109059.06, 101908.44] units #>                      (155100 x 211000 units) #> Window area = 13036100000 square units #> Fraction of frame area: 0.399 k_env <- envelope(ppp_fires, Kest,   nsim = 99, correction = \"border\", verbose = FALSE ) plot(k_env) diff <- k_env$obs - k_env$theo sigma <- k_env$r[which.max(diff)] / 2 dens_emp <- density(ppp_fires, sigma = sigma) plot(dens_emp, ribbon = FALSE, addcontour = TRUE) res <- dens_emp$xstep * dens_emp$ystep sum(dens_emp) * res #> [1] 7384.578 nrow(nasa_firms) #> [1] 7361 map2color <- function(x, pal, limits = range(x, na.rm = TRUE)) {   pal[findInterval(x, seq(limits[1], limits[2], length.out = length(pal) + 1),     all.inside = TRUE   )] }  pal <- colorRampPalette(c(\"blue\", \"yellow\", \"red\")) cols <- map2color(dens_emp$v,   pal = pal(100),   limits = c(     min(dens_emp$v, na.rm = TRUE),     quantile(dens_emp$v, .75, na.rm = TRUE)   ) )  persp3d(dens_emp$v,   col = cols, xlab = \"X\", ylab = \"Y\", zlab = \"Fire Intensity\",   main = \"Fire intensity for Q2\", aspect = c(1, 1, .65) ) control <- par3dinterpControl(spin3d(axis = c(0, 0, 1)), 0, 12, steps = 40) rglwidget() %>% playwidget(control, step = 0.01, loop = TRUE, rate = 0.5)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"How To: Transform indicator output to wide-format","text":"tutorial gives information transform output mapme-biodiversity package wide format exchange (geospatial-)software, QGIS. necessary package uses -called nested-list format default support different indicators may come format. However, format specific R use data software thus requires additional steps taken. vignette thus shows can obtain wide-format portfolio can easily export use software.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"what-are-long-vs--wide-tables","dir":"Articles","previous_headings":"","what":"What are long vs. wide tables?","title":"How To: Transform indicator output to wide-format","text":"Tabular data can structured two different ways, usually referred long wide format. people familiar wide format, format humans naturally structure data work spreadsheets, e.g. Excel. wide-format, identifier observation included exactly repeat (see Table ). long format, identifier well qualifying variables, might repeated several times uniquely identify observation single row (see Table B). long format often required interacting computers, e.g. make plots ggplot2. content two exactly either way, one might just friendly humans computers. familiar R tidyverse, might also heard term tidy data. terms tabular data can imagine tidy data referring data long table naturally fulfills following requirements: variable column observation row value cell Fig. 1: Example wide long table holding data. Table , sense, tidy since year variable found column instead scattered two different columns. Table B long format variable found exactly one column. sense, individual row represents exactly one observation, meaning observation specific country specific year. structure data long format objects usually larger memory footprint compared wide format. smaller objects data types small memory consumption, might pose serious limitation workflow. However, geometry information, indicated WKT string, might quickly accumulate large proportion available memory, even portfolio consists high number complex geometries copied fit long-format requirement. reason, packages uses nested-list format hold tables indicators single columns within portfolio. remainder tutorial show detail can work R specific data format.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"the-simple-case---single-row-indicators","dir":"Articles","previous_headings":"","what":"The simple case - single-row indicators","title":"How To: Transform indicator output to wide-format","text":"start reading GeoPackage disk. sake argument, split original single polygon 9 distinct polygons simulate realistic portfolio consisting multiple assets. simple example, suppose interested extracting average traveltime cities 20,000 50,000 inhabitants portfolio. usual, make available Nelson et al. resource well requesting calculation respective indicator. can observe output, two new columns added sf object. first called assetid simply unique identifier respective asset. second column called traveltime type list indicating represents nested-list column. means able maintain rectangular shape original data (e.g. one polygon per row), supporting arbitrarily shaped outputs indicators. Let’s observe traveltime indicator looks like instance: syntax , can see can access single object within nested list column (e.g. using list accessor [[). case, shape traveltime indicator single-row two-column tibble average minutes distance category value. indicator comes single row, can simply unnest traveltime column get wide-format output: case, result 9 rows just like original data frame. particular scenario, variable minutes_mean, object port_wide_1 contains just one value per polygon. aligns well characteristics wide format, can easily understood processed various (geospatial) software. , can now export portfolio example geopackage can read directly e.g. QGIS CSV without geospatial information:","code":"aoi <- read_sf(   system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",     package = \"mapme.biodiversity\"   ) ) aoi <- st_as_sf(st_make_grid(aoi, n = 3)) print(aoi) #> Simple feature collection with 9 features and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #>                                x #> 1 POLYGON ((-71.80933 18.5766... #> 2 POLYGON ((-71.65022 18.5766... #> 3 POLYGON ((-71.49111 18.5766... #> 4 POLYGON ((-71.80933 18.6175... #> 5 POLYGON ((-71.65022 18.6175... #> 6 POLYGON ((-71.49111 18.6175... #> 7 POLYGON ((-71.80933 18.6584... #> 8 POLYGON ((-71.65022 18.6584... #> 9 POLYGON ((-71.49111 18.6584... port <- init_portfolio(   aoi,   years = 2018,   outdir = system.file(\"res\", package = \"mapme.biodiversity\"),   tmpdir = system.file(\"tmp\", package = \"mapme.biodiversity\"),   add_resources = TRUE )  port_w_nelson <- get_resources(port, \"nelson_et_al\", range_traveltime = \"20k_50k\") #> Starting process to download resource 'nelson_et_al'........ #> Skipping existing files in output directory. port_w_traveltime <- calc_indicators(port_w_nelson, \"traveltime\", stats_accessibility = \"mean\") #> Argument 'engine' for resource 'traveltime' was not specified. Setting to default value of 'extract'. print(port_w_traveltime) #> Simple feature collection with 9 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 3 #>   assetid traveltime                                                           x #>     <int> <list>                                                   <POLYGON [°]> #> 1       1 <tibble [1 × 2]> ((-71.80933 18.57668, -71.65022 18.57668, -71.65022 … #> 2       2 <tibble [1 × 2]> ((-71.65022 18.57668, -71.49111 18.57668, -71.49111 … #> 3       3 <tibble [1 × 2]> ((-71.49111 18.57668, -71.33201 18.57668, -71.33201 … #> 4       4 <tibble [1 × 2]> ((-71.80933 18.61756, -71.65022 18.61756, -71.65022 … #> 5       5 <tibble [1 × 2]> ((-71.65022 18.61756, -71.49111 18.61756, -71.49111 … #> 6       6 <tibble [1 × 2]> ((-71.49111 18.61756, -71.33201 18.61756, -71.33201 … #> 7       7 <tibble [1 × 2]> ((-71.80933 18.65844, -71.65022 18.65844, -71.65022 … #> 8       8 <tibble [1 × 2]> ((-71.65022 18.65844, -71.49111 18.65844, -71.49111 … #> 9       9 <tibble [1 × 2]> ((-71.49111 18.65844, -71.33201 18.65844, -71.33201 … print(port_w_traveltime$traveltime[[1]]) #> # A tibble: 1 × 2 #>   minutes_mean distance #>          <dbl> <chr>    #> 1         49.8 20k_50k port_wide_1 <- tidyr::unnest(port_w_traveltime, traveltime) print(port_wide_1) #> Simple feature collection with 9 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 4 #>   assetid minutes_mean distance                                                x #>     <int>        <dbl> <chr>                                       <POLYGON [°]> #> 1       1         49.8 20k_50k  ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> 2       2        104.  20k_50k  ((-71.65022 18.57668, -71.49111 18.57668, -71.4… #> 3       3        112.  20k_50k  ((-71.49111 18.57668, -71.33201 18.57668, -71.3… #> 4       4         84   20k_50k  ((-71.80933 18.61756, -71.65022 18.61756, -71.6… #> 5       5        139.  20k_50k  ((-71.65022 18.61756, -71.49111 18.61756, -71.4… #> 6       6        104.  20k_50k  ((-71.49111 18.61756, -71.33201 18.61756, -71.3… #> 7       7        141.  20k_50k  ((-71.80933 18.65844, -71.65022 18.65844, -71.6… #> 8       8        118.  20k_50k  ((-71.65022 18.65844, -71.49111 18.65844, -71.4… #> 9       9         73.1 20k_50k  ((-71.49111 18.65844, -71.33201 18.65844, -71.3… st_write(port_wide_1, dsn = tempfile(fileext = \".gpkg\")) #> Writing layer `file25be19ec7058' to data source  #>   `/tmp/RtmpXlQGOZ/file25be19ec7058.gpkg' using driver `GPKG' #> Writing 9 features with 3 fields and geometry type Polygon. write.csv(st_drop_geometry(port_wide_1), file = tempfile(fileext = \".csv\"))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"the-harder-case---indicators-with-multi-row-output","dir":"Articles","previous_headings":"","what":"The harder case - indicators with multi-row output","title":"How To: Transform indicator output to wide-format","text":"Let’s continue query indicator multi-row output, .e. precipitation statistics WorldClim. see similar traveltime indicator, output consists 9 rows precipitation indicator single nested-list column. Note, however, differences take look shape indicator specific asset: single asset, obtain tibble 12 rows (month queried year 2018). Now, just simply unnest indicator column observe happens shape output: Instead 9 rows, get tibble 108 rows (9 assets * 12), metadata asset well geometry column repeated. desirable, especially portfolios large numbers assets repetition geometry data can cause large objects. Now, let’s investigate still able get wide output. valid approach re-shape indicators per asset wide format unnesting indicator column. , let’s write function takes precipitation indicator single asset input transforms wide-format. example output see custom prec2wide() functions takes single tibble input, puts dates appended prec- column names associated average precipitation values single row. Now, can use functionality purrr package map function indicator column, save result new column (simply overwrite original), finally simply call unnest get output wide format. can now use st_write() save wide-format sf object geospatial format choice drop geometry information altogether dump data csv.","code":"port_w_chirps <- get_resources(port, \"worldclim_precipitation\") #> Starting process to download resource 'worldclim_precipitation'........ #> Skipping existing files in output directory. port_w_prec <- calc_indicators(port_w_chirps, \"precipitation_wc\", stats_worldclim = \"mean\") #> Argument 'engine' for resource 'precipitation_wc' was not specified. Setting to default value of 'extract'. print(port_w_prec) #> Simple feature collection with 9 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 3 #>   assetid precipitation_wc                                                     x #>     <int> <list>                                                   <POLYGON [°]> #> 1       1 <tibble [12 × 2]> ((-71.80933 18.57668, -71.65022 18.57668, -71.65022… #> 2       2 <tibble [12 × 2]> ((-71.65022 18.57668, -71.49111 18.57668, -71.49111… #> 3       3 <tibble [12 × 2]> ((-71.49111 18.57668, -71.33201 18.57668, -71.33201… #> 4       4 <tibble [12 × 2]> ((-71.80933 18.61756, -71.65022 18.61756, -71.65022… #> 5       5 <tibble [12 × 2]> ((-71.65022 18.61756, -71.49111 18.61756, -71.49111… #> 6       6 <tibble [12 × 2]> ((-71.49111 18.61756, -71.33201 18.61756, -71.33201… #> 7       7 <tibble [12 × 2]> ((-71.80933 18.65844, -71.65022 18.65844, -71.65022… #> 8       8 <tibble [12 × 2]> ((-71.65022 18.65844, -71.49111 18.65844, -71.49111… #> 9       9 <tibble [12 × 2]> ((-71.49111 18.65844, -71.33201 18.65844, -71.33201… print(port_w_prec$precipitation_wc[[1]]) #> # A tibble: 12 × 2 #>    prec_mean date       #>        <dbl> <date>     #>  1      21.1 2018-01-01 #>  2      21.4 2018-02-01 #>  3      61.4 2018-03-01 #>  4      83.6 2018-04-01 #>  5     331.  2018-05-01 #>  6      60.3 2018-06-01 #>  7      74.0 2018-07-01 #>  8      94.0 2018-08-01 #>  9     207.  2018-09-01 #> 10     126.  2018-10-01 #> 11      52.6 2018-11-01 #> 12      20.2 2018-12-01 port_wide_2 <- tidyr::unnest(port_w_prec, precipitation_wc) print(port_wide_2) #> Simple feature collection with 108 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 108 × 4 #>    assetid prec_mean date                                                      x #>      <int>     <dbl> <date>                                        <POLYGON [°]> #>  1       1      21.1 2018-01-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  2       1      21.4 2018-02-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  3       1      61.4 2018-03-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  4       1      83.6 2018-04-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  5       1     331.  2018-05-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  6       1      60.3 2018-06-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  7       1      74.0 2018-07-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  8       1      94.0 2018-08-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  9       1     207.  2018-09-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> 10       1     126.  2018-10-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> # ℹ 98 more rows prec2wide <- function(data) {   pivot_wider(data, names_from = date, values_from = prec_mean, names_prefix = \"prec-\") } prec2wide(port_w_prec$precipitation_wc[[1]]) #> # A tibble: 1 × 12 #>   `prec-2018-01-01` `prec-2018-02-01` `prec-2018-03-01` `prec-2018-04-01` #>               <dbl>             <dbl>             <dbl>             <dbl> #> 1              21.1              21.4              61.4              83.6 #> # ℹ 8 more variables: `prec-2018-05-01` <dbl>, `prec-2018-06-01` <dbl>, #> #   `prec-2018-07-01` <dbl>, `prec-2018-08-01` <dbl>, `prec-2018-09-01` <dbl>, #> #   `prec-2018-10-01` <dbl>, `prec-2018-11-01` <dbl>, `prec-2018-12-01` <dbl> port_w_prec$precipitation_wc2 <- purrr::map(port_w_prec$precipitation_wc, prec2wide) port_w_prec <- select(port_w_prec, assetid, precipitation_wc2) port_wide_3 <- unnest(port_w_prec, precipitation_wc2)  print(port_wide_3) #> Simple feature collection with 9 features and 13 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 14 #>   assetid `prec-2018-01-01` `prec-2018-02-01` `prec-2018-03-01` #>     <int>             <dbl>             <dbl>             <dbl> #> 1       1              21.1              21.4              61.4 #> 2       2              25.9              24.5              62.0 #> 3       3              24.5              24.2              58.4 #> 4       4              32.1              28.1              72.8 #> 5       5              28.7              28.4              68.4 #> 6       6              17.6              19.8              54.4 #> 7       7              24.5              24.3              69.9 #> 8       8              19.4              21.1              62.8 #> 9       9              14.2              17.5              52.2 #> # ℹ 10 more variables: `prec-2018-04-01` <dbl>, `prec-2018-05-01` <dbl>, #> #   `prec-2018-06-01` <dbl>, `prec-2018-07-01` <dbl>, `prec-2018-08-01` <dbl>, #> #   `prec-2018-09-01` <dbl>, `prec-2018-10-01` <dbl>, `prec-2018-11-01` <dbl>, #> #   `prec-2018-12-01` <dbl>, x <POLYGON [°]> st_write(port_wide_3, dsn = tempfile(fileext = \".gpkg\")) #> Writing layer `file25be52eddcc9' to data source  #>   `/tmp/RtmpXlQGOZ/file25be52eddcc9.gpkg' using driver `GPKG' #> Writing 9 features with 13 fields and geometry type Polygon. write.csv(st_drop_geometry(port_wide_3), file = tempfile(fileext = \".csv\"))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quickstart","text":"following demonstrate idealized workflow based subset ESA Landcover dataset delivered together package. can follow along code snippets reproduce results. Please note reduce time takes process vignette, download resources internet. real use case, thus processing time might substantially increase resources downloaded real portfolios might larger one created example. vignette assumes already followed steps Installation familiarized terminology used package. unfamiliar terminology used , please head Terminology article learn important concepts. idealized workflow using mapme.biodiversity consists following steps: initialize portfolio using sf-object containing geometries type POLYGON decide indicator(s) wish calculate download required resource(s) conduct indicator calculation, adds nested list column portfolio object continue analysis R decide export results GeoPackage use geospatial software","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Quickstart","text":"First, load mapme.biodiversity sf package handling spatial vector data. tabular data handling, also load dplyr tidyrpackages. , read internal GeoPackage includes geometry protected area Dominican Republic WDPA database. sf-object contains single object geometry type MULTIPOLYGON. mapme.biodiversity package, however, supports geometries type POLYGON, thus need cast geometry advance. resulting sf object also contains metadata, retained throughout complete workflow. cast geometries represent artefacts digitization process, example subset largest polygon. following, simulate portfolio consisting several polygons (assets, jargon package). end, create smaller polygons within original extent main polygon. way, can showcase behavior mapme.biodiversity package portfolios contain multiple assets. select single assets geometry type POLYGON lie within original boundary protected area.","code":"library(mapme.biodiversity) library(sf) library(dplyr) library(tidyr)  aoi_path <- system.file(\"extdata\", \"sierra_de_neiba_478140.gpkg\", package = \"mapme.biodiversity\") (aoi <- read_sf(aoi_path)) #> Simple feature collection with 1 feature and 4 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 5 #>   WDPAID NAME            DESIG_ENG     ISO3                                 geom #>    <dbl> <chr>           <chr>         <chr>                  <MULTIPOLYGON [°]> #> 1 478140 Sierra de Neiba National Park DOM   (((-71.76134 18.66333, -71.76067 1… (aoi <- st_cast(aoi, to = \"POLYGON\")[1, ]) #> Warning in st_cast.sf(aoi, to = \"POLYGON\"): repeating attributes for all #> sub-geometries for which they may not be constant #> Simple feature collection with 1 feature and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 5 #>   WDPAID NAME            DESIG_ENG     ISO3                                 geom #>    <dbl> <chr>           <chr>         <chr>                       <POLYGON [°]> #> 1 478140 Sierra de Neiba National Park DOM   ((-71.76134 18.66333, -71.76067 18… aoi_gridded <- st_make_grid(   x = st_bbox(aoi),   n = c(10, 10),   square = FALSE) %>%   st_intersection(aoi) %>%   st_as_sf() %>%   mutate(geom_type = st_geometry_type(x)) %>%   filter(geom_type == \"POLYGON\") %>%   select(-geom_type, geom = x) %>%   st_as_sf()  metanames <- names(st_drop_geometry(aoi)) aoi_gridded[metanames] <- st_drop_geometry(aoi)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"initialization-of-a-portfolio","dir":"Articles","previous_headings":"","what":"Initialization of a portfolio","title":"Quickstart","text":"Now, ready initiate portfolio object containing multiple assets. use init_portfolio() function set attributes important subsequent processing. function add unique identifier column called ‘assetid’ used uniquely identify asset portfolio.  first argument, x, sf-object want turn portfolio. argument years allows us restrict analysis certain years . Certain resources temporal dimension processed portfolio’s temporal extent. resource indicator functions inform user portfolio’s temporal extent intersect. outdir tmpdir arguments point towards directories local file system machine. directories exist, package attempts create . outdir equal tmpdir argument. downloaded resources written respective directories nested within outdir. intermediate files calculation indicator written tmpdir. Thus, please ensure write access directories sufficient free disk space support analysis portfolio. case share common outdir across different portfolios, add_resources arguments controls behavior portfolio initialization. set TRUE, function automatically search resources already available add attributes portfolio. Note, done without checking resources actually match spatio-temporal extent supplied portfolio. use sure current portfolio, resources downloaded previously. set FALSE, pre-existing resources added portfolio. request specific portfolio resources, files downloaded missing match spatio-temporal extent. behavior beneficial share outdir different projects ensure matching resources returned. Finally, verbose logical controls whether package print informative messages calculations. Note, even set FALSE, package inform users potential errors warnings.","code":"# copying package internal resource to a temporary location outdir <- file.path(tempdir(), \"mapme.biodiversity\") dir.create(outdir) resource_dir <- system.file(\"res\", package = \"mapme.biodiversity\") file.copy(resource_dir, outdir, recursive = TRUE) #> [1] TRUE  sample_portfolio <- init_portfolio(   x = aoi_gridded,   years = 2015,   outdir = file.path(outdir, \"res\"),   tmpdir = outdir,   add_resources = FALSE,   verbose = TRUE ) plot(sample_portfolio[\"assetid\"])"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"getting-the-right-resources","dir":"Articles","previous_headings":"","what":"Getting the right resources","title":"Quickstart","text":"can check indicators available via available_indicators() function. , inspect names returned object: Say, interested landcover indicator. can learn indicator required resources using either commands , viewing online version, head landcover documentation. inspecting help page learned indicator requires esalandcover resource require specify arguments. information hand, can start retrieve required resource. can learn available resources using available_resources() function: purpose vignette, going download esalandcover resource. can get detailed information given resource, using either commands open help page. viewing online version documentation, can simply head esalandcover resource documentation. can now make esalandcover resource available portfolio. use common interface used resources, called get_resources(). specify portfolio object names resource(s) wish download. Additional arguments specific resource can specified. output function portfolio object attributes appended new resource, thus simply can overwrite sample_portfolio variable. case want download one resource, can use interface resources made available sequentially. Required arguments resource simply added usual:","code":"names(available_indicators()) #>  [1] \"active_fire_counts\"           \"active_fire_properties\"       #>  [3] \"biome\"                        \"deforestation_drivers\"        #>  [5] \"drought_indicator\"            \"ecoregion\"                    #>  [7] \"elevation\"                    \"fatalities\"                   #>  [9] \"landcover\"                    \"mangroves_area\"               #> [11] \"population_count\"             \"precipitation_chirps\"         #> [13] \"precipitation_wc\"             \"soilproperties\"               #> [15] \"temperature_max_wc\"           \"temperature_min_wc\"           #> [17] \"traveltime\"                   \"treecover_area\"               #> [19] \"treecover_area_and_emissions\" \"treecoverloss_emissions\"      #> [21] \"tri\" ?landcover help(landcover) names(available_resources()) #>  [1] \"chirps\"                    \"esalandcover\"              #>  [3] \"fritz_et_al\"               \"gfw_emissions\"             #>  [5] \"gfw_lossyear\"              \"gfw_treecover\"             #>  [7] \"gmw\"                       \"nasa_firms\"                #>  [9] \"nasa_grace\"                \"nasa_srtm\"                 #> [11] \"nelson_et_al\"              \"soilgrids\"                 #> [13] \"teow\"                      \"ucdp_ged\"                  #> [15] \"worldclim_max_temperature\" \"worldclim_min_temperature\" #> [17] \"worldclim_precipitation\"   \"worldpop\" ?esalandcover help(esalandcover) sample_portfolio <- get_resources(x = sample_portfolio, resources = \"esalandcover\") #> Starting process to download resource 'esalandcover'........ #> Checking URLs for existence. This may take a while... #> Skipping existing files in output directory. sample_portfolio <- get_resources(   x = sample_portfolio,   resources = c(\"esalandcover\", \"gfw_treecover\"),   vers_treecover = \"GFC-2021-v1.9\" )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"calculate-specific-indicators","dir":"Articles","previous_headings":"","what":"Calculate specific indicators","title":"Quickstart","text":"next step consists calculating specific indicators. Note indicator requires one resources made available via get_resources() function explained . , going calculate landcover indicator based esalandcover resource. Since resource made available previous step, can continue requesting calculation desired indicator. Note command issue error case required resource made available via get_resources() beforehand. Now let’s take look results. select metadata output indicator column get clearer picture happened. obtained new listed column sf object called like requested indicator. asset portfolio, column contains tibble variable rows 4 columns. Let’s closer look one objects. asset, result tibble long format indicating absolute area (ha) percentage different landcover types year 2015 (make sure read detailed indicator documentation via ?landcover). Let’s quickly visualize results single asset. readability plot, aggregate several different types forest single class :  wish conduct statistical analysis R, can use tidyr functionality unnest one multiple columns. Especially large portfolios, usually good idea keep geometry information separated variable keep size data object relatively small.","code":"sample_portfolio <- calc_indicators(sample_portfolio, indicators = \"landcover\") (sample_portfolio <- sample_portfolio %>% select(assetid, WDPAID, landcover)) #> Simple feature collection with 20 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 20 × 4 #>    assetid WDPAID landcover                                                 geom #>      <int>  <dbl> <list>                                           <POLYGON [°]> #>  1       1 478140 <tibble [7 × 4]>  ((-71.78546 18.658, -71.78546 18.67313, -71… #>  2       2 478140 <tibble [7 × 4]>  ((-71.80292 18.68321, -71.78546 18.67313, -… #>  3       3 478140 <tibble [7 × 4]>  ((-71.76134 18.66333, -71.76067 18.66267, -… #>  4       4 478140 <tibble [5 × 4]>  ((-71.7616 18.69374, -71.7616 18.68691, -71… #>  5       5 478140 <tibble [7 × 4]>  ((-71.73417 18.64352, -71.71386 18.63179, -… #>  6       6 478140 <tibble [6 × 4]>  ((-71.66801 18.63288, -71.69 18.64557, -71.… #>  7       7 478140 <tibble [6 × 4]>  ((-71.71386 18.68865, -71.71386 18.68691, -… #>  8       8 478140 <tibble [9 × 4]>  ((-71.65801 18.68222, -71.66613 18.68691, -… #>  9       9 478140 <tibble [4 × 4]>  ((-71.66613 18.63079, -71.66613 18.62665, -… #> 10      10 478140 <tibble [9 × 4]>  ((-71.63562 18.67697, -71.64227 18.67313, -… #> 11      11 478140 <tibble [10 × 4]> ((-71.59453 18.66749, -71.59453 18.64815, -… #> 12      12 478140 <tibble [8 × 4]>  ((-71.52294 18.61972, -71.52294 18.63179, -… #> 13      13 478140 <tibble [3 × 4]>  ((-71.54943 18.67465, -71.5468 18.67313, -7… #> 14      14 478140 <tibble [9 × 4]>  ((-71.49535 18.64342, -71.49907 18.64557, -… #> 15      15 478140 <tibble [8 × 4]>  ((-71.46559 18.63735, -71.4752 18.63179, -7… #> 16      16 478140 <tibble [2 × 4]>  ((-71.43534 18.63634, -71.43264 18.63478, -… #> 17      17 478140 <tibble [9 × 4]>  ((-71.42747 18.62066, -71.42747 18.60424, -… #> 18      18 478140 <tibble [8 × 4]>  ((-71.35587 18.582, -71.35587 18.59046, -71… #> 19      19 478140 <tibble [8 × 4]>  ((-71.37974 18.61442, -71.37974 18.60424, -… #> 20      20 478140 <tibble [6 × 4]>  ((-71.34017 18.59953, -71.35587 18.59046, -… sample_portfolio$landcover[10] #> [[1]] #> # A tibble: 9 × 4 #>   classes                            year    area percentage #>   <chr>                              <chr>  <dbl>      <dbl> #> 1 shrubs                             2015   47.1    0.0341   #> 2 herbaceous_vegetation              2015  262.     0.190    #> 3 closed_forest_evergreen_broad_leaf 2015  190.     0.137    #> 4 closed_forest_deciduous_broad_leaf 2015    1.15   0.000833 #> 5 closed_forest_mixed                2015  117.     0.0849   #> 6 closed_forest_unknown              2015   10.3    0.00749  #> 7 open_forest_evergreen_broad_leaf   2015  201.     0.146    #> 8 open_forest_deciduous_broad_leaf   2015   10.3    0.00749  #> 9 open_forest_unknown                2015  541.     0.392 geometries <- select(sample_portfolio, assetid) sample_portfolio %>%   st_drop_geometry() %>%   tidyr::unnest(landcover) %>%   filter(assetid == 3) #> # A tibble: 7 × 6 #>   assetid WDPAID classes                            year    area percentage #>     <int>  <dbl> <chr>                              <chr>  <dbl>      <dbl> #> 1       3 478140 shrubs                             2015    5.75    0.00422 #> 2       3 478140 herbaceous_vegetation              2015  107.      0.0785  #> 3       3 478140 closed_forest_evergreen_broad_leaf 2015  455.      0.334   #> 4       3 478140 closed_forest_mixed                2015  422.      0.310   #> 5       3 478140 closed_forest_unknown              2015    6.90    0.00507 #> 6       3 478140 open_forest_evergreen_broad_leaf   2015   98.8     0.0726  #> 7       3 478140 open_forest_unknown                2015  265.      0.195"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"enabling-parallel-computing","dir":"Articles","previous_headings":"","what":"Enabling parallel computing","title":"Quickstart","text":"{mapme.biodiversity} follows parallelization paradigm {future} package. means user control like set parallel processing. Currently, mapme.biodiversity supports parallel processing asset level calc_indicators() function . also currently assume parallel processing done cores single machine. future developments, like support distributed processing. working distributed use-cases, please contact developers, e.g. via discussion board mail. process e.g. 6 assets parallel report progress bar set following code: Note, code uses future::multisession() parallel backend. backend resolve calculation multiple background R sessions. use backend operating Windows, using R Studio otherwise sure backend use. case operating system allows process forking using R Studio, consider using future::multicore() efficient parallel processing.","code":"library(future) library(progressr)  plan(multisession, workers = 6) # set up parallel plan with 6 concurrent threads  with_progress({   portfolio <- calc_indicators(     sample_portfolio,     indicators = \"landcover\"   ) })  plan(sequential) # close child processes"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"exporting-an-portfolio-object","dir":"Articles","previous_headings":"","what":"Exporting an portfolio object","title":"Quickstart","text":"can use write_portfolio() function save processed portfolio object disk GeoPackage. allows sharing data others might using R, geospatial software. Simply point towards non-existing file local disk write portfolio. function create individual table processed indicators. Via read_portfolio() function, portfolio written disk way can read back R. However, users note portfolio-wide arguments set portfolio initialization reconstructed (e.g. temporal extent, outdir tmpdir, etc.). Thus wish continue use mapme.biodiversity functionality portfolio object, make sure re-run init_portfolio() .","code":"tmp_output <- tempfile(fileext = \".gpkg\") write_portfolio(   x = sample_portfolio,   dsn = tmp_output ) #> Writing layer `metadata' to data source  #>   `/tmp/Rtmpf7UsWN/file25f751c29dcf.gpkg' using driver `GPKG' #> Writing 20 features with 2 fields and geometry type Polygon. #> Updating layer `landcover' to data source `/tmp/Rtmpf7UsWN/file25f751c29dcf.gpkg' using driver `GPKG' #> Writing 138 features with 5 fields without geometries. (portfolio_from_disk <- read_portfolio(tmp_output)) #> Simple feature collection with 20 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 20 × 4 #>    assetid WDPAID landcover                                                 geom #>      <int>  <dbl> <list>                                           <POLYGON [°]> #>  1       1 478140 <tibble [7 × 4]>  ((-71.78546 18.658, -71.78546 18.67313, -71… #>  2       2 478140 <tibble [7 × 4]>  ((-71.80292 18.68321, -71.78546 18.67313, -… #>  3       3 478140 <tibble [7 × 4]>  ((-71.76134 18.66333, -71.76067 18.66267, -… #>  4       4 478140 <tibble [5 × 4]>  ((-71.7616 18.69374, -71.7616 18.68691, -71… #>  5       5 478140 <tibble [7 × 4]>  ((-71.73417 18.64352, -71.71386 18.63179, -… #>  6       6 478140 <tibble [6 × 4]>  ((-71.66801 18.63288, -71.69 18.64557, -71.… #>  7       7 478140 <tibble [6 × 4]>  ((-71.71386 18.68865, -71.71386 18.68691, -… #>  8       8 478140 <tibble [9 × 4]>  ((-71.65801 18.68222, -71.66613 18.68691, -… #>  9       9 478140 <tibble [4 × 4]>  ((-71.66613 18.63079, -71.66613 18.62665, -… #> 10      10 478140 <tibble [9 × 4]>  ((-71.63562 18.67697, -71.64227 18.67313, -… #> 11      11 478140 <tibble [10 × 4]> ((-71.59453 18.66749, -71.59453 18.64815, -… #> 12      12 478140 <tibble [8 × 4]>  ((-71.52294 18.61972, -71.52294 18.63179, -… #> 13      13 478140 <tibble [3 × 4]>  ((-71.54943 18.67465, -71.5468 18.67313, -7… #> 14      14 478140 <tibble [9 × 4]>  ((-71.49535 18.64342, -71.49907 18.64557, -… #> 15      15 478140 <tibble [8 × 4]>  ((-71.46559 18.63735, -71.4752 18.63179, -7… #> 16      16 478140 <tibble [2 × 4]>  ((-71.43534 18.63634, -71.43264 18.63478, -… #> 17      17 478140 <tibble [9 × 4]>  ((-71.42747 18.62066, -71.42747 18.60424, -… #> 18      18 478140 <tibble [8 × 4]>  ((-71.35587 18.582, -71.35587 18.59046, -71… #> 19      19 478140 <tibble [8 × 4]>  ((-71.37974 18.61442, -71.37974 18.60424, -… #> 20      20 478140 <tibble [6 × 4]>  ((-71.34017 18.59953, -71.35587 18.59046, -…"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Darius . Görgen. Author, maintainer. Om Prakash Bhandari. Author.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Görgen D, Bhandari O (2023). mapme.biodiversity: Efficient Monitoring Global Biodiversity Portfolios. R package version 0.4.0.9000,  https://github.com/mapme-initiative/mapme.biodiversity/, https://mapme-initiative.github.io/mapme.biodiversity/index.html.","code":"@Manual{,   title = {mapme.biodiversity: Efficient Monitoring of Global Biodiversity Portfolios},   author = {Darius A. Görgen and Om Prakash Bhandari},   year = {2023},   note = {R package version 0.4.0.9000,  https://github.com/mapme-initiative/mapme.biodiversity/},   url = {https://mapme-initiative.github.io/mapme.biodiversity/index.html}, }"},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"An R package for processing global biodiversity data","text":"Biodiversity areas, especially primary forests, provide multiple ecosystem services local population planet whole. rapid expansion human land use natural ecosystems impacts global climate crisis put natural ecosystems global biodiversity threat. mapme.biodiversity package helps analyse number biodiversity related indicators biodiversity threats based freely available geodata-sources Global Forest Watch. supports computational efficient routines heavy parallel computing cloud-infrastructures AWS Microsoft Azure using statistical programming language R. package allows analysis global biodiversity portfolios thousand millions AOIs normally possible dedicated platforms Google Earth Engine. provides possibility e.g. analyse World Database Protected Areas (WDPA) number relevant indicators. primary use case package support scientific analysis data science individuals organizations seek preserve planet biodiversity. development funded German Development Bank KfW.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for processing global biodiversity data","text":"package dependencies can installed CRAN via: install development version, use following command:","code":"install.packages(\"mapme.biodiversity\") remotes::install_github(\"https://github.com/mapme-initiative/mapme.biodiversity\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage example","title":"An R package for processing global biodiversity data","text":"mapme.biodiversity works constructing portfolio sf object. Specific raster vector resource matching spatio-temporal extent portfolio made available locally. required resources available, indicators can calculated individually asset portfolio. list available resources indicators run: decided indicator interested , can initialize biodiversity portfolio using sf-object contains geometries type POLYGON via init_portfolio() function call. set important information needed processing chain. can request download resource required calculate specific indicators. indicator calculated individually assets portfolio, data returned nested list column original object.","code":"library(mapme.biodiversity) library(sf) ## Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE resources <- names(available_resources()) indicators <- names(available_indicators()) cat(sprintf(   \"Supported resources:\\n- %s\\n\\nSupported indicators:\\n- %s\",   paste(resources, collapse = \"\\n- \"),   paste(indicators, collapse = \"\\n- \") )) ## Supported resources: ## - chirps ## - esalandcover ## - fritz_et_al ## - gfw_emissions ## - gfw_lossyear ## - gfw_treecover ## - gmw ## - nasa_firms ## - nasa_grace ## - nasa_srtm ## - nelson_et_al ## - soilgrids ## - teow ## - ucdp_ged ## - worldclim_max_temperature ## - worldclim_min_temperature ## - worldclim_precipitation ## - worldpop ##  ## Supported indicators: ## - active_fire_counts ## - active_fire_properties ## - biome ## - deforestation_drivers ## - drought_indicator ## - ecoregion ## - elevation ## - fatalities ## - landcover ## - mangroves_area ## - population_count ## - precipitation_chirps ## - precipitation_wc ## - soilproperties ## - temperature_max_wc ## - temperature_min_wc ## - traveltime ## - treecover_area ## - treecover_area_and_emissions ## - treecoverloss_emissions ## - tri (system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\", package = \"mapme.biodiversity\") %>%   sf::read_sf() %>%   init_portfolio(     years = 2016:2017,     outdir = system.file(\"res\", package = \"mapme.biodiversity\"),     tmpdir = system.file(\"tmp\", package = \"mapme.biodiversity\"),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(     resources = c(\"gfw_treecover\", \"gfw_lossyear\", \"gfw_emissions\"),     vers_treecover = \"GFC-2020-v1.8\", vers_lossyear = \"GFC-2020-v1.8\"   ) %>%   calc_indicators(\"treecover_area_and_emissions\", min_size = 1, min_cover = 30) %>%   tidyr::unnest(treecover_area_and_emissions)) ## Simple feature collection with 2 features and 8 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 ## Geodetic CRS:  WGS 84 ## # A tibble: 2 × 9 ##   WDPAID NAME            DESIG_ENG     ISO3  assetid years emissions treecover ##    <dbl> <chr>           <chr>         <chr>   <int> <int>     <dbl>     <dbl> ## 1 478140 Sierra de Neiba National Park DOM         1  2016      2832     2357. ## 2 478140 Sierra de Neiba National Park DOM         1  2017      3468     2345. ## # ℹ 1 more variable: geom <POLYGON [°]>"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"a-note-on-parallel-computing","dir":"","previous_headings":"","what":"A note on parallel computing","title":"An R package for processing global biodiversity data","text":"{mapme.biodiversity} follows parallel computing paradigm {future} package. means user control like set parallel processing. Currently, {mapme.biodiversity} supports parallel processing asset level calc_indicators() function . also currently assume parallel processing done cores single machine. future developments, like support distributed processing. working distributed use-cases, please contact developers, e.g. via discussion board mail. process 6 assets parallel report progress bar set following code: Note, code uses future::multisession() parallel backend. backend resolve calculation multiple background R sessions. use backend operating Windows, using RStudio otherwise sure backend use. case operating system allows process forking using RStudio, consider using future::multicore() efficient parallel processing. Head online documentation find detailed information package.","code":"library(future) library(progressr)  plan(multisession, workers = 6) # set up parallel plan  with_progress({   portfolio <- calc_indicators(     portfolio,     \"treecover_area_and_emissions\",     min_size = 1,     min_cover = 30   ) })  plan(sequential) # close child processes"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"function allows efficiently calculate number fire events occurred region interest NASA FIRMS active fire polygon datasets. polygon, fire event counts desired year returned. required resources indicator : nasa_firms","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"tibble column number fire events per year instrument.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2021,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nasa_firms\", instrument = \"VIIRS\") %>%   calc_indicators(\"active_fire_counts\") %>%   tidyr::unnest(active_fire_counts)  aoi #> Simple feature collection with 1 feature and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 9 #>   WDPAID NAME        DESIG_ENG ISO3  assetid instrument year  active_fire_counts #>    <dbl> <chr>       <chr>     <chr>   <int> <chr>      <chr>              <int> #> 1 478140 Sierra de … National… DOM         1 VIIRS      2021                  21 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"function allows efficiently extract properties fire events occurred region interest NASA FIRMS active fire polygon datasets. polygon, fire events properties like fire pixel brightness temperature, fire radiative power (frp) along fire hotspots desired year returned. required resources indicator : nasa_firms","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"tibble column 15 different fire events variables including lon/lat coordinates.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2021,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nasa_firms\", instrument = \"VIIRS\") %>%   calc_indicators(\"active_fire_properties\") %>%   tidyr::unnest(active_fire_properties)  aoi #> Simple feature collection with 21 features and 20 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 21 #>    WDPAID NAME  DESIG_ENG ISO3  assetid bright_ti4  scan track acq_date acq_time #>     <dbl> <chr> <chr>     <chr>   <int>      <dbl> <dbl> <dbl> <chr>       <int> #>  1 478140 Sier… National… DOM         1       338.  0.49  0.41 2021-01…     1812 #>  2 478140 Sier… National… DOM         1       341.  0.39  0.36 2021-01…     1754 #>  3 478140 Sier… National… DOM         1       298.  0.67  0.73 2021-01…      524 #>  4 478140 Sier… National… DOM         1       299.  0.67  0.73 2021-01…      524 #>  5 478140 Sier… National… DOM         1       333.  0.33  0.55 2021-02…     1718 #>  6 478140 Sier… National… DOM         1       345.  0.68  0.74 2021-02…     1700 #>  7 478140 Sier… National… DOM         1       346.  0.42  0.45 2021-03…     1736 #>  8 478140 Sier… National… DOM         1       346.  0.41  0.61 2021-03…     1712 #>  9 478140 Sier… National… DOM         1       336.  0.39  0.36 2021-03…     1754 #> 10 478140 Sier… National… DOM         1       331.  0.39  0.36 2021-03…     1754 #> # ℹ 11 more rows #> # ℹ 11 more variables: satellite <chr>, instrument <chr>, confidence <chr>, #> #   version <int>, bright_ti5 <dbl>, frp <dbl>, daynight <chr>, type <int>, #> #   longitude <dbl>, latitude <dbl>, geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Backlog function for available indicators — available_indicators","title":"Backlog function for available indicators — available_indicators","text":"Returns list indicator names parametrization options specified indicators. resource names provided, lists available indicators, including custom registered ones. Use learn possible additional arguments can specified requesting indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backlog function for available indicators — available_indicators","text":"","code":"available_indicators(indicators = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backlog function for available indicators — available_indicators","text":"indicators NULL returns list registered indicators (default). Otherwise ones specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backlog function for available indicators — available_indicators","text":"list object.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backlog function for available indicators — available_indicators","text":"","code":"names(available_indicators()) #>  [1] \"active_fire_counts\"           \"active_fire_properties\"       #>  [3] \"biome\"                        \"deforestation_drivers\"        #>  [5] \"drought_indicator\"            \"ecoregion\"                    #>  [7] \"elevation\"                    \"fatalities\"                   #>  [9] \"landcover\"                    \"mangroves_area\"               #> [11] \"population_count\"             \"precipitation_chirps\"         #> [13] \"precipitation_wc\"             \"soilproperties\"               #> [15] \"temperature_max_wc\"           \"temperature_min_wc\"           #> [17] \"traveltime\"                   \"treecover_area\"               #> [19] \"treecover_area_and_emissions\" \"treecoverloss_emissions\"      #> [21] \"tri\""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Backlog function for available resources — available_resources","title":"Backlog function for available resources — available_resources","text":"Returns list resource names parametrization options specified resources. resource names provided, lists available resources, including custom registered ones. Use learn possible additional arguments can specified requesting resource.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backlog function for available resources — available_resources","text":"","code":"available_resources(resources = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backlog function for available resources — available_resources","text":"resources NULL returns list resources (default). Otherwise ones specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backlog function for available resources — available_resources","text":"list object.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/available_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backlog function for available resources — available_resources","text":"","code":"names(available_resources()) #>  [1] \"chirps\"                    \"esalandcover\"              #>  [3] \"fritz_et_al\"               \"gfw_emissions\"             #>  [5] \"gfw_lossyear\"              \"gfw_treecover\"             #>  [7] \"gmw\"                       \"nasa_firms\"                #>  [9] \"nasa_grace\"                \"nasa_srtm\"                 #> [11] \"nelson_et_al\"              \"soilgrids\"                 #> [13] \"teow\"                      \"ucdp_ged\"                  #> [15] \"worldclim_max_temperature\" \"worldclim_min_temperature\" #> [17] \"worldclim_precipitation\"   \"worldpop\""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate biomes statistics (TEOW) based on WWF — biome","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"function allows efficiently retrieve name biomes compute corresponding area Terrestrial Ecoregions World (TEOW) - World Wildlife Fund (WWF) polygons. polygon, name area biomes (hectare) returned. required resources indicator : teow","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"tibble column name biomes corresponding area (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2001,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"teow\") %>%   calc_indicators(\"biome\") %>%   tidyr::unnest(biome)  aoi #> Simple feature collection with 1 feature and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 8 #>   WDPAID NAME    DESIG_ENG ISO3  assetid biomes   area                      geom #>    <dbl> <chr>   <chr>     <chr>   <int> <chr>   <dbl>             <POLYGON [°]> #> 1 478140 Sierra… National… DOM         1 Tropi… 18349. ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/calc_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute specific indicators — calc_indicators","title":"Compute specific indicators — calc_indicators","text":"calc_indicators() specific biodiversity indicators can calculated. requirement resources mandatory inputs requested indicators available locally. Multiple indicators respective additional arguments can supplied. can check available indicators requirement via available_indicators(), function also gracefully inform misspecifications.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/calc_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute specific indicators — calc_indicators","text":"","code":"calc_indicators(x, indicators, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/calc_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute specific indicators — calc_indicators","text":"x biodiversity portfolio object constructed via init_portfolio() indicators character vector indicating requested indicators. specified indicators must supported package. can use available_indicators() get information, e.g. additional required arguments default values, supported indicators ... Additional arguments required requested indicators. Check available_indicators() learn supported indicators arguments.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/calc_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute specific indicators — calc_indicators","text":"sf portfolio object x additional nested list column per requested indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"resource published Funk et al. (2015) represents quasi-global (50°S-50°S) rainfall estimation monthly resolution starting year 1981 near-present. spatial resolution 0.05°. data can used retrieve information amount rainfall. Due availability +30 years, anomaly detection long-term average analysis also possible. routine download complete archive order support long-term average anomaly calculations respect 1981 - 2010 climate normal period. Thus additional arguments need specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"Global raster layers available years 1981 near-present.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/cogs/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"Funk, C., Peterson, P., Landsfeld, M. et al. climate hazards infrared precipitation stations—new environmental record monitoring extremes. Sci Data 2, 150066 (2015). doi:10.1038/sdata.2015.66","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate deforestation drivers — deforestation_drivers","title":"Calculate deforestation drivers — deforestation_drivers","text":"function extracts areal statistics drivers deforestation based data source produced Fritz et al (2022). required resource : fritz_et_al","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate deforestation drivers — deforestation_drivers","text":"tibble 3 columns indicating class deforestation driver, absolute area ha, percentage relation total area forest loss indicated Fritz et al. (2022) resource.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate deforestation drivers — deforestation_drivers","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2021,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"fritz_et_al\", res_drivers = 100) %>%   calc_indicators(\"deforestation_drivers\") %>%   tidyr::unnest(deforestation_drivers)  aoi #> Simple feature collection with 10 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 10 × 9 #>    WDPAID NAME            DESIG_ENG     ISO3  assetid class         area percent #>     <dbl> <chr>           <chr>         <chr>   <int> <chr>        <dbl>   <dbl> #>  1 478140 Sierra de Neiba National Park DOM         1 commercial…     0        0 #>  2 478140 Sierra de Neiba National Park DOM         1 commercial…     0        0 #>  3 478140 Sierra de Neiba National Park DOM         1 managed fo…     0        0 #>  4 478140 Sierra de Neiba National Park DOM         1 mining          0        0 #>  5 478140 Sierra de Neiba National Park DOM         1 natural di…     0        0 #>  6 478140 Sierra de Neiba National Park DOM         1 pasture         0        0 #>  7 478140 Sierra de Neiba National Park DOM         1 roads           0        0 #>  8 478140 Sierra de Neiba National Park DOM         1 wildfire        0        0 #>  9 478140 Sierra de Neiba National Park DOM         1 other subs… 16115.       1 #> 10 478140 Sierra de Neiba National Park DOM         1 shifting c…     0        0 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate drought indicator statistics — drought_indicator","title":"Calculate drought indicator statistics — drought_indicator","text":"function allows efficiently calculate relative wetness shallow groundwater section regard 1948-2012 reference period. values represent wetness percentile given area achieves given point time regard reference period. polygon, desired statistic/s (mean, median sd) /returned. required resources indicator : nasa_grace","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate drought indicator statistics — drought_indicator","text":"tibble column specified stats column respective date.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate drought indicator statistics — drought_indicator","text":"following arguments can set: stats_drought Function applied compute statistics polygons either one multiple inputs character \"mean\", \"median\" \"sd\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate drought indicator statistics — drought_indicator","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2022,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nasa_grace\") %>%   calc_indicators(\"drought_indicator\",     stats_drought = c(\"mean\", \"median\"),     engine = \"extract\"   ) %>%   tidyr::unnest(drought_indicator) #> Error in map2(.x, vec_index(.x), .f, ...): ℹ In index: 1. #> ℹ With name: nasa_grace. #> Caused by error in `.read_raster_source()`: #> ! Did not find equal number of tiles per timestep.  aoi #> Error in eval(expr, envir, enclos): object 'aoi' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"function allows efficiently retrieve name ecoregions compute corresponding area Terrestrial Ecoregions World (TEOW) - World Wildlife Fund (WWF) polygons. polygon, name area ecoregions (hectare) returned. required resources indicator : teow","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"tibble column name ecoregions corresponding area (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2001,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"teow\") %>%   calc_indicators(\"ecoregion\") %>%   tidyr::unnest(ecoregion)  aoi #> Simple feature collection with 1 feature and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 8 #>   WDPAID NAME            DESIG_ENG     ISO3  assetid ecoregions             area #>    <dbl> <chr>           <chr>         <chr>   <int> <chr>                 <dbl> #> 1 478140 Sierra de Neiba National Park DOM         1 Hispaniolan pine fo… 18349. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate elevation statistics — elevation","title":"Calculate elevation statistics — elevation","text":"function allows efficiently calculate elevation statistics polygons. polygon, desired statistic/s (mean, median sd) /returned. required resources indicator : nasa_srtm","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate elevation statistics — elevation","text":"tibble column elevation statistics (meters)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate elevation statistics — elevation","text":"following arguments can set: stats_elevation Function applied compute statistics polygons either one multiple inputs character.  Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate elevation statistics — elevation","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2000:2020,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nasa_srtm\") %>%   calc_indicators(\"elevation\",     stats_elevation = c(\"mean\", \"median\", \"sd\", \"var\"), engine = \"extract\"   ) %>%   tidyr::unnest(elevation)  aoi #> Simple feature collection with 1 feature and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 10 #>   WDPAID NAME            DESIG_ENG ISO3  assetid elevation_mean elevation_median #>    <dbl> <chr>           <chr>     <chr>   <int>          <dbl>            <dbl> #> 1 478140 Sierra de Neiba National… DOM         1          1704.             1702 #> # ℹ 3 more variables: elevation_sd <dbl>, elevation_var <dbl>, #> #   geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":null,"dir":"Reference","previous_headings":"","what":"ESA Copernicus Global Land Cover layer — esalandcover","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"100 meter spatial resolution land cover resource published Buchhorn et al. (2020) \"Copernicus Global Land Cover Layers—Collection 2\". resource represents actual surface cover ground available annually period 2015 2019. cell values range 0 200, representing total 23 discrete classifications ESA.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"global tiled raster resource available years 2015 2019.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"https://lcviewer.vito./download","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"© European Union, Copernicus Land Monitoring Service (year), European Environment Agency (EEA)\", f.ex. 2018: “© European Union, Copernicus Land Monitoring Service 2018, European Environment Agency (EEA)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"indicator aggregated number fatalities within given asset monthly cadence stratified type conflict. different types conflicts encoded UCDP GED database : state-based conflict non-state conflict one-sided violence","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"tibble column date (year month), type violence counts civilian fatalities, unknown fatalities total sum fatalities.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"required resources indicator : ucdp_ged may apply quality filters based precision geolocation events temporal precision. default, set include events highest precision scores. geo-precision levels 1 7 decreasing accuracy: value 1: location information corresponds exactly geographical coordinates available value 2: location information refers limited area around specified location value 3: source refers can specified larger location level second order administrative divisions (ADM2), district municipality, GED uses centroid point coordinates ADM2. value 4: location information refers first order administrative division, province (ADM1), GED uses coordinates centroid point ADM1 value 5: used different cases source refers parts country larger ADM1, smaller entire country; two locations mentioned representiative point selected; location mentioned non-independend island; location specifically mentioned relation another location value 6: location mentioned refers entire country centroid used value 7: event takes place water international airspace, geographical coordinates dataset either represent centroid point certain water area estimated coordinates temporal precision levels 1 5 decreasing precision: value 1: exact date event known value 2: start enddates events unspecified character, spanning one calendar day though longer six days value 3: start end dates events specified certain week, specific dates provided value 4: start end dates events specified certain month value 5: start enddates events specified certain year, specific dates provided following arguments can set: precision_location numeric indicating precision value geolocation events included. Defaults 1. precision_time numeric indicating precision value temporal coding events included. Defaults 1.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"Sundberg, Ralph, Erik Melander, 2013, “Introducing UCDP Georeferenced Event Dataset”, Journal Peace Research, vol.50, .4, 523-532","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"burundi.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 1991:1992,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"ucdp_ged\", version_ged = \"22.1\") %>%   calc_indicators(\"fatalities\",     precision_location = 1, precision_time = 1   ) %>%   tidyr::unnest(fatalities)  aoi #> Simple feature collection with 72 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 29.02493 ymin: -4.499983 xmax: 30.75226 ymax: -2.348487 #> Geodetic CRS:  +proj=longlat +datum=WGS84 +no_defs #> # A tibble: 72 × 9 #>    sov_a3 assetid month      type_of_violence    deaths_civilians deaths_unknown #>    <chr>    <int> <date>     <chr>                          <dbl>          <dbl> #>  1 BDI          1 1991-01-01 state-based confli…                0              0 #>  2 BDI          1 1991-01-01 non-state conflict                 0              0 #>  3 BDI          1 1991-01-01 one-sided violence                 0              0 #>  4 BDI          1 1991-02-01 state-based confli…                0              0 #>  5 BDI          1 1991-02-01 non-state conflict                 0              0 #>  6 BDI          1 1991-02-01 one-sided violence                 0              0 #>  7 BDI          1 1991-03-01 state-based confli…                0              0 #>  8 BDI          1 1991-03-01 non-state conflict                 0              0 #>  9 BDI          1 1991-03-01 one-sided violence                 0              0 #> 10 BDI          1 1991-04-01 state-based confli…                0              0 #> # ℹ 62 more rows #> # ℹ 3 more variables: deaths_total <dbl>, event_count <int>, geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":null,"dir":"Reference","previous_headings":"","what":"Drivers of deforestation for tropical forests — fritz_et_al","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"resource produced neirest-neighbour matching crowd-sourced campaign map dominant driver forest loss based visual interpretation VHR images matched Global Forest Loss data Hansen (2013) version 1.7 forest loss layer re sampled resolution 100 1.000 meters. Dominant drivers determined period 2008 2009.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"Global raster layer available deforestation drivers period 2008-2019.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"https://zenodo.org/record/7997885","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"indicates 9 different classes: commercial agriculture commercial oil palm plantations managed forests mining natural disturbances pasture roads wildfire subsistence agriculture shifting cultivation following argument specified: res_drivers integer indicating resolution download. Defaults 100.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"Steffen, F., Carlos, J.C.L., See. L., Schepaschenko D., Hofhansl F., Jung M., Dürauer M., Georgieva ., Danylo O., Lesiv M., McCallum . (2022) Continental Assessment Drivers Tropical Deforestation Focus Protected Areas. F.Cos.Sc.(3) doi:10.3389/fcosc.2022.830248","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/get_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Download specific biodiversity resources — get_resources","title":"Download specific biodiversity resources — get_resources","text":"get_resources() specific biodiversity data sets required calculation indicators can downloaded. function supports specification several indicators respective additional arguments. can check required arguments via available_resources(), function gracefully inform misspecifications.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/get_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download specific biodiversity resources — get_resources","text":"","code":"get_resources(x, resources, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/get_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download specific biodiversity resources — get_resources","text":"x biodiversity portfolio object constructed via init_portfolio() resources character vector indicating requested resources. specified resources must supported package. can use available_resources() get information, e.g. additional required arguments default values, supported resources. ... Additional arguments required requested resources. Check available_resources() learn supported resources arguments.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/get_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download specific biodiversity resources — get_resources","text":"Primarily called side effect downloading resources. Returns sf portfolio object x attributes amended requested resources.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest greenhouse gas emissions — gfw_emissions","title":"Forest greenhouse gas emissions — gfw_emissions","text":"resource part publication Harris et al. (2021) \"Global maps twenty-first century forest carbon fluxes.\". represents \"greenhouse gas emissions arising stand-replacing forest disturbances occurred modelled year (megagrams CO2 emissions/ha, 2001 2021). Emissions include relevant ecosystem carbon pools (aboveground biomass, belowground biomass, dead wood, litter, soil) greenhouse gases (CO2, CH4, N2O).\" area unit downloaded corresponds \"megagrams CO2 emissions/pixel\" layer, order support calculation area-wise emissions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Forest greenhouse gas emissions — gfw_emissions","text":"global tiled raster resource available land areas.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Forest greenhouse gas emissions — gfw_emissions","text":"https://data.globalforestwatch.org/datasets/gfw::forest-greenhouse-gas-emissions/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forest greenhouse gas emissions — gfw_emissions","text":"arguments users need specify. However, users note spatial extent dataset totally cover extent treecover2000 lossyear resources Hansen et al. (2013). missing value (NA) inserted greenhouse gas emissions areas data available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forest greenhouse gas emissions — gfw_emissions","text":"Harris, N.L., Gibbs, D.., Baccini, . et al. Global maps twenty-first century forest carbon fluxes. Nat. Clim. Chang. 11, 234–240 (2021). https://doi.org/10.1038/s41558-020-00976-6","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Year of forest loss occurrence — gfw_lossyear","title":"Year of forest loss occurrence — gfw_lossyear","text":"resource part publication Hansen et al. (2013) \"High-Resolution Global Maps 21st-Century Forest Cover Change\". represents \"Forest loss period 2000–2021, defined stand-replacement disturbance, change forest non-forest state. Encoded either 0 (loss) else value range 1–20, representing loss detected primarily year 2001–2021, respectively.\" Due changes satellites products used compilation tree loss product, results year 2011 afterwards directly comparable reprocessing finished. Users aware limitation, especially timeframe analysis spans two periods delimited year 2011.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Year of forest loss occurrence — gfw_lossyear","text":"global tiled raster resource available land areas.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Year of forest loss occurrence — gfw_lossyear","text":"https://data.globalforestwatch.org/documents/tree-cover-loss/explore","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Year of forest loss occurrence — gfw_lossyear","text":"following argument can set: vers_lossyear version dataset download. Defaults \"GFC-2022-v1.10\". Check mapme.biodiversity:::.available_gfw_versions() get list available versions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Year of forest loss occurrence — gfw_lossyear","text":"Hansen, M. C., P. V. Potapov, R. Moore, M. Hancher, S. . Turubanova, . Tyukavina, D. Thau, S. V. Stehman, S. J. Goetz, T. R. Loveland, . Kommareddy, . Egorov, L. Chini, C. O. Justice, J. R. G. Townshend. 2013. “High-Resolution Global Maps 21st-Century Forest Cover Change.” Science 342 (15 November): 850–53.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":null,"dir":"Reference","previous_headings":"","what":"Treecover for the year 2000 — gfw_treecover","title":"Treecover for the year 2000 — gfw_treecover","text":"resource part publication Hansen et al. (2013) represents \"tree cover year 2000, defined canopy closure vegetation taller 5m height. Encoded percentage per output grid cell, range 0–100.\" Due changes satellites products used compilation treecover product, results year 2011 afterwards directly comparable reprocessing finished. Users aware limitation, especially timeframe analysis spans two periods delimited year 2011.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Treecover for the year 2000 — gfw_treecover","text":"global tiled raster resource available land areas.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Treecover for the year 2000 — gfw_treecover","text":"https://data.globalforestwatch.org/documents/tree-cover-2000/explore","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treecover for the year 2000 — gfw_treecover","text":"following argument can set: vers_treecover version dataset download. Defaults \"GFC-2022-v1.10\". Check mapme.biodiversity:::.available_gfw_versions() get list available versions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Treecover for the year 2000 — gfw_treecover","text":"Hansen, M. C., P. V. Potapov, R. Moore, M. Hancher, S. . Turubanova, . Tyukavina, D. Thau, S. V. Stehman, S. J. Goetz, T. R. Loveland, . Kommareddy, . Egorov, L. Chini, C. O. Justice, J. R. G. Townshend. 2013. “High-Resolution Global Maps 21st-Century Forest Cover Change.” Science 342 (15 November): 850–53.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Mangrove Extent Polygon — gmw","title":"Global Mangrove Extent Polygon — gmw","text":"resource part publication Bunting et al. (2018) \"Global Mangrove Watch—New 2010 Global Baseline Mangrove Extent\". polygons represent mangrove, tropical coastal vegetation considered significant part marine ecosystem. resource available period 1996- 2020 Global Mangrove Watch (GMW), providing geospatial information global mangrove extent.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global Mangrove Extent Polygon — gmw","text":"Global mangrove extent polygon available years 1996, 2007-2010, 2015-2020.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Mangrove Extent Polygon — gmw","text":"https://data.unep-wcmc.org/datasets/45","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Mangrove Extent Polygon — gmw","text":"Bunting P., Rosenqvist ., Lucas R., Rebelo L-M., Hilarides L., Thomas N., Hardy ., Itoh T., Shimada M. Finlayson C.M. (2018). Global Mangrove Watch – New 2010 Global Baseline Mangrove Extent. Remote Sensing 10(10): 1669. doi:10.3390/rs10101669.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/init_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization of a biodiversity portfolio object — init_portfolio","title":"Initialization of a biodiversity portfolio object — init_portfolio","text":"function expects sf object first argument contains geometry type POLYGON MULTIPOLYGON. row object considered single asset portfolio biodiversity indicators calculated processing chain. preliminary checks conducted, e.g. CRS object EPSG:4326 otherwise transformed. portfolio wide parameters output directory downloaded data sets, temporal directory intermediate calculations can set user fine-control workflow. However, parameters also set sensible defaults thus can omitted portfolio initialization.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/init_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization of a biodiversity portfolio object — init_portfolio","text":"","code":"init_portfolio(   x,   years,   outdir = getwd(),   tmpdir = tempdir(),   cores = NULL,   add_resources = TRUE,   aria_bin = NULL,   verbose = TRUE )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/init_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization of a biodiversity portfolio object — init_portfolio","text":"x sf object transformed portfolio years Numeric vector time frame analysis handed vector consecutive years outdir Character indicating directory resources written . directory exist, attempt create . output director equal temporary directory. Defaults current working directory. tmpdir Character vector directory used intermediate files. Defaults output tempdir(), e.g. current R session's temporal directory. custom file path exist, attempt create . equal output directory. Note, raster calculations set temporal directory terra package . Please make sure enough disk space available intermediate calculations can become quite large. cores Deprecated. Use future-style parallelzation instead. add_resources Logical existing resources 'outdir' added portfolio. Defaults TRUE. Setting FALSE can use e.g. previous download terminated unexpectedly order resume. aria_bin character vector aria2c executable parallel downloads verbose Logical, defaults TRUE, indicating progress information printed.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/init_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization of a biodiversity portfolio object — init_portfolio","text":"sf portfolio object x amended attributes controlling processing behaviour processing chain.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate area of different landcover classes — landcover","title":"Calculate area of different landcover classes — landcover","text":"land cover data shows us much region covered forests, rivers, wetlands, barren land, urban infrastructure thus allowing observation land cover dynamics period time. function allows efficiently calculate area different landcover classes polygons. polygon, area classes hectare(ha) returned. required resources indicator : esalandcover","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate area of different landcover classes — landcover","text":"tibble column area (ha) percentage covered per landcover class","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate area of different landcover classes — landcover","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2016:2017,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"esalandcover\") %>%   calc_indicators(\"landcover\") %>%   tidyr::unnest(landcover)  aoi #> Simple feature collection with 22 features and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 22 × 10 #>    WDPAID NAME           DESIG_ENG ISO3  assetid classes year    area percentage #>     <dbl> <chr>          <chr>     <chr>   <int> <chr>   <chr>  <dbl>      <dbl> #>  1 478140 Sierra de Nei… National… DOM         1 shrubs  2016  5.06e2  0.0260    #>  2 478140 Sierra de Nei… National… DOM         1 herbac… 2016  1.84e3  0.0943    #>  3 478140 Sierra de Nei… National… DOM         1 cropla… 2016  1.15e0  0.0000590 #>  4 478140 Sierra de Nei… National… DOM         1 closed… 2016  4.65e3  0.239     #>  5 478140 Sierra de Nei… National… DOM         1 closed… 2016  1.03e1  0.000531  #>  6 478140 Sierra de Nei… National… DOM         1 closed… 2016  4.98e3  0.256     #>  7 478140 Sierra de Nei… National… DOM         1 closed… 2016  1.46e2  0.00750   #>  8 478140 Sierra de Nei… National… DOM         1 open_f… 2016  1.90e3  0.0977    #>  9 478140 Sierra de Nei… National… DOM         1 open_f… 2016  8.85e1  0.00455   #> 10 478140 Sierra de Nei… National… DOM         1 open_f… 2016  1.49e1  0.000767  #> # ℹ 12 more rows #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"function allows efficiently calculate area mangrove Global Mangrove Watch - World Conservation Monitoring Centre (WCMC) polygons. polygon, area mangrove (hectare) desired year returned. required resources indicator : gmw","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"tibble column area mangrove (ha) corresponding year.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = c(1996, 2016),     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"gmw\") %>%   calc_indicators(\"mangroves_area\") %>%   tidyr::unnest(mangroves_area) #> Skipping existing files in output directory. #> Translating shapefiles to GeoPackages. This may take a while....  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME            DESIG_ENG     ISO3  assetid mangrove_extent year  #>    <dbl> <chr>           <chr>         <chr>   <int>           <dbl> <chr> #> 1 478140 Sierra de Neiba National Park DOM         1               0 1996  #> 2 478140 Sierra de Neiba National Park DOM         1               0 2016  #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":null,"dir":"Reference","previous_headings":"","what":"Active Fire Polygon — nasa_firms","title":"Active Fire Polygon — nasa_firms","text":"resource published Fire Information Resource Management System (FIRMS) NASA Near Real Time (NRT) active fire data. data collected Moderate Resolution Imaging Spectroradiometer (MODIS) Visible Infrared Imaging Radiometer Suite (VIIRS). resource represents fire hotspot lat/lon coordinates along information fire pixel brightness temperature, fire radiative power (frp). data MODIS available 2000 2021 VIIRS available 2012-2021 year range.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Active Fire Polygon — nasa_firms","text":"Active fire polygon available years 2000 2021 (MODIS) 2012-2021 (VIIRS)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Active Fire Polygon — nasa_firms","text":"https://firms.modaps.eosdis.nasa.gov/download/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Active Fire Polygon — nasa_firms","text":"data following instruments available: \"MODIS\" \"VIIRS\" following argument specified users: instrument character vector specifying data collection instrument.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Active Fire Polygon — nasa_firms","text":"NRT VIIRS 375 m Active Fire product VNP14IMGT distributed NASA FIRMS. Available -line https://earthdata.nasa.gov/firms. doi:10.5067/FIRMS/VIIRS/VNP14IMGT_NRT.002.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":null,"dir":"Reference","previous_headings":"","what":"NASA GRACE-based Drought Indicator layer — nasa_grace","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"resource published NASA GRACE Tellus. data set reflects potential drought conditions shallow groundwater section relative reference period spanning 1948 2012. available global raster weekly temporal resolution starting year 2003. value indicates wetness percentile given pixel regard reference period.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"Global raster layers available years 2003 present.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":null,"dir":"Reference","previous_headings":"","what":"NASADEM HGT v001 — nasa_srtm","title":"NASADEM HGT v001 — nasa_srtm","text":"resource processed Land Processes Distributed Active Archive Center (LP DAAC) made available Microsoft Planetery Computer. NASADEM distributed 1 degree latitude 1 degree longitude tiles consist land 60° N 56° S latitude. accounts 80% Earth’s total landmass.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NASADEM HGT v001 — nasa_srtm","text":"global tiled raster resource available land areas.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NASADEM HGT v001 — nasa_srtm","text":"https://planetarycomputer.microsoft.com/dataset/nasadem","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NASADEM HGT v001 — nasa_srtm","text":"NASA JPL (2020). NASADEM Merged DEM Global 1 arc second V001. NASA EOSDIS Land Processes DAAC. Accessed 2023-07-01 https://doi.org/10.5067/MEaSUREs/NASADEM/NASADEM_HGT.001","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessibility to Cities layer — nelson_et_al","title":"Accessibility to Cities layer — nelson_et_al","text":"resource published Weiss et al. (2018) \"global map travel time cities assess inequalities accessibility 2015\" journal nature. Accessibility ease larger cities can reached certain location. resource represents travel time major cities year 2015. Encoded minutes, representing time needed reach particular cell nearby city target population range. following ranges nearby cities available: \"5k_10k\" \"10k_20k\" \"20k_50k\" \"50k_100k\" \"100k_200k\" \"200k_500k\" \"500k_1mio\" \"1mio_5mio\" \"50k_50mio\" \"5k_110mio\" \"20k_110mio\" \"5mio_50mio\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Accessibility to Cities layer — nelson_et_al","text":"Global raster layer available year 2015.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Accessibility to Cities layer — nelson_et_al","text":"https://figshare.com/articles/dataset/Travel_time_to_cities_and_ports_in_the_year_2015/7638134/3","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessibility to Cities layer — nelson_et_al","text":"following argument specified users: range_traveltime character vector indicating one ranges download.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accessibility to Cities layer — nelson_et_al","text":"Weiss, D. J., Nelson, ., Gibson, H. S., Temperley, W., Peedell, S., Lieber, ., … & Gething, P. W. (2018). global map travel time cities assess inequalities accessibility 2015. Nature, 553(7688), 333-336.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate population count statistics — population_count","title":"Calculate population count statistics — population_count","text":"WorldPop, initiated 2013, offers easy access spatial demographic datasets, claiming use peer-reviewed fully transparent methods create global mosaics years 2000 2020. function allows efficiently calculate population count statistics (e.g. total number population) polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned. required resources indicator : worldpop","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate population count statistics — population_count","text":"tibble column population count statistics","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate population count statistics — population_count","text":"following arguments can set: stats_popcount Function applied compute statistics polygons either one multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate population count statistics — population_count","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2000:2010,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"worldpop\") %>%   calc_indicators(\"population_count\", stats_popcount = c(\"sum\", \"median\"), engine = \"extract\") %>%   tidyr::unnest(population_count)  aoi #> Simple feature collection with 11 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 9 #>    WDPAID NAME        DESIG_ENG ISO3  assetid popcount_sum popcount_median year  #>     <dbl> <chr>       <chr>     <chr>   <int>        <dbl>           <dbl> <chr> #>  1 478140 Sierra de … National… DOM         1        3941.            13.5 2000  #>  2 478140 Sierra de … National… DOM         1        3786.            13.1 2001  #>  3 478140 Sierra de … National… DOM         1        4012.            14.4 2002  #>  4 478140 Sierra de … National… DOM         1        4083.            14.8 2003  #>  5 478140 Sierra de … National… DOM         1        4336.            15.3 2004  #>  6 478140 Sierra de … National… DOM         1        4323.            15.3 2005  #>  7 478140 Sierra de … National… DOM         1        4569.            16.5 2006  #>  8 478140 Sierra de … National… DOM         1        4339.            15.2 2007  #>  9 478140 Sierra de … National… DOM         1        4784.            17.7 2008  #> 10 478140 Sierra de … National… DOM         1        4923.            17.7 2009  #> 11 478140 Sierra de … National… DOM         1        4016.            15.5 2010  #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"functions allows calculate precipitation statistics based CHIRPS rainfall estimates. Corresponding time-frame analysis portfolio, monthly precipitation statistics calculated. include total rainfall amount, rainfall anomaly 1981-2010 climate normal, Standardized Precipitation Index (SPI) available scales 1 48 months. Th function needs SPEI package installed. required resources indicator : chirps","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"tibble column years, months, absolute rainfall (mm), rainfall anomaly (mm) one columns per selected time-scale SPI (dimensionless).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"following arguments can set: scales_spi integer vector indicating scales calculate SPI. spi_previous_year integer specifying many previous years include order fit SPI. Defaults 8 years. engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2010,     outdir = outdir,     tmpdir = tempdir(),     verbose = FALSE   ) %>%   get_resources(\"chirps\") %>%   calc_indicators(\"precipitation_chirps\",     engine = \"exactextract\",     scales_spi = 3,     spi_prev_years = 8   ) %>%   tidyr::unnest(precipitation_chirps) #> Error in map2(.x, vec_index(.x), .f, ...): ℹ In index: 1. #> ℹ With name: chirps. #> Caused by error in `.read_raster_source()`: #> ! Did not find equal number of tiles per timestep.  aoi #> Error in eval(expr, envir, enclos): object 'aoi' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate precipitation statistics — precipitation_wc","title":"Calculate precipitation statistics — precipitation_wc","text":"function allows efficiently calculate precipitation statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned. required resources indicator : precipitation layer worldclim","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate precipitation statistics — precipitation_wc","text":"tibble column precipitation statistics (mm)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate precipitation statistics — precipitation_wc","text":"following arguments can set: stats_worldclim Function applied compute statistics polygons either one multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate precipitation statistics — precipitation_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)   aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2018,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"worldclim_precipitation\") %>%   calc_indicators(\"precipitation_wc\",     stats_worldclim = c(\"mean\", \"median\"),     engine = \"extract\"   ) %>%   tidyr::unnest(precipitation_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid prec_mean prec_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      26.9        26.8 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1      26.3        26.6 2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1      66.8        68.8 2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1      81.8        81.9 2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1     327.        336.  2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1      76.0        77.5 2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1      98.9        98.5 2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1     106.        108.  2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1     214.        217.  2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1     165.        174.  2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1      60.7        61.9 2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1      24.9        26.5 2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/read_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading a portfolio object from disk — read_portfolio","title":"Reading a portfolio object from disk — read_portfolio","text":"function can used read portfolio object previously written disk via write_portfolio() back R sf object. specifically directed GeoPackage output write_portfolio(), otherwise function likely fail. available indicators read back R nested list columns reflecting output calc_indicators() called.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/read_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading a portfolio object from disk — read_portfolio","text":"","code":"read_portfolio(file, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/read_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading a portfolio object from disk — read_portfolio","text":"file character vector pointing GeoPackage previously written disk via write_portfolio() ... Additional arguments supplied st_read()","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/read_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading a portfolio object from disk — read_portfolio","text":"sf object object nested list columns every indicator table found GeoPackage source file.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/read_portfolio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reading a portfolio object from disk — read_portfolio","text":"Important Note Portfolio-wide attributes specified via init_portfolio() reconstructed. reason users likely exported GeoPackage order share data, thus file likely opened different machine / different working directory. Users can simply apply init_portfolio() object re-set attributes.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new indicator to mapme.biodiversity — register_indicator","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"Registers custom indicator function access indicators native mapme.biodiversity used calc_indicators(). Custom indicators also registered list generated available_indicators().","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"","code":"register_indicator(   name = NULL,   resources = NULL,   fun = NULL,   arguments = NULL,   processing_mode = NULL )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"name character vector indicating name indicator. resources list named objects indicating resources need available calculate indicator. names correspond registered resources single character value indicates type resources fun function wish register. arguments list named entries indicating default values arguments required function processing_mode character vector indicating preferred processing mode indicator. Either 'asset' 'portfolio'.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"Nothing. Registers function package environment.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"Note registering indicator function effect current R session. return analysis new session, re-register custom indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_indicator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a new indicator to mapme.biodiversity — register_indicator","text":"","code":"# \\dontrun{ register_indicator(   name = \"treecover_area\",   inputs = list(     gfw_treecover = \"raster\",     gfw_lossyear = \"raster\"   ),   fun = .calc_treecover_area,   arguments = list(     min_size = 10,     min_cover = 30   ),   processing_mode = \"asset\" ) #> Error in register_indicator(name = \"treecover_area\", inputs = list(gfw_treecover = \"raster\",     gfw_lossyear = \"raster\"), fun = .calc_treecover_area, arguments = list(min_size = 10,     min_cover = 30), processing_mode = \"asset\"): unused argument (inputs = list(gfw_treecover = \"raster\", gfw_lossyear = \"raster\")) # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new resource to the mapme.biodiversity — register_resource","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"Registers custom resource function access data functionality otherwise native mapme.biodiversity used get_resources(). Custom resources also registered list generated available_resources().","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"","code":"register_resource(   name = NULL,   type = NULL,   source = NULL,   fun = NULL,   arguments = list() )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"name character vector indicating name resource. type character vector indicating type resource. Either 'vector' 'raster'. source Optional, preferably URL data found. fun function wish register. arguments list named entries indicating default values arguments required function","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"Nothing. Registers function package environment.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"Note registering resource function effect current R session. return analysis new session, re-register custom resource.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/register_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a new resource to the mapme.biodiversity — register_resource","text":"","code":"# \\dontrun{ register_resource(   name = \"gfw_treecover\",   type = \"raster\",   source = \"https://data.globalforestwatch.org/documents/tree-cover-2000/explore\",   fun = .get_gfw_treecover,   arguments = list(vears_treecover = \"GFC-2021-v1.9\") ) #> Error in eval(expr, envir, enclos): object '.get_gfw_treecover' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"SoilGrids data layers — soilgrids","title":"SoilGrids data layers — soilgrids","text":"SoilGrids project combining global observation data machine learning map spatial distribution soil properties across globe. produced spatial resolution 250 meters parameters mapped different depths. order able assess prediction uncertainty, besides mean median prediction, 0.05 0.95 percentile predictions available. following parameters available: bdod Bulk density fine earth fraction (kg/dm3) cec Cation Exchange Capacity soil (cmol(c)/kg) cfvo Volumetric fraction coarse fragments > 2 mm (cm3/100cm3 (volPerc)) clay Proportion clay particles < 0.002 mm fine earth fraction (g/100g) nitrogen Total nitrogen (g/kg) phh2o Soil pH (pH) sand Proportion sand particles > 0.05 mm fine earth fraction (g/100g) silt Proportion silt particles >= 0.002 mm <= 0.05 mm fine earth fraction (g/100g) soc Soil organic carbon content fine earth fraction (g/kg) ocd Organic carbon density (kg/m3) ocs Organic carbon stocks (kg/m²)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SoilGrids data layers — soilgrids","text":"global tiled raster resource available land areas.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SoilGrids data layers — soilgrids","text":"https://www.isric.org/explore/soilgrids","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SoilGrids data layers — soilgrids","text":"Users can specify following arguments: layer soil parameter single character depth requested depth single character stat predicted statistic single character Except ocs, available depth \"0-30cm\", parameters available following depths: \"0-5cm\" \"5-15cm\" \"15-30cm\" \"30-60cm\" \"60-100cm\" \"100-200cm\" parameter depth available following statistics: \"Q0.05\" \"Q0.50\" \"mean\" \"Q0.95\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SoilGrids data layers — soilgrids","text":"Hengl T, Mendes de Jesus J, Heuvelink GBM, Ruiperez Gonzalez M, Kilibarda M, et al. (2017) SoilGrids250m: Global gridded soil information based machine learning. PLOS ONE 12(2): e0169748. doi:10.1371/journal.pone.0169748","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Zonal Soil Properties — soilproperties","title":"Calculate Zonal Soil Properties — soilproperties","text":"indicator allows extraction zonal statistics resource layers previously downloaded SoilGrids, thus total supporting calculation zonal statistics 10 different soil properties 6 different depths total 4 different model outputs (stat). Zonal statistics calculated SoilGrid layers previously made available vie get_resources(). required resource indicator : soilgrids","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate Zonal Soil Properties — soilproperties","text":"tibble column SoilGrid layer, depth model output statistic well additional columns zonal statistics specified via stats_soil","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Zonal Soil Properties — soilproperties","text":"following arguments can set: stats_soil Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Zonal Soil Properties — soilproperties","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)   aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2022,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"soilgrids\",     layers = c(\"clay\", \"silt\"), depths = c(\"0-5cm\", \"5-15cm\"), stats = \"mean\"   ) %>%   calc_indicators(\"soilproperties\", stats_soil = c(\"mean\", \"median\"), engine = \"extract\") %>%   tidyr::unnest(soilproperties)  aoi #> Simple feature collection with 4 features and 10 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 4 × 11 #>   WDPAID NAME            DESIG_ENG  ISO3  assetid layer depth stat   mean median #>    <dbl> <chr>           <chr>      <chr>   <int> <chr> <chr> <chr> <dbl>  <dbl> #> 1 478140 Sierra de Neiba National … DOM         1 clay  0-5cm mean   35.0   34.8 #> 2 478140 Sierra de Neiba National … DOM         1 clay  5-15… mean   35.4   35.3 #> 3 478140 Sierra de Neiba National … DOM         1 silt  0-5cm mean   33.8   33.7 #> 4 478140 Sierra de Neiba National … DOM         1 silt  5-15… mean   33.9   33.8 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate maximum temperature statistics — temperature_max_wc","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"function allows efficiently calculate maximum temperature statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned. required resources indicator : maximum temperature layer worldclim","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"tibble column maximum temperature statistics (°C)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"following arguments can set: stats_worldclim Function applied compute statistics polygons either one multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2018,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"worldclim_max_temperature\") %>%   calc_indicators(\"temperature_max_wc\",     stats_worldclim = c(\"mean\", \"median\"),     engine = \"extract\"   ) %>%   tidyr::unnest(temperature_max_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid tmax_mean tmax_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      20.8        20.6 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1      20.5        20.3 2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1      22.1        22.0 2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1      22.5        22.4 2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1      21.4        21.3 2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1      22.7        22.7 2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1      23.1        23.1 2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1      23.8        23.7 2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1      23.1        23.0 2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1      22.4        22.3 2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1      22.1        21.9 2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1      21.3        21.2 2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"function allows efficiently calculate minimum temperature statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned. required resources indicator : minimum temperature layer worldclim","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"tibble column minimum temperature statistics (°C)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"following arguments can set: stats_worldclim Function applied compute statistics polygons either one multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)   aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2018,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"worldclim_min_temperature\") %>%   calc_indicators(\"temperature_min_wc\",     stats_worldclim = c(\"mean\", \"median\"),     engine = \"extract\"   ) %>%   tidyr::unnest(temperature_min_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid tmin_mean tmin_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      9.96        9.85 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1     10.2        10.1  2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1     10.1        10.0  2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1     11.0        11.0  2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1     12.6        12.5  2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1     14.0        13.9  2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1     13.0        13.0  2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1     14.0        14.0  2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1     13.6        13.6  2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1     13.2        13.1  2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1     12.5        12.4  2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1     10.3        10.2  2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":null,"dir":"Reference","previous_headings":"","what":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"resource part publication Olson et al. (2004) \"Terrestrial Ecosystems World (TEOW) WWF-US (Olson)\". depicts 867 terrestrial ecoregions around world classified 14 different terrestrial biomes forests, grasslands, deserts. polygons represent ecoregions, defined relatively large units land inland water sharing large majority biodiversity. datasets made available World Wildlife Fund (WWF) year 2001.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"Global terrestrial polygon resource depicting ecoregions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"https://www.worldwildlife.org/publications/terrestrial-ecoregions---world","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"Olson, D. M., Dinerstein, E., Wikramanayake, E. D., Burgess, N. D., Powell, G. V. N., Underwood, E. C., D’Amico, J. ., Itoua, ., Strand, H. E., Morrison, J. C., Loucks, C. J., Allnutt, T. F., Ricketts, T. H., Kura, Y., Lamoreux, J. F., Wettengel, W. W., Hedao, P., Kassem, K. R. 2001. Terrestrial ecoregions world: new map life Earth. Bioscience 51(11):933-938.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate accessibility statistics — traveltime","title":"Calculate accessibility statistics — traveltime","text":"Accessibility ease larger cities can reached certain location. function allows efficiently calculate accessibility statistics (.e. travel time nearby major cities) polygons. polygon, desired statistic/s (mean, median sd) /returned. required resources indicator : nelson_et_al","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate accessibility statistics — traveltime","text":"tibble column accessibility statistics (minutes)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate accessibility statistics — traveltime","text":"following arguments can set: stats_accessibility Function applied compute statistics polygons either one multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate accessibility statistics — traveltime","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)   aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2022,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nelson_et_al\",     range_traveltime = c(\"5k_10k\", \"100k_200k\", \"500k_1mio\", \"1mio_5mio\")   ) %>%   calc_indicators(\"traveltime\", stats_accessibility = c(\"min\", \"max\"), engine = \"extract\") %>%   tidyr::unnest(traveltime)  aoi #> Simple feature collection with 4 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 4 × 9 #>   WDPAID NAME           DESIG_ENG ISO3  assetid minutes_min minutes_max distance #>    <dbl> <chr>          <chr>     <chr>   <int>       <dbl>       <dbl> <chr>    #> 1 478140 Sierra de Nei… National… DOM         1          35         348 5k_10k   #> 2 478140 Sierra de Nei… National… DOM         1         162         528 100k_20… #> 3 478140 Sierra de Nei… National… DOM         1         239         553 500k_1m… #> 4 478140 Sierra de Nei… National… DOM         1         106         464 1mio_5m… #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate treecover statistics — treecover_area","title":"Calculate treecover statistics — treecover_area","text":"functions allows efficiently calculate treecover statistics polygons. year analysis timeframe, forest losses preceding current years subtracted treecover year 2000 actual treecover figures within polygon returned. required resources indicator : gfw_treecover gfw_lossyear","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate treecover statistics — treecover_area","text":"tibble column years treecover (ha)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate treecover statistics — treecover_area","text":"following arguments can set: min_size minimum size forest patch considered forest ha. min_cover minimum cover percentage per pixel considered forest.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate treecover statistics — treecover_area","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2016:2017,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(     resources = c(\"gfw_treecover\", \"gfw_lossyear\"),     vers_treecover = \"GFC-2022-v1.10\", vers_lossyear = \"GFC-2022-v1.10\"   ) %>%   calc_indicators(\"treecover_area\", min_size = 1, min_cover = 30) %>%   tidyr::unnest(treecover_area)  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME  DESIG_ENG ISO3  assetid years treecover                      geom #>    <dbl> <chr> <chr>     <chr>   <int> <int>     <dbl>             <POLYGON [°]> #> 1 478140 Sier… National… DOM         1  2016    12011. ((-71.76134 18.66333, -7… #> 2 478140 Sier… National… DOM         1  2017    11939. ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate treeloss statistics — treecover_area_and_emissions","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"functions allows efficiently calculate treecover emissions indicators single function call together. Since pre-processing operations treecover emissions , efficient calculate one run users actually interested statistics. Otherwise users advised use respective single indicator functions. required resources indicator : gfw_treecover gfw_lossyear gfw_emissions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"tibble column years, treecover (ha), emissions (Mg CO2)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"following arguments can set: min_size minimum size forest patch considered forest ha. min_cover minimum cover percentage per pixel considered forest.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2016:2017,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(     resources = c(\"gfw_treecover\", \"gfw_lossyear\", \"gfw_emissions\"),     vers_treecover = \"GFC-2021-v1.9\", vers_lossyear = \"GFC-2021-v1.9\"   ) %>%   calc_indicators(\"treecover_area_and_emissions\", min_size = 1, min_cover = 30) %>%   tidyr::unnest(treecover_area_and_emissions)  aoi #> Simple feature collection with 2 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 9 #>   WDPAID NAME            DESIG_ENG     ISO3  assetid years emissions treecover #>    <dbl> <chr>           <chr>         <chr>   <int> <int>     <dbl>     <dbl> #> 1 478140 Sierra de Neiba National Park DOM         1  2016     2832.    12011. #> 2 478140 Sierra de Neiba National Park DOM         1  2017     3468.    11939. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate emission statistics — treecoverloss_emissions","title":"Calculate emission statistics — treecoverloss_emissions","text":"functions allows efficiently calculate emission statistics areas interest. year analysis timeframe, forest losses Hansen et al. (2013) overlayed respective emission layer Harris et al. (2021) area-wise emission statistics calculated year. required resources indicator : gfw_treecover gfw_lossyear gfw_emissions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate emission statistics — treecoverloss_emissions","text":"tibble column years emissions (Mg)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate emission statistics — treecoverloss_emissions","text":"following arguments can set: min_size minimum size forest patch considered forest ha. min_cover minimum cover percentage per pixel considered forest.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate emission statistics — treecoverloss_emissions","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2016:2017,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(     resources = c(\"gfw_treecover\", \"gfw_lossyear\", \"gfw_emissions\"),     vers_treecover = \"GFC-2021-v1.9\", vers_lossyear = \"GFC-2021-v1.9\"   ) %>%   calc_indicators(\"treecoverloss_emissions\", min_size = 1, min_cover = 30) %>%   tidyr::unnest(treecoverloss_emissions)  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME  DESIG_ENG ISO3  assetid years emissions                      geom #>    <dbl> <chr> <chr>     <chr>   <int> <int>     <dbl>             <POLYGON [°]> #> 1 478140 Sier… National… DOM         1  2016     2832. ((-71.76134 18.66333, -7… #> 2 478140 Sier… National… DOM         1  2017     3468. ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"Terrain Ruggedness Index measurement developed Riley, et al. (1999). elevation difference centre pixel eight immediate pixels squared averaged square root taken get TRI value. function allows efficiently calculate terrain ruggedness index (tri) statistics polygons. polygon, desired statistic/s (mean, median sd) /returned. required resources indicator : nasa_srtm","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"tibble column terrain ruggedness index statistics (meters). range index values corresponding meaning: (1) 0 - 80 m  :- level surface (2) 81-116 m  :- nearly level surface (3) 117-161 m :- slightly rugged surface (4) 162-239 m :- intermediately rugged surface (5) 240-497 m :- moderately rugged surface (6) 498-958 m :- highly rugged surface (7) 959-4367 m:- extremely rugged surface","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"following arguments can set: stats_tri Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\". engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"Riley, S. J., DeGloria, S. D., & Elliot, R. (1999). Index quantifies topographic heterogeneity. intermountain Journal sciences, 5(1-4), 23-27.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   init_portfolio(     years = 2000:2020,     outdir = outdir,     tmpdir = tempdir(),     add_resources = FALSE,     verbose = FALSE   ) %>%   get_resources(\"nasa_srtm\") %>%   calc_indicators(\"tri\", stats_tri = c(\"mean\", \"median\", \"sd\", \"var\"), engine = \"extract\") %>%   tidyr::unnest(tri)  aoi #> Simple feature collection with 1 feature and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 10 #>   WDPAID NAME         DESIG_ENG ISO3  assetid tri_mean tri_median tri_sd tri_var #>    <dbl> <chr>        <chr>     <chr>   <int>    <dbl>      <dbl>  <dbl>   <dbl> #> 1 478140 Sierra de N… National… DOM         1     33.3       30.8   18.7    349. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":null,"dir":"Reference","previous_headings":"","what":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"resource distributed Uppsala Conflict Data Program (UCDP) constitutes diaggregated dataset individual events organized violence. encodes different actors involved, spatially disaggregated village levels anc currently covers time period 1989 2021. Older versions data set can downloaded, users recommended download latest data set.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"global event dataset (GED) encoding envents organized violence point geometries","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"https://ucdp.uu.se/downloads/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"following versions available 5.0 17.1 17.2 18.1 19.1 20.1 21.1 22.1 latest following argument specified users: version_ged character vector specifying version download. Defaults \"latest\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"Davies, Shawn, Therese Pettersson & Magnus Öberg (2022). Organized violence 1989-2021 drone warfare. Journal Peace Research 59(4). doi:10.1177/00223433221108428","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim.html","id":null,"dir":"Reference","previous_headings":"","what":"WorldClim climatic variables (min temperature, max temperature, mean precipitation) — worldclim","title":"WorldClim climatic variables (min temperature, max temperature, mean precipitation) — worldclim","text":"resource published Fick et al. (2017) \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas\". resource represents multiple climatic variables requiring minimum temperature, maximum temperature, mean precipitation layers. layers available download period 2000 - 2018 monthly basis WorldClim.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WorldClim climatic variables (min temperature, max temperature, mean precipitation) — worldclim","text":"Global raster layers available years 2000 2018.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"WorldClim climatic variables (min temperature, max temperature, mean precipitation) — worldclim","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WorldClim climatic variables (min temperature, max temperature, mean precipitation) — worldclim","text":"Enlisted different resources can requested dedicated functions: tmin Encoded (°C), representing minimum temperature per output grid cell. tmax Encoded (°C), representing maximum temperature per output grid cell. prec Encoded (mm), representing mean precipitation per output grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Count layer for year 2000-2020 — worldpop","title":"Population Count layer for year 2000-2020 — worldpop","text":"resource published open spatial demographic data research organization called WorldPop. resource represents population count, 1 km spatial resolution layers available download year 2000 2020. dataset called WorldPop Unconstrained Global Mosaics. encoded cell value represents total number people particular grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population Count layer for year 2000-2020 — worldpop","text":"Global raster layers available years 2000-2020.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population Count layer for year 2000-2020 — worldpop","text":"https://www.worldpop.org/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/write_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Writing a portfolio to disk — write_portfolio","title":"Writing a portfolio to disk — write_portfolio","text":"function used save processes biodiversity portfolio disk. order ensure interoperability geospatial software supported format GeoPackage. format chosen, function automatically replace supplied file extension '.gpkg'. metadata portfolio together geometry written table called 'metadata'. available supported indicators, expected present nested list columns written respective tables. order allow re-joining metadata indicators, expected column called 'assetid' uniquely identifies assets present. Usually, users take care since usual {mapme.biodiversity} workflow ensure columns present. Additional arguments st_write() can supplied.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/write_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writing a portfolio to disk — write_portfolio","text":"","code":"write_portfolio(x, dsn, overwrite = FALSE, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/write_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writing a portfolio to disk — write_portfolio","text":"x portfolio object processed {mapme.biodiversity} dsn file path output file. end '.gpkg' overwrite logical indicating output file overwritten exists ... Additional arguments supplied st_write()","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/write_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writing a portfolio to disk — write_portfolio","text":"x, invisibly","code":""},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"general-development-version","dir":"Changelog","previous_headings":"","what":"General","title":"mapme.biodiversity (development version)","text":"Quickstart vignette now uses ESA Landcover resource example use package (#201).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mapme.biodiversity (development version)","text":"biome ecoregions now properly handle 0-length tibbles (#196) logic reading raster tiles temporal dimensions improved","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity (development version)","text":"GFW resources indicators now include latest GFC-2022-v1.10 version (#204).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-development-version","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity (development version)","text":"calc_indicators() now includes check 0-length tibbles (#199, #216) .read_raster_source now uses single logic cover cases (e.g. single tiles, tiled rasters without temporal dimension, single temporal rasters) .read_raster_source now projects assets case CRS differs raster","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-040","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.4.0","title":"mapme.biodiversity 0.4.0","text":"CRAN release: 2023-08-28","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.4.0","text":"added new resource called ucdp_ged providing database violent conflict 1989 today added new indicator called fatalities aggregating number deaths type conflict monthly time scale based ucdp_ged resource. Added new resource called fritz_et_al providing raster layer deforestation added new resource called fritz_et_al providing raster layer deforestation drivers tropical forests based Fritz et al. (2022) added new indicator called deforestation_drivers using fritz_et_al resource obtain information absolute relative area driving forest losses assets period 2008-2019 added two new exported functions register_resource() register_indicator() allow users register custom functions resources/indicators added new vignette web-version package informing obtain wide-output indicators added new vignette web-version custom analysis NASA FIRMS resource example section added data years 2017-2020 Global Mangrove Watch resource","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.4.0","text":"Changed parallel backend future package. Parallel processing now implemented furrr::future_map() asset level within calc_indicators() function. User code now required set plan() enable parallel processing. function call needs wrapped user side progressr::with_progress() show progress bar. mapme.biodiversity longer sets terra’s temporal directory . Instead call terra::terraOptions() manually","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mapme.biodiversity 0.4.0","text":"esalandcover indicator now returns value per land cover class exactly (#177)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-4-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.4.0","text":"disabled running examples CRAN disabled tests get_* functions CRAN terra engines now use get() resolve requested zonal statistic function applying tidyverse coding style existing code (#156, @karpfen) extensive re-factoring vector-raster zonal statistic engines (#150) extensive re-writing testing infrastructure indicator functions omitting usage snapshot tests far possible (#142) rundir todisk arguments removed indicator functions since practical use instead resource indicator backlog, resources indicators now registered .pkgenv queried runtime. also allows users register custom resources/indicator functions removed deprecation warnings old resource/indicator name","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-030","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.3.0","title":"mapme.biodiversity 0.3.0","text":"CRAN release: 2023-01-21","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.3.0","text":"MacOS s2-based calculations now enabled users can expect package return numerically equivalent results operating system (#131) online source nasa_srtm resource shows expired SSL certificate since November 2022. get_resources() function now includes error instructions disable SSL certification users risk. websites maintainers contacted asked renew certification. (#131)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.3.0","text":"GFW resources now updated use latest version allowing analysis additional year 2021 (#123, @fBedecarrats) GFW indicators now accept numeric min_size argument allowing specify fractional covers (#110) fire indicators now allow simultaneous calculation indicators based MODIS VIIRS. users chose one instruments analysis (#126)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.3.0","text":"case one multiple assets return NA instead tibble now properly tested handled (#101) Rasters longer temporary written disk omit bug caused applying mask/classify already existing raster file (#108, @Jo-Schie) Bug soilproperties set NA caused function return data.frame instead tibble fixed (#116) , treecoverloss_emissions treecover_area_and_emissions now return 0 instead NaN observation years now forest loss occurred (#120)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-3-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.3.0","text":".make_global_grid() now specifies CRS constructing bounding box returns grid specified CRS instead Lat/Lon (#113) .calc_active_fire_properties now uses st_coordinates retrieve locations fires (#119, @DavisVaughan) tests MacOS re-enabled (#131) tests downloading nasa_srtm resource skipped SSL certificate online source expired (#131)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-021","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.2.1","title":"mapme.biodiversity 0.2.1","text":"CRAN release: 2022-09-09","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.2.1","text":"fixes serious bug occurred tiled resources multiple assets within tile resulting returning tile multiple times","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-2-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.2.1","text":"tests catch mentioned bug introduced tiled resources","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-020","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.2.0","title":"mapme.biodiversity 0.2.0","text":"CRAN release: 2022-08-23","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.2.0","text":"extensive renaming resources indicators. handled gracefully next release (.e. warning issued names replaced): resources: treecover2000 -> gfw_treecover lossyear -> gfw_lossyear greenhouse -> gfw_emissions traveltime -> nelson_et_al nasagrace -> nasa_grace mintemperature -> worldclim_min_temperature maxtemperature -> worldclim_max_temperature precipitation -> worldclim_precipitation ecoregions -> teow mangrove -> gmw srtmdem -> nasa_srtm indicators: treecover -> treecover_area emissions -> treecoverloss_emissions treeloss -> treecover_area_and_emissions chirpsprec -> precipitation_chirps accessibility -> traveltime popcount -> population_count wctmin -> temperature_min_wc wctmax -> temperature_max_wc wcprec -> precipitation_wc gmw -> mangroves_area teow -> ecoregion","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.2.0","text":"nasa_firms active_fire_properties active_fire_counts","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-2-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.2.0","text":"adapted download routine GMW v3 (#80) removed data.table imports","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.2.0","text":"fixing issue #84 concerning intersection tiled datasets (#86, @Jo-Schie)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-012","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.2","title":"mapme.biodiversity 0.1.2","text":"CRAN release: 2022-06-24","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-2","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.2","text":"unit tests silenced order informative reverse dependency checks checks tile availability reactivated SRTM fixed notes due uninitialized variables TEOW biome indicators","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-011","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.1","title":"mapme.biodiversity 0.1.1","text":"CRAN release: 2022-05-02","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.1","text":"init_portfolio() now sets testing attribute FALSE default. get_<resource>() functions now return filenames early testing set TRUE. calc_<indicator>() examples now copy files R temporal directory wrapped try() avoid errors/warnings CRAN internet resource available. examples calc_tri() calc_elevation() now disabled CRAN responsiveness CIGAR servers.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-010","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.0","title":"mapme.biodiversity 0.1.0","text":"CRAN release: 2022-04-27","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.1.0","text":"renamed ‘.assetid’ ‘assetid’ (#22)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.1.0","text":"None","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.0","text":"ensures tests examples adhere CRAN policies writing temporal directory (#22).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-001","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.0.1","title":"mapme.biodiversity 0.0.1","text":"CRAN release: 2022-04-19","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"initial-release-0-0-1","dir":"Changelog","previous_headings":"","what":"Initial release","title":"mapme.biodiversity 0.0.1","text":"Added NEWS.md file track changes package. ecoregions esalandcover greenhouse lossyear mangrove nasagrace soilgrids srtmdem traveltime treecover worldclim worldpop acessibility biome chirpsprec drought_indicator elevation emissions gmw landcover popcount soilproperties teow treecover treeloss tri wcprec wctmax wctmin init_portfolio() used initialize portfolio object. input must sf object geometries type POLYGON users can request download one resources via get_resources() users can request processing indicator via calc_indicators() indicators added portfolio object nested list columns processed portfolio object can exported GeoPackage via write_portfolio() portfolio saved disk GeoPackage can read back R via read_portfolio(). users wish download additional resources calculate indicators, init_portfolio() called . Parallelization using multiple cores host machine disabled Windows MacOS, s2 engine spherical geometric vector operations disabled lwgeom used instead.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-0-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.0.1","text":"Introduced absolute URLS userguide.Rmd pointing online documentation (#59) tags added exported functions explaining output/side effect (#59) using requireNamespace() instead installed.packages() check packages listed SUGGEST loadable (#58)","code":""}]
