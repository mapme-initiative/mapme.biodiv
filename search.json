[{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Contributing","text":"reading vignette probably contribute mapme.biodiversity package. great news happy receive Pull-Requests extending package’s functionality! find important -depth information add resources indicators make process seamless possible package’s maintainers. Please make sure read understand guide opening PR. doubt, especially feel framework support use case, always feel free raise issue happily discuss can support ideas. already done , make sure read Terminology vignette get familiar important concepts package. Note use tidyverse style guide package. specifically means function variable names follow snake case pattern. also use arrow assignment operator (<-). submitting PR consistently follow tidyverse style guide, maintainers package might change code adhere code style without notice accepting PR.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Contributing","text":"Ideally, clone GitHub repository via git command command line Linux MacOS systems via GitHub Desktop application Windows. Linux, command look like : accept pushes main, thus first step create specific branch extension. tutorial, pretend re-implement nasa_srtm resource associated elevation indicator, create branch reflecting . Don’t forget check newly created branch! , assume develop extension package R Studio. general guidelines follow also apply choose different tooling development process, however, covered vignette. assume R development dependencies installed. easiest way ensure using devtools:","code":"git clone https://github.com/mapme-initiative/mapme.biodiversity git branch add-elevation git checkout add-elevation devtools::install_dev_deps()"},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"checklist","dir":"Articles","previous_headings":"Adding a resource","what":"Checklist","title":"Contributing","text":"Create file necessary code download resource (R/get_<resource_name>.R) Include roxygen documentation resource following provided template Create outer-level function user facing arguments Check user-specified arguments () correctness Create inner-level function standard arguments Match spatio-temporal extent portfolio resource Provide download functionality use download_or_skip() Delete intermediate files longer required Return absolute file paths matching resource files Write testthat script testing newly added functionality (except actual download) write test/testthat/test-get_<resource_name>.R Add small example data set resource inst/res/<resource_name> Add script producing sample resources data-raw Add useful information resource register via register_resource() Added new dependency? Make sure include supporting statement dependency PR!","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"overview-of-adding-a-resource","dir":"Articles","previous_headings":"Adding a resource","what":"Overview of adding a resource","title":"Contributing","text":"resource supported dataset can downloaded user’s perspective specifying one functions get_resources(). Currently, package supports raster vector resources. wish submit support new resource, please aware accept new resources associated least one indicator calculation. first step adding resource create new file holding required code. checked new branch project opened R Studio, adapt following command open new resource file:","code":"file.edit(\"R/get_<your-new-resource>.R\") # e.g. file.edit(\"R/get_soildgrids.R\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"documenting-the-new-resource","dir":"Articles","previous_headings":"Adding a resource","what":"Documenting the new resource","title":"Contributing","text":"first part resource function, make sure include detailed documentation. documentation explain resource represents, comes (including citation), user-facging arguments specified runtime. Importantly, documentation MUST receive roxygen tag @keywords resource, documentation identified resource. Also, add bare name resource @name tag (e.g. case example translates @name nasa_srtm). last two tags important add well. include statement mandatory register functionality () loaded resource function. export tag important resource actually exposed users package.","code":"#' Short title #' #' One or more description paragraphs might follow here. Please describe #' the spatio-temporal structure of your resource here briefly. #' #' @name <the short name of your resource> #' @param <any user-facing arguments> #' @keywords resource <identifies the documentation as a resource> #' @references <ideally a citable scientific publication> #' @source <a link in the \\url{} tag linking to an online documentation> #' @returns A function that makes a resource available for a portfolio #' @include register.R #' @export"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-a-resource-function---outer-level","dir":"Articles","previous_headings":"Adding a resource","what":"Constructing a resource function - Outer level","title":"Contributing","text":"Resource functions constructed closures, .e. functions return function. outer level exposes arguments set users function fine-control flow function. Note, important check user input outer level correctness warning/error messages case miss specifications thrown immediately. nasa_srtm, outer level look really exciting becuase user-facing arguments checked (see check user-facing arguments constructing indicator ): Note, exported helper functions re-occurring argument checks free use (e.g. check_available_years() case query user temporal time frame). arguments defined outer level resource function ready used inner level, look next.","code":"get_nasa_srtm <- function() {   # .... inner function level }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-a-resource-function---inner-level","dir":"Articles","previous_headings":"Adding a resource","what":"Constructing a resource function - Inner level","title":"Contributing","text":"inner level resource function mandatory function signature checked run-time. function required exactly specify signature. nasa_srtm resource, looks like : x argument represents portfolio object handed user calling get_resources() sf-object can thus used derive spatial extent portfolio. Next, comes name type resource required backend correctly handle output log resource made available. arguments default respective output values mapme_options() represent character vector output directory, logical control verbosity another logical indicating code currently executed testing mode. look things come together now peak constructing actual body resource function.","code":"function(x,          name = \"nasa_srtm\",          type = \"raster\",          outdir = mapme_options()[[\"outdir\"]],          verbose = mapme_options()[[\"verbose\"]],          testing = mapme_options()[[\"testing\"]]) {   # ... function body }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-a-resource-function---body","dir":"Articles","previous_headings":"Adding a resource","what":"Constructing a resource function - Body","title":"Contributing","text":"expected output resource function character vector file paths either raster vector sources represent GDAL readable spatial data sets local file system. case require download write intermediate files, can create files output tempdir(). output files match spatial extent portfolio respect arguments specified user. Output files constructed based outdir argument. function re-download already existing files output directory. flat files can use download_or_skip() helper function make sure existing files re-downloaded. Use verbose argument decide informative messages printed, e.g. inform users download progress. Errors warnings emitted either case. Please include check testing = TRUE returns example filenames early without actually downloading anything. mandatory automated test checks package CI platforms possible conduct lengthy downloads. intersection x object resource, make sure return NA early possible.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-sample-resource-for-package-internal-testing","dir":"Articles","previous_headings":"Adding a resource","what":"Adding sample resource for package internal testing","title":"Contributing","text":"ask provide small subset resource inst/res/resource_name indicators depend resource can tested without need actual download resource. restrictions final size package, ask put substantial effort reducing size files minimum. includes cropping resource samples spatial extent polygon provided inst/extdata/sierra_de_neibe_478140.gpkg polygon similar size supplied case spatial extent intersect resource. raster resources, original raster encoded float, consider changing data type integer introducing scale factor. Also, please use compression algorithm reduce file size. vector resources, consider reducing number vertices case geometries complex. Finally, put processing script resource data-raw ensure reproducibility. , required write unit-test resource function, execute much code possible without actually conducting download.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"a-note-on-dependencies-for-resources","dir":"Articles","previous_headings":"Adding a resource","what":"A note on dependencies for resources","title":"Contributing","text":"Note, resource SHALL add additional dependencies package. add dependencies require add supporting statement PR explaining dependencies needed approaches fail. accepting PR, might request change code remove dependencies, feasible achieve functionality without.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-an-indicator","dir":"Articles","previous_headings":"","what":"Adding an indicator","title":"Contributing","text":"process adding indicator similar one resources. However, input-output requirements different. Note, case added new resource also expect new indicator taking advantage resource PR. see, two new important concepts mind adding indicator. processing mode computational engines. briefly explain concepts , however, can also head Terminology vignette interested comprehensive definition two terms.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"checklist-1","dir":"Articles","previous_headings":"Adding an indicator","what":"Checklist","title":"Contributing","text":"Create file necessary code compute indicator (R/calc_<indicator_name>.R) Create outer-level function user facing arguments Check user-specified arguments () correctness Create inner-level function standard arguments applicable, implement , asset portfolio based processing modes Return tibble long format (variables “hidden” column names) Write testthat script testing newly added functionality write test/testthat/test-calc_<indicator_name>.R Added new dependency? Make sure include supporting statement dependency PR!","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"overview-of-adding-a-new-indicator","dir":"Articles","previous_headings":"Adding an indicator","what":"Overview of adding a new indicator","title":"Contributing","text":"indicator logical routine depending one resources extracts numeric outputs assets portfolio. user’s perspective, indicators processed via calc_indicators() function. developer construct indicator function closure, e.g. function returns another function. outer level exposes user-facing arguments checks correctly specified, inner level required follow specified signature returns tibble. checked new branch project opened R Studio, adapt following command open new indicator file:","code":"file.edit(\"R/calc_<your-new-indicator>.R\") # e.g. file.edit(\"R/calc_precipitation\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"documenting-the-new-indicator","dir":"Articles","previous_headings":"Adding an indicator","what":"Documenting the new indicator","title":"Contributing","text":"first part indicator function, make sure include detailed documentation. documentation explain resources required calculate indicator, user-facing arguments specified runtime structure output tibble. Importantly, documentation MUST receive roxygen tag @keywords indicator, documentation identified indicator. Also, add bare name indicator @name tag (e.g. @name elevation). last two tags important add well. include statement mandatory register functionality () loaded indicator function. export tag important resource actually exposed users package.","code":"#' Short title #' #' One or more description paragraphs might follow here. Please describe #' required resource and user arguments here. #' Please document which processing engines are available for your indicator #' and briefly describe how the indicator is derived from its inputs. #' #' @name <the short name of your indicator, same as in the backlog> #' @param <any user-facing arguments> #' @keywords indicator <identifies the documentation as an indicator> #' @returns A function that calculates an indicator for a portfolio #' @include register.R #' @export"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-an-indicator-function---outer-level","dir":"Articles","previous_headings":"Adding an indicator","what":"Constructing an indicator function - Outer level","title":"Contributing","text":"Indicator functions constructed closures, .e. functions return function. outer level exposes arguments set users function fine-control flow function. Note, important check user input outer level correctness warning/error messages case miss specifications thrown immediately. elevation, outer level look something like : exported helper functions re-occurring argument checks free use (e.g. check_engine()). Note, arguments defined way outer level indicator function ready used inner level look next.","code":"calc_elevation <- function(engine = \"extract\",                            stats = \"mean\") {   engine <- check_engine(engine)   stats <- check_stats(stats)    # ... inner function level }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-an-indicator-function---inner-level","dir":"Articles","previous_headings":"Adding an indicator","what":"Constructing an indicator function - Inner level","title":"Contributing","text":"inner level indicator function mandatory function signature checked run-time. function required exactly specify signature. elevation indicator, looks like : x argument represents portfolio object handed user calling get_resources() sf-object 'POLYGON' features. Next, comes name(s) required resource(s) name indicator. follows computation mode, must one \"asset\" \"portfolio\". realized, large (potentially global) portfolios, depending spatial resolution resource, different processing modes substantially impact time needed computation. high medium resolution raster resources, processing asset level benefits computation time. However, spatially cropping coarse resolution datasets high number assets introduces significant overhead, thus processing resources portfolio level efficient. neither two processing modes lead satisfactory processing times indicator, please leave issue/comment discuss addition another processing mode maintainers package. argument verbose defaults corresponding package-wide option control verbosity indicator function.","code":"function(x,          nasa_srtm = NULL,          name = \"elevation\",          mode = \"asset\",          verbose = mapme_options()[[\"verbose\"]]) {   # ... function body }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"constructing-an-indicator-function---body","dir":"Articles","previous_headings":"Adding an indicator","what":"Constructing an indicator function - Body","title":"Contributing","text":"expected output indicator function tibble. Depending mode specified processing, single tibble mode = \"asset\", list tibbles equal rows x case mode = \"portfolio\". may use helper functions provided package common interface e.g. vector-raster zonal statistics (e.g. using select_engine()). encouraged write helper function needed indicator processor. located file main processor, start dot exported. wish include roxygen documentation helpers, make sure add @keywords internal @noRd tags functions. feel one helper functions benefit just one indicator, please comment issue/pull-request discuss package maintainers helper function moved R/utils.R. Use verbose argument decide informative messages printed, e.g. inform users processing progress. Errors warnings emitted either case. intersection x object required resources, reason indicator might calculated given configuration, make sure return NA early possible.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/contributing.html","id":"adding-units-tests-for-an-indicator","dir":"Articles","previous_headings":"Adding an indicator","what":"Adding units tests for an indicator","title":"Contributing","text":"required add unit tests indicator using package internal example data sets resources. Make sure properly test missspecification user-facing arguments also check correctness numerical results indicator. might need construct portfolio scratch test indicator function. Instead, can directly call returned function appropriate polygon respective required resource. elevation indicator, looks like :","code":"x <- read_sf(system.file(   \"extdata\", \"sierra_de_neiba_478140.gpkg\",   package = \"mapme.biodiversity\" ))  nasa_srtm <- list.files(   system.file(     \"res\", \"nasa_srtm\",     package = \"mapme.biodiversity\"   ),   pattern = \".tif$\", full.names = TRUE )  nasa_srtm <- rast(nasa_srtm) ce <- calc_elevation(stats = c(\"mean\", \"median\", \"sd\")) result_multi_stat <- ce(shp, nasa_srtm)  expect_equal(   names(result_multi_stat),   c(\"elevation_mean\", \"elevation_median\", \"elevation_sd\") )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Introduction","text":"mapme.biodiversity facilitates statistical data analysis protected areas around globe. supports high number biodiversity related datasets associated indicators can utilized monitor evaluate effectiveness protection efforts. Several indicators available regular intervals almost two decades (2000 2020). allows users analyse spatial temporal dynamics biodiversity portfolios. package abstracts repetitive tasks, temporal spatial selection resources. allows seamless approach quantitative data analysis even large (potentially global) portfolios users enabled focus aims analysis. package tested Microsoft Azure’s cloud infrastructure well local machines. internal framework designed allow easy process provide extensions form custom resources indicators, unlocking potential future growth supported datasets. thus highly appreciate Pull-Requests contributing new resources/indicators. geographic data analysis, package uses sf operation vector data terra raster data.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"mapme-biodiversity-package","dir":"Articles","previous_headings":"","what":"mapme.biodiversity package","title":"Introduction","text":"mapme.biodiversity provides standardized interface download analyse great variety biodiversity related spatial datasets allowing users focus aims analysis. sometimes cumbersome process handling different spatial data formats spatial temporal selection handled internally. Many organizations provide value-added datasets related biodiversity. organizations often use different technology stacks distribute data. mapme.biodiversity contains simple routines communicate different backends provide seamless access data. desired resources made available locally, users can decide indicators want calculate fine-control routines provided.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"functionalities","dir":"Articles","previous_headings":"","what":"Functionalities","title":"Introduction","text":"Currently, package offers several functionalities, ideally used consecutive order realize seamless analysis workflow: construct portfolio based sf object get resources spatio-temporal extent portfolio calculate indicators based available resources asset portfolio write results disk GeoPackage use Geo-Spatial software, conduct statistical analysis R","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"inputs-outputs","dir":"Articles","previous_headings":"","what":"Inputs, Outputs","title":"Introduction","text":"sf object containing geometries type 'POLYGON' arbitrary metadata raster vector resources matching spatio-temporal extent portfolio downloaded made available locally. necessary inputs subsequent calculation indicators, raw resource also can used, e.g. custom visualizations analysis. Importantly, resource directory can used different portfolios analysis runs, matching resources figured run time. Thus, need store multiple copies input resources. results indicator calculation added portfolio object nested list columns. approach makes feasible support variety indicators differently shaped outputs (e.g. time variant vs. invariant indicators). analysis done R, pose serious limitations, desired indicator can easily unnested via tidyr::unnest(). However, data shared use geospatial software (e.g.  QGIS), routine write portfolio object GeoPackage disk provided. indicator written independent table unique identifier allows joining attributes geometries later.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/introduction.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"Introduction","text":"potential limiting factor now processing single large polygons. terra package provides memory-save framework process large raster extents, RAM overflows occur several large polygons processed parallel. advise process large polygons sequentially. took great effort evaluate efficient processing routines indicator. submit new indicator using efficient routine currently implemented package, please contact maintainers via e-mail, issue pull-request happily discuss options integrate routine wider framework planning add new features extend functionality mapme.biodiversity address limitations best possible.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"How To: Use downloaded resources","text":"mapme.biodiversity can used simply download number spatial resources conduct custom analysis data. tutorial shows access downloaded data conducting small example analysis. scope tutorial, interested analyzing fire intensities Serengeti National Park (NP), Tanzania. going use mapme.biodiversity download fire detection product based MODIS satellites distributed NASA conduct fairly simple analysis fire intensities within national park.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"How To: Use downloaded resources","text":"First, start loading required packages needed analysis. Next, create directory write data . keep path directory variable, going need later access data. using wdpar package download data base protected areas Tanzania subset Serengeti NP. Note, cast geometry \"POLYGON\" type geometry actually expected mapme.biodiversity. next code chunk, specify output directory data downloaded . now ready actually download data. Note, running next code chunk actually takes significant time nasa_firms resource rather large data set. nasa_firms data set processed mapme.biodiversity package collection points stored GeoPackage year observation indicating detection fire associated confidence level detection. Follow resources linked help(nasa_firms) find data. download completed, can find data data_dir specified earlier constructing portfolio. new subfolder requested resource name. Since nasa_firms data global data set interested fires observed Serengeti NP, apply one filter reading data contain points within bounding box AOI. apply another filter subset points actually fall within polygon. ’s ! actually accessed original data mapme.biodiversity package downloaded us. Now can work data way suitable analysis. Follow along want learn nasa_firms resource can used map fire intensity within Serengeti NP!","code":"library(sf) library(rgl) library(wdpar) library(dplyr) library(purrr) library(units) library(stringr) library(ggplot2) library(spatstat) library(lubridate) library(mapme.biodiversity) data_dir <- \"assets/data\" dir.create(data_dir, recursive = TRUE, showWarnings = FALSE) data <- wdpa_fetch(\"Tanzania\", download_dir = data_dir) aoi <- data[data$NAME == \"Serengeti National Park\", ] aoi <- st_cast(aoi[1, ], \"POLYGON\") aoi <- mapme_options(outdir = data_dir, verbose = TRUE) aoi <- get_resources(aoi, get_nasa_firms(years = 2010:2020, instrument = \"MODIS\")) gpkgs <- list.files(file.path(data_dir, \"nasa_firms\"),   pattern = \".gpkg\", full.names = TRUE ) nasa_firms <- map_dfr(gpkgs, function(x) {   read_sf(x, wkt_filter = st_as_text(st_as_sfc(st_bbox(aoi)))) }) nasa_firms <- nasa_firms[unlist(st_contains(aoi, nasa_firms)), ]"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"eda-of-fire-events","dir":"Articles","previous_headings":"","what":"EDA of fire events","title":"How To: Use downloaded resources","text":"First, let’s take look . select confidence value 50 include detection higher probability actually representing fire event. , construct new variable representing year observation finally create plot showing spatio-temporal distribution fire events Serengeti NP.  Visually, seems gradient higher numbers fires detected North-East National Park towards lower numbers South-West park. Also, years substantially fewer fires seem occur compared years. Let’s confirm last observation plotting barplot numbers fires every years. find fires occurred 2016 2020 lowest numbers observed 2017 2011. difference highest lowest observed fires 1270 fires average number fires per year 853  now take closer look intra-annual distribution fires. , , construct new variable indicating month certain observation made.  see clear seasonal pattern occurrences fires fires observed months June July. February September also substantiall numbers fires observer, fewer fire season. now might look intra-annual distribution different angle dividing year quarters starting month March using meteorological division year.  perspective, relevant quarter analyzing fires Serengeti NP seems second one spanning months June, July, August. thus filter data include fire observations second quarter ignore rest scope tutorial. , let’s spatial visualization data going work now.","code":"nasa_firms <- filter(nasa_firms, confidence > 50) nasa_firms$year <- as.factor(year(nasa_firms$acq_date))  ggplot() +   geom_sf(data = aoi, inherit.aes = TRUE) +   geom_sf(data = nasa_firms, alpha = .1, color = \"#f18e26\") +   coord_sf(expand = FALSE) +   theme_classic() +   theme(axis.text.x = element_text(angle = 90)) +   scale_x_continuous(breaks = seq(from = 34.0, to = 35.0, by = .5)) +   facet_wrap(~year, nrow = 2, switch = \"x\") nasa_firms %>%   st_drop_geometry() %>%   ggplot() +   geom_bar(aes(as.factor(year)), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Year\", y = \"Count of fire events\") nasa_firms$month <- factor(format(as.Date(nasa_firms$acq_date), \"%b\"),   labels = month(1:12, label = TRUE, abbr = TRUE) )  nasa_firms %>%   st_drop_geometry() %>%   ggplot() +   geom_bar(aes(x = month), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Month\", y = \"Count of fire events\") nasa_firms$quarter <- quarter(nasa_firms$acq_date, fiscal_start = 3)  nasa_firms %>%   st_drop_geometry() %>%   mutate(quarter = paste0(\"Q\", quarter)) %>%   ggplot() +   geom_bar(aes(x = quarter), fill = \"#f18e26\") +   theme_classic() +   labs(x = \"Quarter\", y = \"Count of fire events\") nasa_firms <- filter(nasa_firms, quarter == 2)  ggplot() +   geom_sf(data = aoi) +   geom_sf(data = nasa_firms, alpha = .1, color = \"#f18e26\") +   theme_classic() +   theme(axis.text.x = element_text(angle = 90)) +   scale_x_continuous(breaks = seq(from = 34.0, to = 35.0, by = .5)) +   facet_wrap(~year, nrow = 2, switch = \"x\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/nasa-firms.html","id":"kernel-based-intensity-estimation","dir":"Articles","previous_headings":"","what":"Kernel-based intensity estimation","title":"How To: Use downloaded resources","text":"visual interpretation data might conclude occurrence fire events spatially clustered tendency fires observed North-East compared South-West. Imagine wanted highlight areas park rangers watch emerging fires closely order prevent burning large area. One approach produce map use kernel-based estimation intensity observed point pattern. spatstat package provides ton functionality work point patterns, one allows empirical estimation intensity surface. , need transform data planar coordinate system plug spatstat specific point-pattern object. summary Planar Point Pattern object shows important information. First, 7361 points begin . distributed observation window constituted shape Serengeti NP size 13094316275 m². Thus, obtain average intensity whole national park 5.62152299153907e-07 1/m² 0.5622 1/km². Let’s now test assumption point pattern fires observed shows tendency clustering. use spatstat estimate Ripley’s K function (see information). K function compares observed point pattern simulation number patterns product process showing complete spatially randomness (CSR). statistic count number neighboring points within increasing distance r point observed pattern simulated ones. Comparing two, simply put, allows draw conclusions behavior observed pattern certain distances. observed number points specific distance higher expected one CSR, points tend cluster together distance. hand, less points spatial neighborhood point expected CSR, indication inhibition points. Note, estimation K assumes point process stationary - intensity fire events homogeneous within observation window. intensity - homogeneous, sure clustering result spatially varying intensity (first order effect) points attract form clusters (second order effect). Since interested drawing conclusions process generating observed pattern tutorial, can accept caveat.  see largest part varying distance r, observed pattern seems clustered CSR process (note, units r meters). large values r observed pattern within expected range CSR. now interested producing map estimated intensity informs us areas fires likely occur. using kernel-based empirical estimation observed intensity. means moving kernel point pattern calculate empirical intensity within current kernel. main challenge determine bandwidth parameter sigma best fits data. standard approach spatstat solely determine sigma based size shape observation window. might achieve better visualization customized value sigma. Since point pattern shows tendency towards clustering, apply simple heuristic derive value sigma. calculate difference observed K K values CSR. , determine spatial distance r difference two maximal. get sigma simply take half value distance. indicates distance observed simulated K maximal distance 14050 bandwidth kernel estimation intensity 7025. can now use density() function apply kernel-based estimation intensity custom sigma value.  Let’s make quick sanity check empirical intensity matches point pattern. , remember units intensity fires per m². thus need multiply sum pixel values spatial resolution. actual identical values, kernel-based estimate number events close enough observed one. now might also include 3D animation intensity surface allow even better investigation.","code":"center <- st_coordinates(st_centroid(aoi)) laea <- paste0(   \"+proj=laea +lat_0=\", center[2],   \" +lon_0=\", center[1], \" +x_0=0 +y_0=0\" )  aoi_laea <- st_transform(aoi, crs = laea) fires_laea <- st_transform(nasa_firms, crs = laea)  ppp_fires <- as.ppp(c(st_as_sfc(aoi_laea), st_as_sfc(fires_laea))) summary(ppp_fires) #> Planar point pattern:  7361 points #> Average intensity 5.646643e-07 points per square unit #>  #> Coordinates are given to 3 decimal places #> i.e. rounded to the nearest multiple of 0.001 units #>  #> Window: polygonal boundary #> single connected closed polygon with 401 vertices #> enclosing rectangle: [-101678.14, 53378.67] x [-109059.06, 101908.44] units #>                      (155100 x 211000 units) #> Window area = 13036100000 square units #> Fraction of frame area: 0.399 k_env <- envelope(ppp_fires, Kest,   nsim = 99, correction = \"border\", verbose = FALSE ) plot(k_env) diff <- k_env$obs - k_env$theo sigma <- k_env$r[which.max(diff)] / 2 dens_emp <- density(ppp_fires, sigma = sigma) plot(dens_emp, ribbon = FALSE, addcontour = TRUE) res <- dens_emp$xstep * dens_emp$ystep sum(dens_emp) * res #> [1] 7384.578 nrow(nasa_firms) #> [1] 7361 map2color <- function(x, pal, limits = range(x, na.rm = TRUE)) {   pal[findInterval(x, seq(limits[1], limits[2], length.out = length(pal) + 1),     all.inside = TRUE   )] }  pal <- colorRampPalette(c(\"blue\", \"yellow\", \"red\")) cols <- map2color(dens_emp$v,   pal = pal(100),   limits = c(     min(dens_emp$v, na.rm = TRUE),     quantile(dens_emp$v, .75, na.rm = TRUE)   ) )  persp3d(dens_emp$v,   col = cols, xlab = \"X\", ylab = \"Y\", zlab = \"Fire Intensity\",   main = \"Fire intensity for Q2\", aspect = c(1, 1, .65) ) control <- par3dinterpControl(spin3d(axis = c(0, 0, 1)), 0, 12, steps = 40) rglwidget() %>% playwidget(control, step = 0.01, loop = TRUE, rate = 0.5)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"How To: Transform indicator output to wide-format","text":"tutorial gives information transform output mapme-biodiversity package wide format exchange (geospatial-)software, QGIS. necessary package uses -called nested-list format default support different indicators may come format. However, format specific R use data software thus requires additional steps taken. vignette thus shows can obtain wide-format portfolio can easily export use software.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"what-are-long-vs--wide-tables","dir":"Articles","previous_headings":"","what":"What are long vs. wide tables?","title":"How To: Transform indicator output to wide-format","text":"Tabular data can structured two different ways, usually referred long wide format. people familiar wide format, format humans naturally structure data work spreadsheets, e.g. Excel. wide-format, identifier observation included exactly repeat (see Table ). long format, identifier well qualifying variables, might repeated several times uniquely identify observation single row (see Table B). long format often required interacting computers, e.g. make plots ggplot2. content two exactly either way, one might just friendly humans computers. familiar R tidyverse, might also heard term tidy data. terms tabular data can imagine tidy data referring data long table naturally fulfills following requirements: variable column observation row value cell Table , sense, tidy since year variable found column instead scattered two different columns. Table B long format variable found exactly one column. sense, individual row represents exactly one observation, meaning observation specific country specific year. structure data long format objects usually larger memory footprint compared wide format. smaller objects data types small memory consumption, might pose serious limitation workflow. However, geometry information, indicated WKT string, might quickly accumulate large proportion available memory, even portfolio consists high number complex geometries copied fit long-format requirement. reason, packages uses nested-list format hold tables indicators single columns within portfolio. remainder tutorial show detail can work R specific data format.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"the-simple-case---single-row-indicators","dir":"Articles","previous_headings":"","what":"The simple case - single-row indicators","title":"How To: Transform indicator output to wide-format","text":"start reading GeoPackage disk. sake argument, split original single polygon 9 distinct polygons simulate realistic portfolio consisting multiple assets. simple example, suppose interested extracting average traveltime cities 20,000 50,000 inhabitants portfolio. usual, make available Nelson et al. resource well requesting calculation respective indicator. can observe output, new column added sf object. called traveltime type list indicating represents nested-list column. means able maintain rectangular shape original data (e.g. one polygon per row), supporting arbitrarily shaped outputs indicators. Let’s observe traveltime indicator looks like instance: syntax , can see can access single object within nested list column (e.g. using list accessor [[). case, shape traveltime indicator single-row two-column tibble average minutes distance category value. indicator comes single row, can simply unnest traveltime column get wide-format output: case, result 9 rows just like original data frame. particular scenario, variable minutes_mean, object port_wide_1 contains just one value per polygon. aligns well characteristics wide format, can easily understood processed various (geospatial) software. , can now export portfolio example geopackage can read directly e.g. QGIS CSV without geospatial information:","code":"aoi <- read_sf(   system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",     package = \"mapme.biodiversity\"   ) ) aoi <- st_as_sf(st_make_grid(aoi, n = 3)) print(aoi) #> Simple feature collection with 9 features and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #>                                x #> 1 POLYGON ((-71.80933 18.5766... #> 2 POLYGON ((-71.65022 18.5766... #> 3 POLYGON ((-71.49111 18.5766... #> 4 POLYGON ((-71.80933 18.6175... #> 5 POLYGON ((-71.65022 18.6175... #> 6 POLYGON ((-71.49111 18.6175... #> 7 POLYGON ((-71.80933 18.6584... #> 8 POLYGON ((-71.65022 18.6584... #> 9 POLYGON ((-71.49111 18.6584... mapme_options(outdir = system.file(\"res\", package = \"mapme.biodiversity\"))  port_w_nelson <- get_resources(aoi, get_nelson_et_al(ranges = \"20k_50k\")) #> Skipping existing files in output directory. port_w_traveltime <- calc_indicators(port_w_nelson, calc_traveltime(stats = \"mean\")) #> Found a column named 'assetid'. Overwritting its values with a unique identifier. print(port_w_traveltime) #> Simple feature collection with 9 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 3 #>   assetid traveltime                                                           x #>     <int> <list>                                                   <POLYGON [°]> #> 1       1 <tibble [1 × 2]> ((-71.80933 18.57668, -71.65022 18.57668, -71.65022 … #> 2       2 <tibble [1 × 2]> ((-71.65022 18.57668, -71.49111 18.57668, -71.49111 … #> 3       3 <tibble [1 × 2]> ((-71.49111 18.57668, -71.33201 18.57668, -71.33201 … #> 4       4 <tibble [1 × 2]> ((-71.80933 18.61756, -71.65022 18.61756, -71.65022 … #> 5       5 <tibble [1 × 2]> ((-71.65022 18.61756, -71.49111 18.61756, -71.49111 … #> 6       6 <tibble [1 × 2]> ((-71.49111 18.61756, -71.33201 18.61756, -71.33201 … #> 7       7 <tibble [1 × 2]> ((-71.80933 18.65844, -71.65022 18.65844, -71.65022 … #> 8       8 <tibble [1 × 2]> ((-71.65022 18.65844, -71.49111 18.65844, -71.49111 … #> 9       9 <tibble [1 × 2]> ((-71.49111 18.65844, -71.33201 18.65844, -71.33201 … print(port_w_traveltime$traveltime[[1]]) #> # A tibble: 1 × 2 #>   minutes_mean distance #>          <dbl> <chr>    #> 1         49.8 20k_50k port_wide_1 <- tidyr::unnest(port_w_traveltime, traveltime) print(port_wide_1) #> Simple feature collection with 9 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 4 #>   assetid minutes_mean distance                                                x #>     <int>        <dbl> <chr>                                       <POLYGON [°]> #> 1       1         49.8 20k_50k  ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> 2       2        104.  20k_50k  ((-71.65022 18.57668, -71.49111 18.57668, -71.4… #> 3       3        112.  20k_50k  ((-71.49111 18.57668, -71.33201 18.57668, -71.3… #> 4       4         84   20k_50k  ((-71.80933 18.61756, -71.65022 18.61756, -71.6… #> 5       5        139.  20k_50k  ((-71.65022 18.61756, -71.49111 18.61756, -71.4… #> 6       6        104.  20k_50k  ((-71.49111 18.61756, -71.33201 18.61756, -71.3… #> 7       7        141.  20k_50k  ((-71.80933 18.65844, -71.65022 18.65844, -71.6… #> 8       8        118.  20k_50k  ((-71.65022 18.65844, -71.49111 18.65844, -71.4… #> 9       9         73.1 20k_50k  ((-71.49111 18.65844, -71.33201 18.65844, -71.3… st_write(port_wide_1, dsn = tempfile(fileext = \".gpkg\")) #> Writing layer `file260a19ceec97' to data source  #>   `/tmp/Rtmp8mg6Me/file260a19ceec97.gpkg' using driver `GPKG' #> Writing 9 features with 3 fields and geometry type Polygon. write.csv(st_drop_geometry(port_wide_1), file = tempfile(fileext = \".csv\"))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/output-wide.html","id":"the-harder-case---indicators-with-multi-row-output","dir":"Articles","previous_headings":"","what":"The harder case - indicators with multi-row output","title":"How To: Transform indicator output to wide-format","text":"Let’s continue query indicator multi-row output, .e. precipitation statistics WorldClim. see similar traveltime indicator, output consists 9 rows precipitation indicator single nested-list column. Note, however, differences take look shape indicator specific asset: single asset, obtain tibble 12 rows (month queried year 2018). Now, just simply unnest indicator column observe happens shape output: Instead 9 rows, get tibble 108 rows (9 assets * 12), metadata asset well geometry column repeated. desirable, especially portfolios large numbers assets repetition geometry data can cause large objects. Now, let’s investigate still able get wide output. valid approach re-shape indicators per asset wide format unnesting indicator column. , let’s write function takes precipitation indicator single asset input transforms wide-format. example output see custom prec2wide() functions takes single tibble input, puts dates appended prec- column names associated average precipitation values single row. Now, can use functionality purrr package map function indicator column, save result new column (simply overwrite original), finally simply call unnest get output wide format. can now use st_write() save wide-format sf object geospatial format choice drop geometry information altogether dump data csv.","code":"port_w_wc <- get_resources(aoi, get_worldclim_precipitation(years = 2010:2018)) #> Skipping existing files in output directory. port_w_prec <- calc_indicators(port_w_wc, calc_precipitation_wc(stats = \"mean\")) #> Found a column named 'assetid'. Overwritting its values with a unique identifier. print(port_w_prec) #> Simple feature collection with 9 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 3 #>   assetid precipitation_wc                                                     x #>     <int> <list>                                                   <POLYGON [°]> #> 1       1 <tibble [12 × 2]> ((-71.80933 18.57668, -71.65022 18.57668, -71.65022… #> 2       2 <tibble [12 × 2]> ((-71.65022 18.57668, -71.49111 18.57668, -71.49111… #> 3       3 <tibble [12 × 2]> ((-71.49111 18.57668, -71.33201 18.57668, -71.33201… #> 4       4 <tibble [12 × 2]> ((-71.80933 18.61756, -71.65022 18.61756, -71.65022… #> 5       5 <tibble [12 × 2]> ((-71.65022 18.61756, -71.49111 18.61756, -71.49111… #> 6       6 <tibble [12 × 2]> ((-71.49111 18.61756, -71.33201 18.61756, -71.33201… #> 7       7 <tibble [12 × 2]> ((-71.80933 18.65844, -71.65022 18.65844, -71.65022… #> 8       8 <tibble [12 × 2]> ((-71.65022 18.65844, -71.49111 18.65844, -71.49111… #> 9       9 <tibble [12 × 2]> ((-71.49111 18.65844, -71.33201 18.65844, -71.33201… print(port_w_prec$precipitation_wc[[1]]) #> # A tibble: 12 × 2 #>    prec_mean date       #>        <dbl> <date>     #>  1      21.1 2018-01-01 #>  2      21.4 2018-02-01 #>  3      61.4 2018-03-01 #>  4      83.6 2018-04-01 #>  5     331.  2018-05-01 #>  6      60.3 2018-06-01 #>  7      74.0 2018-07-01 #>  8      94.0 2018-08-01 #>  9     207.  2018-09-01 #> 10     126.  2018-10-01 #> 11      52.6 2018-11-01 #> 12      20.2 2018-12-01 port_wide_2 <- tidyr::unnest(port_w_prec, precipitation_wc) print(port_wide_2) #> Simple feature collection with 108 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 108 × 4 #>    assetid prec_mean date                                                      x #>      <int>     <dbl> <date>                                        <POLYGON [°]> #>  1       1      21.1 2018-01-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  2       1      21.4 2018-02-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  3       1      61.4 2018-03-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  4       1      83.6 2018-04-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  5       1     331.  2018-05-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  6       1      60.3 2018-06-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  7       1      74.0 2018-07-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  8       1      94.0 2018-08-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #>  9       1     207.  2018-09-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> 10       1     126.  2018-10-01 ((-71.80933 18.57668, -71.65022 18.57668, -71.6… #> # ℹ 98 more rows prec2wide <- function(data) {   pivot_wider(data, names_from = date, values_from = prec_mean, names_prefix = \"prec-\") } prec2wide(port_w_prec$precipitation_wc[[1]]) #> # A tibble: 1 × 12 #>   `prec-2018-01-01` `prec-2018-02-01` `prec-2018-03-01` `prec-2018-04-01` #>               <dbl>             <dbl>             <dbl>             <dbl> #> 1              21.1              21.4              61.4              83.6 #> # ℹ 8 more variables: `prec-2018-05-01` <dbl>, `prec-2018-06-01` <dbl>, #> #   `prec-2018-07-01` <dbl>, `prec-2018-08-01` <dbl>, `prec-2018-09-01` <dbl>, #> #   `prec-2018-10-01` <dbl>, `prec-2018-11-01` <dbl>, `prec-2018-12-01` <dbl> port_w_prec$precipitation_wc2 <- purrr::map(port_w_prec$precipitation_wc, prec2wide) port_w_prec <- select(port_w_prec, precipitation_wc2) port_wide_3 <- unnest(port_w_prec, precipitation_wc2)  print(port_wide_3) #> Simple feature collection with 9 features and 12 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 13 #>   `prec-2018-01-01` `prec-2018-02-01` `prec-2018-03-01` `prec-2018-04-01` #>               <dbl>             <dbl>             <dbl>             <dbl> #> 1              21.1              21.4              61.4              83.6 #> 2              25.9              24.5              62.0              82.8 #> 3              24.5              24.2              58.4              83.9 #> 4              32.1              28.1              72.8              80.9 #> 5              28.7              28.4              68.4              83.3 #> 6              17.6              19.8              54.4              83.6 #> 7              24.5              24.3              69.9              80.1 #> 8              19.4              21.1              62.8              86.8 #> 9              14.2              17.5              52.2              85.6 #> # ℹ 9 more variables: `prec-2018-05-01` <dbl>, `prec-2018-06-01` <dbl>, #> #   `prec-2018-07-01` <dbl>, `prec-2018-08-01` <dbl>, `prec-2018-09-01` <dbl>, #> #   `prec-2018-10-01` <dbl>, `prec-2018-11-01` <dbl>, `prec-2018-12-01` <dbl>, #> #   x <POLYGON [°]> st_write(port_wide_3, dsn = tempfile(fileext = \".gpkg\")) #> Writing layer `file260a314f27eb' to data source  #>   `/tmp/Rtmp8mg6Me/file260a314f27eb.gpkg' using driver `GPKG' #> Writing 9 features with 12 fields and geometry type Polygon. write.csv(st_drop_geometry(port_wide_3), file = tempfile(fileext = \".csv\"))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quickstart","text":"following demonstrate idealized workflow based subset WorldPop data set delivered together package. can follow along code snippets reproduce results. Please note reduce time takes process vignette, download resources internet. real use case, thus processing time might substantially increase resources downloaded real portfolios might larger one created example. vignette assumes already followed steps Installation familiarized terminology used package. unfamiliar terminology used , please head Terminology article learn important concepts. idealized workflow using mapme.biodiversity consists following steps: prepare sf-object containing geometries type 'POLYGON' decide indicator(s) wish calculate make required resource(s) available conduct indicator calculation, adds nested list column portfolio object continue analysis R decide export results GeoPackage use geospatial software","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Quickstart","text":"First, load mapme.biodiversity sf package handling spatial vector data. tabular data handling, also load dplyr tidyr packages. , read internal GeoPackage includes geometry protected area Dominican Republic WDPA database. sf-object contains single object geometry type 'MULTIPOLYGON'. mapme.biodiversity package, however, supports geometries type 'POLYGON', thus need cast geometry advance. resulting sf object also contains metadata, retained throughout complete workflow. casted geometries represent artefacts digitization process, example subset include largest polygon. following, simulate portfolio consisting several polygons (assets, jargon package). end, create smaller polygons within original extent main polygon. way, can showcase behavior mapme.biodiversity package portfolios contain multiple assets. select single assets geometry type 'POLYGON' lie within original boundary protected area.","code":"library(mapme.biodiversity) library(sf) library(dplyr) library(tidyr)  aoi_path <- system.file(\"extdata\", \"sierra_de_neiba_478140.gpkg\", package = \"mapme.biodiversity\") (aoi <- read_sf(aoi_path)) #> Simple feature collection with 1 feature and 4 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 5 #>   WDPAID NAME            DESIG_ENG     ISO3                                 geom #>    <dbl> <chr>           <chr>         <chr>                  <MULTIPOLYGON [°]> #> 1 478140 Sierra de Neiba National Park DOM   (((-71.76134 18.66333, -71.76067 1… (aoi <- st_cast(aoi, to = \"POLYGON\")[1, ]) #> Warning in st_cast.sf(aoi, to = \"POLYGON\"): repeating attributes for all #> sub-geometries for which they may not be constant #> Simple feature collection with 1 feature and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80731 ymin: 18.58134 xmax: -71.33268 ymax: 18.69799 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 5 #>   WDPAID NAME            DESIG_ENG     ISO3                                 geom #>    <dbl> <chr>           <chr>         <chr>                       <POLYGON [°]> #> 1 478140 Sierra de Neiba National Park DOM   ((-71.76202 18.66333, -71.74668 18… aoi_gridded <- st_make_grid(   x = st_bbox(aoi),   n = c(10, 10),   square = FALSE ) %>%   st_intersection(aoi) %>%   st_as_sf() %>%   mutate(geom_type = st_geometry_type(x)) %>%   filter(geom_type == \"POLYGON\") %>%   select(-geom_type, geom = x) %>%   st_as_sf()  metanames <- names(st_drop_geometry(aoi)) aoi_gridded[metanames] <- st_drop_geometry(aoi) plot(aoi_gridded)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"initialization-of-a-portfolio","dir":"Articles","previous_headings":"","what":"Initialization of a portfolio","title":"Quickstart","text":"Now, ready initiate portfolio object containing multiple assets. use mapme_options() function set arguments, output directory, important subsequent processing. outdir argument points towards directory local file system machine. downloaded resources written respective directories nested within outdir. request specific resource portfolio, files downloaded missing match spatio-temporal extent. behavior beneficial, e.g. case share outdir different projects ensure resources matching current portfolio returned. verbose logical controls whether package print informative messages calculations. Note, even set FALSE, package inform users potential errors warnings.","code":"# copying package internal resource to a temporary location outdir <- file.path(tempdir(), \"mapme.biodiversity\") dir.create(outdir) resource_dir <- system.file(\"res\", package = \"mapme.biodiversity\") file.copy(resource_dir, outdir, recursive = TRUE) #> [1] TRUE  mapme_options(   outdir = file.path(outdir, \"res\"),   verbose = TRUE )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"getting-the-right-resources","dir":"Articles","previous_headings":"","what":"Getting the right resources","title":"Quickstart","text":"can check indicators available via available_indicators() function: Say, interested population_count indicator. can learn indicator required resources using either commands , viewing online version, head population_count documentation. inspecting help page learned indicator requires worldpop resource requires specify two extra arguments: population statistic calculate eninge used calculation (learn engines ). information hand, can start retrieve required resource. can learn available resources using available_resources() function: purpose vignette, going download worldpop resource. can get detailed information given resource, using either commands open help page. viewing online version documentation, can simply head worldpop resource documentation. can now make worldpop resource available portfolio. use common interface used resources, called get_resources(). specify portfolio object supply one resource functions respective arguments. download matching resources output directory specified earlier. case want download one resource, can use interface resources made available sequentially. Required arguments resource simply added usual:","code":"available_indicators() #> # A tibble: 26 × 3 #>    name                   description                                  resources #>    <chr>                  <chr>                                        <list>    #>  1 active_fire_counts     Number of detected fires by NASA FIRMS       <tibble>  #>  2 active_fire_properties Extraction of properties of fires detected … <tibble>  #>  3 biome                  Areal statistics of biomes from TEOW         <tibble>  #>  4 deforestation_drivers  Areal statistics of deforestation drivers    <tibble>  #>  5 drought_indicator      Relative wetness statistics based on NASA G… <tibble>  #>  6 ecoregion              Areal statstics of ecoregions based on TEOW  <tibble>  #>  7 elevation              Statistics of elevation based on NASA SRTM   <tibble>  #>  8 fatalities             Number of fatalities by group of conflict b… <tibble>  #>  9 gsw_change             Statistics of the surface water change laye… <tibble>  #> 10 gsw_occurrence         Areal statistic of surface water based on o… <tibble>  #> # ℹ 16 more rows available_indicators(\"population_count\") #> # A tibble: 1 × 3 #>   name             description                    resources        #>   <chr>            <chr>                          <list>           #> 1 population_count Statistic of population counts <tibble [1 × 5]> ?population_count help(population_count) available_resources() #> # A tibble: 23 × 5 #>    name                             description             licence source type  #>    <chr>                            <chr>                   <chr>   <chr>  <chr> #>  1 chirps                           Climate Hazards Group … CC - u… https… rast… #>  2 esalandcover                     Copernicus Land Monito… CC-BY … https… rast… #>  3 fritz_et_al                      Drivers of deforestati… CC-BY … https… rast… #>  4 gfw_emissions                    Global Forest Watch - … CC-BY … https… rast… #>  5 gfw_lossyear                     Global Forest Watch - … CC-BY … https… rast… #>  6 gfw_treecover                    Global Forest Watch - … CC-BY … https… rast… #>  7 global_surface_water_change      Global Surface Water -… https:… https… rast… #>  8 global_surface_water_occurrence  Global Surface Water -… https:… https… rast… #>  9 global_surface_water_recurrence  Global Surface Water -… https:… https… rast… #> 10 global_surface_water_seasonality Global Surface Water -… https:… https… rast… #> # ℹ 13 more rows available_resources(\"worldpop\") #> # A tibble: 1 × 5 #>   name     description                                      licence source type  #>   <chr>    <chr>                                            <chr>   <chr>  <chr> #> 1 worldpop WorldPop - Unconstrained Global Mosaics 2000 - … CC-BY … https… rast… ?worldpop help(worldpop) aoi_gridded <- get_resources(x = aoi_gridded, get_worldpop(years = 2010:2015)) #> Skipping existing files in output directory. aoi_gridded <- get_resources(   x = aoi_gridded,   get_worldpop(years = 2010:2015),   get_gfw_treecover(version = \"GFC-2021-v1.8\") )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"calculate-specific-indicators","dir":"Articles","previous_headings":"","what":"Calculate specific indicators","title":"Quickstart","text":"next step consists calculating specific indicators. Note indicator requires one resources made available via get_resources() function explained . re-run function every new R session, note data already available re-downloaded. , goingto calculate population_count indicator based worldpop resource. Since resource made available previous step, can continue requesting calculation desired indicator. Note command issue error case required resource made available via get_resources() beforehand. Now let’s take look results. select metadata output indicator column get clearer picture happened. obtained new listed column sf-object named like requested indicator. asset portfolio, column contains tibble 6 rows two columns. Let’s closer look one objects. asset, result tibble long format indicating population sum per year (make sure read detailed indicator documentation via ?population_count). Let’s quickly visualize results single asset:  wish conduct statistical analysis R, can use tidyr functionality unnest one multiple columns. Especially large portfolios, usually good idea keep geometry information separated variable keep size data object relatively small.","code":"aoi_gridded <- calc_indicators(   aoi_gridded,   calc_population_count(engine = \"zonal\", stats = \"sum\") ) #> Found a column named 'assetid'. Overwritting its values with a unique identifier. (aoi_gridded <- aoi_gridded %>% select(assetid, population_count)) #> Simple feature collection with 23 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80731 ymin: 18.58134 xmax: -71.33268 ymax: 18.69799 #> Geodetic CRS:  WGS 84 #> # A tibble: 23 × 3 #>    assetid population_count                                                 geom #>      <int> <list>                                                  <POLYGON [°]> #>  1       1 <tibble [6 × 2]> ((-71.78358 18.65871, -71.78358 18.67725, -71.79993… #>  2       2 <tibble [6 × 2]> ((-71.79993 18.6867, -71.78358 18.67725, -71.75984 … #>  3       3 <tibble [6 × 2]> ((-71.76202 18.66333, -71.74668 18.64602, -71.74431… #>  4       4 <tibble [6 × 2]> ((-71.71238 18.62893, -71.71238 18.63615, -71.73611… #>  5       5 <tibble [6 × 2]> ((-71.75984 18.69367, -71.75984 18.69095, -71.73611… #>  6       6 <tibble [6 × 2]> ((-71.71429 18.68985, -71.73611 18.67725, -71.73611… #>  7       7 <tibble [6 × 2]> ((-71.66702 18.63736, -71.68865 18.64985, -71.71238… #>  8       8 <tibble [6 × 2]> ((-71.70975 18.68944, -71.68865 18.67725, -71.67141… #>  9       9 <tibble [6 × 2]> ((-71.67141 18.68721, -71.68865 18.67725, -71.68865… #> 10      10 <tibble [6 × 2]> ((-71.64095 18.64971, -71.64119 18.64985, -71.64178… #> # ℹ 13 more rows aoi_gridded$population_count[10] #> [[1]] #> # A tibble: 6 × 2 #>   population_count_sum year  #>                  <dbl> <chr> #> 1                 31.9 2010  #> 2                 43.3 2011  #> 3                 32.8 2012  #> 4                 32.9 2013  #> 5                 36.5 2014  #> 6                 38.0 2015 geometries <- select(aoi_gridded, assetid) aoi_gridded %>%   st_drop_geometry() %>%   tidyr::unnest(population_count) #> # A tibble: 138 × 3 #>    assetid population_count_sum year  #>      <int>                <dbl> <chr> #>  1       1                 305. 2010  #>  2       1                 313. 2011  #>  3       1                 324. 2012  #>  4       1                 321. 2013  #>  5       1                 286. 2014  #>  6       1                 330. 2015  #>  7       2                 217. 2010  #>  8       2                 218. 2011  #>  9       2                 224. 2012  #> 10       2                 241. 2013  #> # ℹ 128 more rows"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"enabling-parallel-computing","dir":"Articles","previous_headings":"","what":"Enabling parallel computing","title":"Quickstart","text":"mapme.biodiversity follows parallelization paradigm {future} package. means user control like set parallel processing. Currently, mapme.biodiversity supports parallel processing asset level calc_indicators() function . also currently assume parallel processing done cores single machine. future developments, like support distributed processing. working distributed use-cases, please contact developers, e.g. via discussion board mail. process e.g. 6 assets parallel report progress bar set following code: Note, code uses future::multisession() parallel backend. backend resolve calculation multiple background R sessions. use backend operating Windows, using R Studio otherwise sure backend use. case operating system allows process forking using R Studio, consider using future::multicore() efficient parallel processing.","code":"library(future) library(progressr)  plan(multisession, workers = 6) # set up parallel plan with 6 concurrent threads  with_progress({   aoi_gridded <- calc_indicators(     aoi_gridded,     calc_population_count(       engine = \"zonal\",       stats = \"sum\"     )   ) })  plan(sequential) # close child processes"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/articles/quickstart.html","id":"exporting-an-portfolio-object","dir":"Articles","previous_headings":"","what":"Exporting an portfolio object","title":"Quickstart","text":"can use write_portfolio() function save processed portfolio object disk GeoPackage. allows sharing data others might using R, geospatial software. Simply point towards non-existing file local disk write portfolio. function create individual table processed indicators. Via read_portfolio() function, portfolio written disk way can read back R. However, users note portfolio-wide arguments set mapme_options() reconstructed. Thus wish continue use mapme.biodiversity functionality portfolio object, make sure re-run init_portfolio()` .","code":"tmp_output <- tempfile(fileext = \".gpkg\") write_portfolio(   x = aoi_gridded,   dsn = tmp_output ) (portfolio_from_disk <- read_portfolio(tmp_output))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Darius . Görgen. Author, maintainer. Om Prakash Bhandari. Author.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Görgen D, Bhandari O (2024). mapme.biodiversity: Efficient Monitoring Global Biodiversity Portfolios. R package version 0.5.9002,  https://github.com/mapme-initiative/mapme.biodiversity/, https://mapme-initiative.github.io/mapme.biodiversity/index.html.","code":"@Manual{,   title = {mapme.biodiversity: Efficient Monitoring of Global Biodiversity Portfolios},   author = {Darius A. Görgen and Om Prakash Bhandari},   year = {2024},   note = {R package version 0.5.9002,  https://github.com/mapme-initiative/mapme.biodiversity/},   url = {https://mapme-initiative.github.io/mapme.biodiversity/index.html}, }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"mapmebiodiversity-","dir":"","previous_headings":"","what":"An R package for processing global biodiversity data","title":"An R package for processing global biodiversity data","text":"[!IMPORTANT]mapme.biodiversity currently experiencing major changes user-interface overall functionality. Please visit announcement issue learn changes.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"An R package for processing global biodiversity data","text":"Biodiversity areas, especially primary forests, provide multiple ecosystem services local population planet whole. rapid expansion human land use natural ecosystems impacts global climate crisis put natural ecosystems global biodiversity threat. mapme.biodiversity package helps analyse number biodiversity related indicators biodiversity threats based freely available geodata-sources Global Forest Watch. supports computational efficient routines heavy parallel computing cloud-infrastructures AWS Microsoft Azure using statistical programming language R. package allows analysis global biodiversity portfolios thousand millions AOIs normally possible dedicated platforms Google Earth Engine. provides possibility e.g. analyse World Database Protected Areas (WDPA) number relevant indicators. primary use case package support scientific analysis data science individuals organizations seek preserve planet biodiversity. development funded German Development Bank KfW.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for processing global biodiversity data","text":"package dependencies can installed CRAN via: install development version, use following command:","code":"install.packages(\"mapme.biodiversity\", dependencies = TRUE) remotes::install_github(\"https://github.com/mapme-initiative/mapme.biodiversity\", dependencies = TRUE)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"available-resources-and-indicators","dir":"","previous_headings":"","what":"Available resources and indicators","title":"An R package for processing global biodiversity data","text":"list resources currently supported mapme.biodiversity. Next, list supported indicators.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage example","title":"An R package for processing global biodiversity data","text":"mapme.biodiversity works constructing portfolio sf object. Specific raster vector resource matching spatio-temporal extent portfolio made available locally. required resources available, indicators can calculated individually asset portfolio. decided indicator interested , can start making required resource available portfolio. Using mapme_options() can set output directory control verbosity package. portfolio represented sf-object. required object contain geometries type POLYGON assets. can request download resource spatial extent portfolio using get_resources() function. simply supply portfolio one resource functions. resources made available, can query calculation indicator using calc_indicators() function. function also expects portfolio input one indicator functions. indicator calculated assets portfolio, data returned nested list column original portfolio object.","code":"library(mapme.biodiversity) library(sf) ## Linking to GEOS 3.12.1, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE mapme_options(   outdir = system.file(\"res\", package = \"mapme.biodiversity\"),   verbose = FALSE )  (system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\", package = \"mapme.biodiversity\") %>%   sf::read_sf() %>%   get_resources(     get_gfw_treecover(version = \"GFC-2020-v1.8\"),     get_gfw_lossyear(version = \"GFC-2020-v1.8\"),     get_gfw_emissions()   ) %>%   calc_indicators(calc_treecover_area_and_emissions(years = 2016:2017, min_size = 1, min_cover = 30)) %>%   tidyr::unnest(treecover_area_and_emissions)) ## Simple feature collection with 2 features and 8 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 ## Geodetic CRS:  WGS 84 ## # A tibble: 2 × 9 ##   WDPAID NAME            DESIG_ENG     ISO3  assetid years emissions treecover ##    <dbl> <chr>           <chr>         <chr>   <int> <int>     <dbl>     <dbl> ## 1 478140 Sierra de Neiba National Park DOM         1  2016      2400     2360. ## 2 478140 Sierra de Neiba National Park DOM         1  2017      2839     2348. ## # ℹ 1 more variable: geom <POLYGON [°]>"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/index.html","id":"a-note-on-parallel-computing","dir":"","previous_headings":"","what":"A note on parallel computing","title":"An R package for processing global biodiversity data","text":"mapme.biodiversity follows parallel computing paradigm {future} package. means user control like set parallel processing. Currently, mapme.biodiversity supports parallel processing asset level calc_indicators() function . also currently assume parallel processing done cores single machine. future developments, like support distributed processing. working distributed use-cases, please contact developers, e.g. via discussion board mail. process 6 assets parallel report progress bar set following code: Note, code uses future::multisession() parallel backend. backend resolve calculation multiple background R sessions. use backend operating Windows, using RStudio otherwise sure backend use. case operating system allows process forking using RStudio, consider using future::multicore() efficient parallel processing. Head online documentation find detailed information package.","code":"library(future) library(progressr)  plan(multisession, workers = 6) # set up parallel plan  with_progress({   aoi <- calc_indicators(     aoi,     calc_treecover_area_and_emissions(       min_size = 1,       min_cover = 30     )   ) })  plan(sequential) # close child processes"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"function allows efficiently calculate number fire events occurred region interest NASA FIRMS active fire polygon datasets. polygon, fire event counts desired year returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"","code":"calc_active_fire_counts()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"function returns tibble column number fire events per year instrument.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"required resources indicator : nasa_firms","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate active fire counts based on NASA FIRMS polygons — active_fire_counts","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nasa_firms(years = 2021, instrument = \"VIIRS\")) %>%   calc_indicators(calc_active_fire_counts()) %>%   tidyr::unnest(active_fire_counts)  aoi #> Simple feature collection with 1 feature and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 9 #>   WDPAID NAME        DESIG_ENG ISO3  assetid instrument year  active_fire_counts #>    <dbl> <chr>       <chr>     <chr>   <int> <chr>      <chr>              <int> #> 1 478140 Sierra de … National… DOM         1 VIIRS      2021                  21 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"function allows efficiently extract properties fire events occurred region interest NASA FIRMS active fire polygon datasets. polygon, fire events properties like fire pixel brightness temperature, fire radiative power (frp) along fire hotspots desired year returned. required resources indicator : nasa_firms","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"","code":"calc_active_fire_properties()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"function returns tibble column 15 different fire events variables including lon/lat coordinates.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/active_fire_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate active fire properties based on NASA FIRMS polygons — active_fire_properties","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nasa_firms(years = 2021, instrument = \"VIIRS\")) %>%   calc_indicators(calc_active_fire_properties()) %>%   tidyr::unnest(active_fire_properties) #> Resource 'nasa_firms' is already available.  aoi #> Simple feature collection with 21 features and 20 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 21 #>    WDPAID NAME  DESIG_ENG ISO3  assetid bright_ti4  scan track acq_date acq_time #>     <dbl> <chr> <chr>     <chr>   <int>      <dbl> <dbl> <dbl> <chr>       <int> #>  1 478140 Sier… National… DOM         1       338.  0.49  0.41 2021-01…     1812 #>  2 478140 Sier… National… DOM         1       341.  0.39  0.36 2021-01…     1754 #>  3 478140 Sier… National… DOM         1       298.  0.67  0.73 2021-01…      524 #>  4 478140 Sier… National… DOM         1       299.  0.67  0.73 2021-01…      524 #>  5 478140 Sier… National… DOM         1       333.  0.33  0.55 2021-02…     1718 #>  6 478140 Sier… National… DOM         1       345.  0.68  0.74 2021-02…     1700 #>  7 478140 Sier… National… DOM         1       346.  0.42  0.45 2021-03…     1736 #>  8 478140 Sier… National… DOM         1       346.  0.41  0.61 2021-03…     1712 #>  9 478140 Sier… National… DOM         1       336.  0.39  0.36 2021-03…     1754 #> 10 478140 Sier… National… DOM         1       331.  0.39  0.36 2021-03…     1754 #> # ℹ 11 more rows #> # ℹ 11 more variables: satellite <chr>, instrument <chr>, confidence <chr>, #> #   version <int>, bright_ti5 <dbl>, frp <dbl>, daynight <chr>, type <int>, #> #   longitude <dbl>, latitude <dbl>, geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate biomes statistics (TEOW) based on WWF — biome","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"function allows efficiently retrieve name biomes compute corresponding area Terrestrial Ecoregions World (TEOW) - World Wildlife Fund (WWF) polygons. polygon, name area biomes (hectare) returned. required resources indicator : teow","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"","code":"calc_biome()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"function returns tibble column name biomes corresponding area (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/biome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate biomes statistics (TEOW) based on WWF — biome","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_teow()) %>%   calc_indicators(calc_biome()) %>%   tidyr::unnest(biome)  aoi #> Simple feature collection with 1 feature and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 8 #>   WDPAID NAME    DESIG_ENG ISO3  assetid biomes   area                      geom #>    <dbl> <chr>   <chr>     <chr>   <int> <chr>   <dbl>             <POLYGON [°]> #> 1 478140 Sierra… National… DOM         1 Tropi… 18349. ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_available_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to check yearly availability — check_available_years","title":"Helper to check yearly availability — check_available_years","text":"Use function check specifed vector years intersects yearly availablity resource.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_available_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to check yearly availability — check_available_years","text":"","code":"check_available_years(target_years, available_years, indicator)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_available_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to check yearly availability — check_available_years","text":"target_years Numeric indicating target year. available_years Numeric indicating available years. indicator character vector target resource/indicator name.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_namespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if namespace is available — check_namespace","title":"Checks if namespace is available — check_namespace","text":"Use function resource/indicator function requires namespace certain package available. informative error message printed case.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_namespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if namespace is available — check_namespace","text":"","code":"check_namespace(pkg)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_namespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if namespace is available — check_namespace","text":"pkg character vector length one indicating package name namespace tested","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/check_namespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if namespace is available — check_namespace","text":"TRUE, invisible, namespace available. error message otherwise.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"resource published Funk et al. (2015) represents quasi-global (50°S-50°S) rainfall estimation monthly resolution starting year 1981 near-present. spatial resolution 0.05°. data can used retrieve information amount rainfall. Due availability +30 years, anomaly detection long-term average analysis also possible. routine download complete archive order support long-term average anomaly calculations respect 1981 - 2010 climate normal period. Thus additional arguments need specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"","code":"get_chirps()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/cogs/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/chirps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS) — chirps","text":"Funk, C., Peterson, P., Landsfeld, M. et al. climate hazards infrared precipitation stations—new environmental record monitoring extremes. Sci Data 2, 150066 (2015). doi:10.1038/sdata.2015.66","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate deforestation drivers — deforestation_drivers","title":"Calculate deforestation drivers — deforestation_drivers","text":"function extracts areal statistics drivers deforestation based data source produced Fritz et al (2022).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate deforestation drivers — deforestation_drivers","text":"","code":"calc_deforestation_drivers()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate deforestation drivers — deforestation_drivers","text":"function returns tibble 3 columns indicating class deforestation driver, absolute area ha, percentage relation total area forest loss indicated Fritz et al. (2022) resource.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate deforestation drivers — deforestation_drivers","text":"required resource indicator : fritz_et_al","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/deforestation_drivers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate deforestation drivers — deforestation_drivers","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_fritz_et_al(resolution = 100)) %>%   calc_indicators(calc_deforestation_drivers()) %>%   tidyr::unnest(deforestation_drivers)  aoi #> Simple feature collection with 10 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 10 × 9 #>    WDPAID NAME            DESIG_ENG     ISO3  assetid class         area percent #>     <dbl> <chr>           <chr>         <chr>   <int> <chr>        <dbl>   <dbl> #>  1 478140 Sierra de Neiba National Park DOM         1 commercial…     0        0 #>  2 478140 Sierra de Neiba National Park DOM         1 commercial…     0        0 #>  3 478140 Sierra de Neiba National Park DOM         1 managed fo…     0        0 #>  4 478140 Sierra de Neiba National Park DOM         1 mining          0        0 #>  5 478140 Sierra de Neiba National Park DOM         1 natural di…     0        0 #>  6 478140 Sierra de Neiba National Park DOM         1 pasture         0        0 #>  7 478140 Sierra de Neiba National Park DOM         1 roads           0        0 #>  8 478140 Sierra de Neiba National Park DOM         1 wildfire        0        0 #>  9 478140 Sierra de Neiba National Park DOM         1 other subs… 16115.       1 #> 10 478140 Sierra de Neiba National Park DOM         1 shifting c…     0        0 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/download_or_skip.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to check and download urls — download_or_skip","title":"Helper to check and download urls — download_or_skip","text":"Use function fetch number remote URLs local files. case unreliable source servers, failed downlaods retried number times specified stubbornness. path aria2c executable can specified use instead default R download function.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/download_or_skip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to check and download urls — download_or_skip","text":"","code":"download_or_skip(   urls = NULL,   filenames = NULL,   verbose = mapme_options()[[\"verbose\"]],   stubbornness = 6,   check_existence = TRUE,   aria_bin = mapme_options()[[\"aria_bin\"]] )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/download_or_skip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to check and download urls — download_or_skip","text":"urls character vector URLs downloaded. filenames character vector local file paths length urls verbose logical controlling verbosity. stubbornness numeric indicating number retries failed downloads. check_existence logical indicating urls checked trying download. Defaults TRUE. aria_bin character vector pointing towards aria2c executable.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate drought indicator statistics — drought_indicator","title":"Calculate drought indicator statistics — drought_indicator","text":"function allows efficiently calculate relative wetness shallow groundwater section regard 1948-2012 reference period. values represent wetness percentile given area achieves given point time regard reference period. polygon, desired statistic/s (mean, median sd) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate drought indicator statistics — drought_indicator","text":"","code":"calc_drought_indicator(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate drought indicator statistics — drought_indicator","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either one multiple inputs character \"mean\", \"median\" \"sd\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate drought indicator statistics — drought_indicator","text":"function returns tibble column specified stats column respective date.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate drought indicator statistics — drought_indicator","text":"required resources indicator : nasa_grace","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/drought_indicator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate drought indicator statistics — drought_indicator","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nasa_grace(years = 2022)) %>%   calc_indicators(     calc_drought_indicator(       engine = \"extract\",       stats = c(\"mean\", \"median\")     )   ) %>%   tidyr::unnest(drought_indicator) #> Error in purrr::map(req_resources, function(resource_name) {    resource <- avail_resources[[resource_name]]    resource_type <- ifelse(inherits(resource, \"sf\"), \"raster\",         \"vector\")    reader <- switch(resource_type, raster = .read_raster, vector = .read_vector,         stop(sprintf(\"Resource type '%s' currently not supported\",             resource_type)))    reader(x, resource)}): ℹ In index: 1. #> Caused by error in `reader()`: #> ! Did not find equal number of tiles per timestep.  aoi #> Error in eval(expr, envir, enclos): object 'aoi' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"function allows efficiently retrieve name ecoregions compute corresponding area Terrestrial Ecoregions World (TEOW) - World Wildlife Fund (WWF) polygons. polygon, name area ecoregions (hectare) returned. required resources indicator : teow","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"","code":"calc_ecoregion()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"function returns tibble column name ecoregions corresponding area (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ecoregion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate terrestrial ecoregions statistics (TEOW) based on WWF — ecoregion","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_teow()) %>%   calc_indicators(calc_ecoregion()) %>%   tidyr::unnest(ecoregion) #> Resource 'teow' is already available.  aoi #> Simple feature collection with 1 feature and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 8 #>   WDPAID NAME            DESIG_ENG     ISO3  assetid ecoregions             area #>    <dbl> <chr>           <chr>         <chr>   <int> <chr>                 <dbl> #> 1 478140 Sierra de Neiba National Park DOM         1 Hispaniolan pine fo… 18349. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate elevation statistics — elevation","title":"Calculate elevation statistics — elevation","text":"function allows calculate elevation statistics polygons. polygon, desired statistic(s) returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate elevation statistics — elevation","text":"","code":"calc_elevation(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate elevation statistics — elevation","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either one multiple inputs character \"mean\", \"median\" \"sd\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate elevation statistics — elevation","text":"function returns tibble column statistics.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate elevation statistics — elevation","text":"required resources indicator : nasa_srtm","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate elevation statistics — elevation","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nasa_srtm()) %>%   calc_indicators(     calc_elevation(engine = \"extract\", stats = c(\"mean\", \"median\", \"sd\", \"var\"))   ) %>%   tidyr::unnest(elevation)  aoi #> Simple feature collection with 1 feature and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 10 #>   WDPAID NAME            DESIG_ENG ISO3  assetid elevation_mean elevation_median #>    <dbl> <chr>           <chr>     <chr>   <int>          <dbl>            <dbl> #> 1 478140 Sierra de Neiba National… DOM         1          1704.             1702 #> # ℹ 3 more variables: elevation_sd <dbl>, elevation_var <dbl>, #> #   geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to select processing engines — engine","title":"Function to select processing engines — engine","text":"check_engine() checks extraction engine zonal vector-raster operations supported backend. check_stats checks one multiple statistics supported zonal vector-raster extraction backend. select_engine extracts zonal vector-raster statistics supported engine one statistics. Columns named according argument name plus respective stat. portfolio asset modes supported.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to select processing engines — engine","text":"","code":"check_engine(queried_engine)  check_stats(queried_stats)  select_engine(x, raster, stats, engine, name = NULL, mode = \"asset\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to select processing engines — engine","text":"queried_engine character vector length one indicating engine check . queried_stats character vector statistic names checked supported backend x sf object representing portfolio. raster terra SpatRaster values extracted. stats character vector statistics aggregate raster values . engine character vector length one specifying engine used extraction. name character vector indicating name append columns names. mode character vector indicating mode conduct extraction (e.g. asset-wise whole portfolio ).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to select processing engines — engine","text":"check_engine() returns character queried engine, supported. Throws error otherwise. check_stats returns character vector supported statistics. Throws error queried statistics supported. select_engine returns tibble.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":null,"dir":"Reference","previous_headings":"","what":"ESA Copernicus Global Land Cover layer — esalandcover","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"100 meter spatial resolution land cover resource published Buchhorn et al. (2020) \"Copernicus Global Land Cover Layers—Collection 2\". resource represents actual surface cover ground available annually period 2015 2019. cell values range 0 200, representing total 23 discrete classifications ESA.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"","code":"get_esalandcover(years = 2015:2019)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"https://lcviewer.vito./download","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/esalandcover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ESA Copernicus Global Land Cover layer — esalandcover","text":"© European Union, Copernicus Land Monitoring Service (year), European Environment Agency (EEA)\", f.ex. 2018: “© European Union, Copernicus Land Monitoring Service 2018, European Environment Agency (EEA)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"indicator aggregated number fatalities within given asset monthly cadence stratified type conflict. different types conflicts encoded UCDP GED database : state-based conflict non-state conflict one-sided violence","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"","code":"calc_fatalities(years = 1989:2023, precision_location = 1, precision_time = 1)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"years numeric vector indicating years summarize fatalities. precision_location numeric indicating precision value geolocation events included. Defaults 1. precision_time numeric indicating precision value temporal coding events included. Defaults 1.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"function returns tibble column date (year month), type violence counts civilian fatalities, unknown fatalities total sum fatalities.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"required resources indicator : ucdp_ged may apply quality filters based precision geolocation events temporal precision. default, set include events highest precision scores. geo-precision levels 1 7 decreasing accuracy: value 1: location information corresponds exactly geographical coordinates available value 2: location information refers limited area around specified location value 3: source refers can specified larger location level second order administrative divisions (ADM2), district municipality, GED uses centroid point coordinates ADM2. value 4: location information refers first order administrative division, province (ADM1), GED uses coordinates centroid point ADM1 value 5: used different cases source refers parts country larger ADM1, smaller entire country; two locations mentioned representiative point selected; location mentioned non-independend island; location specifically mentioned relation another location value 6: location mentioned refers entire country centroid used value 7: event takes place water international airspace, geographical coordinates dataset either represent centroid point certain water area estimated coordinates temporal precision levels 1 5 decreasing precision: value 1: exact date event known value 2: start enddates events unspecified character, spanning one calendar day though longer six days value 3: start end dates events specified certain week, specific dates provided value 4: start end dates events specified certain month value 5: start enddates events specified certain year, specific dates provided","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"Sundberg, Ralph, Erik Melander, 2013, “Introducing UCDP Georeferenced Event Dataset”, Journal Peace Research, vol.50, .4, 523-532","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fatalities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of fatalities of violent conflict from UCDP GED — fatalities","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"burundi.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_ucdp_ged(version = \"22.1\")) %>%   calc_indicators(     calc_fatalities(       years = 1991:1992,       precision_location = 1,       precision_time = 1     )   ) %>%   tidyr::unnest(fatalities)  aoi #> Simple feature collection with 72 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 29.02493 ymin: -4.499983 xmax: 30.75226 ymax: -2.348487 #> Geodetic CRS:  +proj=longlat +datum=WGS84 +no_defs #> # A tibble: 72 × 9 #>    sov_a3 assetid month      type_of_violence    deaths_civilians deaths_unknown #>    <chr>    <int> <date>     <chr>                          <dbl>          <dbl> #>  1 BDI          1 1991-01-01 state-based confli…                0              0 #>  2 BDI          1 1991-01-01 non-state conflict                 0              0 #>  3 BDI          1 1991-01-01 one-sided violence                 0              0 #>  4 BDI          1 1991-02-01 state-based confli…                0              0 #>  5 BDI          1 1991-02-01 non-state conflict                 0              0 #>  6 BDI          1 1991-02-01 one-sided violence                 0              0 #>  7 BDI          1 1991-03-01 state-based confli…                0              0 #>  8 BDI          1 1991-03-01 non-state conflict                 0              0 #>  9 BDI          1 1991-03-01 one-sided violence                 0              0 #> 10 BDI          1 1991-04-01 state-based confli…                0              0 #> # ℹ 62 more rows #> # ℹ 3 more variables: deaths_total <dbl>, event_count <int>, geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":null,"dir":"Reference","previous_headings":"","what":"Drivers of deforestation for tropical forests — fritz_et_al","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"resource produced neirest-neighbour matching crowd-sourced campaign map dominant driver forest loss based visual interpretation VHR images matched Global Forest Loss data Hansen (2013) version 1.7 forest loss layer re sampled resolution 100 1.000 meters. Dominant drivers determined period 2008 2009.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"","code":"get_fritz_et_al(resolution = 100)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"https://zenodo.org/record/7997885","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"resolution integer indicating resolution download. Defaults 100.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"indicates 9 different classes: commercial agriculture commercial oil palm plantations managed forests mining natural disturbances pasture roads wildfire subsistence agriculture shifting cultivation","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/fritz_et_al.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drivers of deforestation for tropical forests — fritz_et_al","text":"Steffen, F., Carlos, J.C.L., See. L., Schepaschenko D., Hofhansl F., Jung M., Dürauer M., Georgieva ., Danylo O., Lesiv M., McCallum . (2022) Continental Assessment Drivers Tropical Deforestation Focus Protected Areas. F.Cos.Sc.(3) doi:10.3389/fcosc.2022.830248","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest greenhouse gas emissions — gfw_emissions","title":"Forest greenhouse gas emissions — gfw_emissions","text":"resource part publication Harris et al. (2021) \"Global maps twenty-first century forest carbon fluxes.\". represents \"greenhouse gas emissions arising stand-replacing forest disturbances occurred modelled year (megagrams CO2 emissions/ha, 2001 2021). Emissions include relevant ecosystem carbon pools (aboveground biomass, belowground biomass, dead wood, litter, soil) greenhouse gases (CO2, CH4, N2O).\" area unit downloaded corresponds \"megagrams CO2 emissions/pixel\" layer, order support calculation area-wise emissions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest greenhouse gas emissions — gfw_emissions","text":"","code":"get_gfw_emissions()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Forest greenhouse gas emissions — gfw_emissions","text":"https://data.globalforestwatch.org/datasets/gfw::forest-greenhouse-gas-emissions/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest greenhouse gas emissions — gfw_emissions","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forest greenhouse gas emissions — gfw_emissions","text":"arguments users need specify. However, users note spatial extent dataset totally cover extent treecover2000 lossyear resources Hansen et al. (2013). missing value (NA) inserted greenhouse gas emissions areas data available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_emissions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forest greenhouse gas emissions — gfw_emissions","text":"Harris, N.L., Gibbs, D.., Baccini, . et al. Global maps twenty-first century forest carbon fluxes. Nat. Clim. Chang. 11, 234–240 (2021). https://doi.org/10.1038/s41558-020-00976-6","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Year of forest loss occurrence — gfw_lossyear","title":"Year of forest loss occurrence — gfw_lossyear","text":"resource part publication Hansen et al. (2013) \"High-Resolution Global Maps 21st-Century Forest Cover Change\". represents \"Forest loss period 2000–2021, defined stand-replacement disturbance, change forest non-forest state. Encoded either 0 (loss) else value range 1–20, representing loss detected primarily year 2001–2021, respectively.\" Due changes satellites products used compilation tree loss product, results year 2011 afterwards directly comparable reprocessing finished. Users aware limitation, especially timeframe analysis spans two periods delimited year 2011.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Year of forest loss occurrence — gfw_lossyear","text":"","code":"get_gfw_lossyear(version = \"GFC-2022-v1.10\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Year of forest loss occurrence — gfw_lossyear","text":"https://data.globalforestwatch.org/documents/tree-cover-loss/explore","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Year of forest loss occurrence — gfw_lossyear","text":"version version dataset download. Defaults \"GFC-2022-v1.10\". Check mapme.biodiversity:::.available_gfw_versions() get list available versions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Year of forest loss occurrence — gfw_lossyear","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_lossyear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Year of forest loss occurrence — gfw_lossyear","text":"Hansen, M. C., P. V. Potapov, R. Moore, M. Hancher, S. . Turubanova, . Tyukavina, D. Thau, S. V. Stehman, S. J. Goetz, T. R. Loveland, . Kommareddy, . Egorov, L. Chini, C. O. Justice, J. R. G. Townshend. 2013. “High-Resolution Global Maps 21st-Century Forest Cover Change.” Science 342 (15 November): 850–53.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":null,"dir":"Reference","previous_headings":"","what":"Treecover for the year 2000 — gfw_treecover","title":"Treecover for the year 2000 — gfw_treecover","text":"resource part publication Hansen et al. (2013) represents \"tree cover year 2000, defined canopy closure vegetation taller 5m height. Encoded percentage per output grid cell, range 0–100.\" Due changes satellites products used compilation treecover product, results year 2011 afterwards directly comparable reprocessing finished. Users aware limitation, especially timeframe analysis spans two periods delimited year 2011.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treecover for the year 2000 — gfw_treecover","text":"","code":"get_gfw_treecover(version = \"GFC-2022-v1.10\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Treecover for the year 2000 — gfw_treecover","text":"https://data.globalforestwatch.org/documents/tree-cover-2000/explore","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treecover for the year 2000 — gfw_treecover","text":"version version dataset download. Defaults \"GFC-2022-v1.10\". Check mapme.biodiversity:::.available_gfw_versions() get list available versions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treecover for the year 2000 — gfw_treecover","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gfw_treecover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Treecover for the year 2000 — gfw_treecover","text":"Hansen, M. C., P. V. Potapov, R. Moore, M. Hancher, S. . Turubanova, . Tyukavina, D. Thau, S. V. Stehman, S. J. Goetz, T. R. Loveland, . Kommareddy, . Egorov, L. Chini, C. O. Justice, J. R. G. Townshend. 2013. “High-Resolution Global Maps 21st-Century Forest Cover Change.” Science 342 (15 November): 850–53.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Surface Water Change — global_surface_water_change","title":"Global Surface Water Change — global_surface_water_change","text":"Global Surface Water dataset developed European Commission's Joint Research Centre framework Copernicus Programme. maps location temporal distribution water surfaces global scale past 3.8 decades provides statistics extent change. provisioned global tiled raster resource available land areas. reported data represent aggregated observations 1984 - 2021.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Surface Water Change — global_surface_water_change","text":"","code":"get_global_surface_water_change(version = \"v1_4_2021\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Surface Water Change — global_surface_water_change","text":"https://global-surface-water.appspot.com/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Surface Water Change — global_surface_water_change","text":"version character vector indicating version GSW data set make available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Surface Water Change — global_surface_water_change","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Surface Water Change — global_surface_water_change","text":"change water occurrence intensity two periods derived homologous pairs months (.e. months containing valid observations periods). difference occurrence surface water calculated homologous pair months. average differences constitutes Surface Water Occurrence change intensity. raster files integer cell values [0, 200] 0 represents surface water loss 200 represents surface water gain.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_change.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Surface Water Change — global_surface_water_change","text":"Pekel, JF., Cottam, ., Gorelick, N. et al. High-resolution mapping global surface water long-term changes. Nature 540, 418–422 (2016). https://doi.org/10.1038/nature20584","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Surface Water Occurrence — global_surface_water_occurrence","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"Global Surface Water dataset developed European Commission's Joint Research Centre framework Copernicus Programme. maps location temporal distribution water surfaces global scale past 3.8 decades provides statistics extent change. provisioned global tiled raster resource available land areas. reported data represent aggregated observations 1984 - 2021.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"","code":"get_global_surface_water_occurrence(version = \"v1_4_2021\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"https://global-surface-water.appspot.com/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"version character vector indicating version GSW data set make available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"GSW occurrence raw data comes raster files integer cell values [0, 100]. value gives percentage time given pixel classified water entire observation period. 0 denotes pixel never classified water, 100 denotes pixel permanent water.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_occurrence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Surface Water Occurrence — global_surface_water_occurrence","text":"Pekel, JF., Cottam, ., Gorelick, N. et al. High-resolution mapping global surface water long-term changes. Nature 540, 418–422 (2016). https://doi.org/10.1038/nature20584","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Surface Water Recurrence — global_surface_water_recurrence","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"Global Surface Water dataset developed European Commission's Joint Research Centre framework Copernicus Programme. maps location temporal distribution water surfaces global scale past 3.8 decades provides statistics extent change. provisioned global tiled raster resource available land areas. reported data represent aggregated observations 1984 - 2021.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"","code":"get_global_surface_water_recurrence(version = \"v1_4_2021\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"https://global-surface-water.appspot.com/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"version character vector indicating version GSW data set make available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"Water Recurrence measurement degree variability presence water year year. describes frequency water returned particular location one year another, expressed percentage. raster files integer cell values [0, 100], 100 represents water reoccurs predictably every year, whereas lower values indicate water occurs episodically.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_recurrence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Surface Water Recurrence — global_surface_water_recurrence","text":"Pekel, JF., Cottam, ., Gorelick, N. et al. High-resolution mapping global surface water long-term changes. Nature 540, 418–422 (2016). https://doi.org/10.1038/nature20584","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Surface Water Seasonality — global_surface_water_seasonality","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"Global Surface Water dataset developed European Commission's Joint Research Centre framework Copernicus Programme. maps location temporal distribution water surfaces global scale past 3.8 decades provides statistics extent change. provisioned global tiled raster resource available land areas. reported data represent aggregated observations 1984 - 2021.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"","code":"get_global_surface_water_seasonality(version = \"v1_4_2021\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"https://global-surface-water.appspot.com/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"version character vector indicating version GSW data set make available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"GSW seasonality describes intra-annual distribution surface water pixel. raster files integer cell values [0, 12], indicating many months per year pixel classified water.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_seasonality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Surface Water Seasonality — global_surface_water_seasonality","text":"Pekel, JF., Cottam, ., Gorelick, N. et al. High-resolution mapping global surface water long-term changes. Nature 540, 418–422 (2016). https://doi.org/10.1038/nature20584","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Surface Water Transitions — global_surface_water_transitions","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"Global Surface Water dataset developed European Commission's Joint Research Centre framework Copernicus Programme. maps location temporal distribution water surfaces global scale past 3.8 decades provides statistics extent change. provisioned global tiled raster resource available land areas. reported data represent aggregated observations 1984 - 2021.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"","code":"get_global_surface_water_transitions(version = \"v1_4_2021\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"https://global-surface-water.appspot.com/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"version character vector indicating version GSW data set make available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"GSW transition data contains information type surface water change pixel. raster files integer cell values [0, 10] code different transition classes:","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/global_surface_water_transitions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Surface Water Transitions — global_surface_water_transitions","text":"Pekel, JF., Cottam, ., Gorelick, N. et al. High-resolution mapping global surface water long-term changes. Nature 540, 418–422 (2016). https://doi.org/10.1038/nature20584","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Mangrove Extent Polygon — gmw","title":"Global Mangrove Extent Polygon — gmw","text":"resource part publication Bunting et al. (2018) \"Global Mangrove Watch—New 2010 Global Baseline Mangrove Extent\". polygons represent mangrove, tropical coastal vegetation considered significant part marine ecosystem. resource available period 1996- 2020 Global Mangrove Watch (GMW), providing geospatial information global mangrove extent.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Mangrove Extent Polygon — gmw","text":"","code":"get_gmw(years = c(1996, 2007:2010, 2015:2020))"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Mangrove Extent Polygon — gmw","text":"https://data.unep-wcmc.org/datasets/45","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Mangrove Extent Polygon — gmw","text":"years numeric vector years make GMW available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Mangrove Extent Polygon — gmw","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gmw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Mangrove Extent Polygon — gmw","text":"Bunting P., Rosenqvist ., Lucas R., Rebelo L-M., Hilarides L., Thomas N., Hardy ., Itoh T., Shimada M. Finlayson C.M. (2018). Global Mangrove Watch – New 2010 Global Baseline Mangrove Extent. Remote Sensing 10(10): 1669. doi:10.3390/rs10101669.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Global Surface Water (GSW) Change — gsw_change","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"change water occurrence intensity two periods derived homologous pairs months (.e. months containing valid observations periods). difference occurrence surface water calculated homologous pair months. average differences constitutes Surface Water Occurrence change intensity. raster files integer cell values [0, 200] 0 represents surface water loss 200 represents surface water gain.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"","code":"calc_gsw_change(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\". Default: \"extract\". stats Aggregation function data combined. Default: \"mean\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"function returns tibble column aggregated GSW change indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"pixel values aggregated using method provided via stats parameter using specified engine. required resources indicator : global_surface_water_change","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Global Surface Water (GSW) Change — gsw_change","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_global_surface_water_change()) %>%   calc_indicators(     calc_gsw_change(engine = \"extract\", stats = \"mean\")   ) %>%   tidyr::unnest(gsw_change)  aoi #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.84866 ymin: 8.307999 xmax: -59.71 ymax: 8.364002 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 7 #>   WDPAID NAME                     DESIG_ENG ISO3  assetid global_surface_water…¹ #>    <dbl> <chr>                    <chr>     <chr>   <int>                  <dbl> #> 1  41057 Shell Beach Protected A… Managed … GUY         1                    100 #> # ℹ abbreviated name: ¹​global_surface_water_change_mean #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"GSW occurrence raw data comes raster files integer cell values [0, 100]. value gives percentage time given pixel classified water entire observation period. 0 denotes pixel never classified water, 100 denotes pixel permanent water.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"","code":"calc_gsw_occurrence(engine = \"extract\", min_occurrence = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\". Default: \"extract\". min_occurrence Threshold define pixels count towards GSW occurrence area [0, 100].","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"function returns tibble column aggregated GSW occurrence indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"raw data values aggregated based provided threshold parameter min_occurrence, function returns area covered values greater equal threshold. required resources indicator : global_surface_water_occurrence","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_occurrence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Global Surface Water (GSW) Occurrence — gsw_occurrence","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_global_surface_water_occurrence()) %>%   calc_indicators(     calc_gsw_occurrence(engine = \"extract\", stats = \"mean\")   ) %>%   tidyr::unnest(gsw_occurence) #> Error in calc_gsw_occurrence(engine = \"extract\", stats = \"mean\"): unused argument (stats = \"mean\")  aoi #> Error in eval(expr, envir, enclos): object 'aoi' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"Water Recurrence measurement degree variability presence water year year. describes frequency water returned particular location one year another, expressed percentage. raster files integer cell values [0, 100], 100 represents water reoccurs predictably every year, whereas lower values indicate water occurs episodically.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"","code":"calc_gsw_recurrence(engine = \"extract\", min_recurrence = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\". Default: \"extract\". min_recurrence Threshold define pixels count towards GSW recurrence area [0, 100].","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"function returns tibble column aggregated GSW recurrence indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"raw data values aggregated based provided threshold parameter min_recurrence, function returns area covered values greater equal threshold. required resources indicator : global_surface_water_recurrence","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_recurrence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Global Surface Water (GSW) Recurrence — gsw_recurrence","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_global_surface_water_recurrence()) %>%   calc_indicators(     calc_gsw_recurrence(engine = \"extract\", min_recurrence = 10)   ) %>%   tidyr::unnest(gsw_recurrence)  aoi #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.84866 ymin: 8.307999 xmax: -59.71 ymax: 8.364002 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 7 #>   WDPAID NAME                     DESIG_ENG ISO3  assetid gsw_recurrence_area_…¹ #>    <dbl> <chr>                    <chr>     <chr>   <int>                  <dbl> #> 1  41057 Shell Beach Protected A… Managed … GUY         1                   720. #> # ℹ abbreviated name: ¹​gsw_recurrence_area_sum #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_seasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","title":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","text":"GSW seasonality describes intra-annual distribution surface water pixel. raster files integer cell values [0, 12], indicating many months per year pixel classified water.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_seasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","text":"","code":"calc_gsw_seasonality()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_seasonality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","text":"function returns tibble one column months one column area, representing area covered class ha.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_seasonality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","text":"pixel values aggregated using method provided via stats parameter. required resources indicator : global_surface_water_seasonality","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_seasonality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Global Surface Water (GSW) Seasonality — gsw_seasonality","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_global_surface_water_seasonality()) %>%   calc_indicators(calc_gsw_seasonality()) %>%   tidyr::unnest(gsw_seasonality)  aoi #> Simple feature collection with 13 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.84866 ymin: 8.307999 xmax: -59.71 ymax: 8.364002 #> Geodetic CRS:  WGS 84 #> # A tibble: 13 × 8 #>    WDPAID NAME   DESIG_ENG ISO3  assetid month    area                      geom #>     <dbl> <chr>  <chr>     <chr>   <int> <int>   <dbl>             <POLYGON [°]> #>  1  41057 Shell… Managed … GUY         1     0 2.51e+3 ((-59.84334 8.361998, -5… #>  2  41057 Shell… Managed … GUY         1     1 2.25e+1 ((-59.84334 8.361998, -5… #>  3  41057 Shell… Managed … GUY         1     2 1.80e+1 ((-59.84334 8.361998, -5… #>  4  41057 Shell… Managed … GUY         1     3 2.38e+1 ((-59.84334 8.361998, -5… #>  5  41057 Shell… Managed … GUY         1     4 1.99e+1 ((-59.84334 8.361998, -5… #>  6  41057 Shell… Managed … GUY         1     5 2.51e+0 ((-59.84334 8.361998, -5… #>  7  41057 Shell… Managed … GUY         1     6 1.52e-1 ((-59.84334 8.361998, -5… #>  8  41057 Shell… Managed … GUY         1     7 0       ((-59.84334 8.361998, -5… #>  9  41057 Shell… Managed … GUY         1     8 0       ((-59.84334 8.361998, -5… #> 10  41057 Shell… Managed … GUY         1     9 0       ((-59.84334 8.361998, -5… #> 11  41057 Shell… Managed … GUY         1    10 0       ((-59.84334 8.361998, -5… #> 12  41057 Shell… Managed … GUY         1    11 0       ((-59.84334 8.361998, -5… #> 13  41057 Shell… Managed … GUY         1    12 6.18e+2 ((-59.84334 8.361998, -5… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","title":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","text":"GSW transition data contains information type surface water change pixel. raster files integer cell values [0, 10] code different transition classes:","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","text":"","code":"calc_gsw_transitions()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","text":"function returns tibble column name transition classes corresponding area (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_transitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","text":"aggregate, sum area transition class given region. required resources indicator : global_surface_water_transitions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/gsw_transitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Global Surface Water (GSW) Transitions — gsw_transitions","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_global_surface_water_transitions()) %>%   calc_indicators(calc_gsw_transitions()) %>%   tidyr::unnest(gsw_transitions)  aoi #> Simple feature collection with 9 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.84866 ymin: 8.307999 xmax: -59.71 ymax: 8.364002 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 8 #>   WDPAID NAME    DESIG_ENG ISO3  assetid class    area                      geom #>    <dbl> <chr>   <chr>     <chr>   <int> <chr>   <dbl>             <POLYGON [°]> #> 1  41057 Shell … Managed … GUY         1 Perm… 200.    ((-59.84334 8.361998, -5… #> 2  41057 Shell … Managed … GUY         1 New … 389.    ((-59.84334 8.361998, -5… #> 3  41057 Shell … Managed … GUY         1 Lost…   0.381 ((-59.84334 8.361998, -5… #> 4  41057 Shell … Managed … GUY         1 Seas…   1.90  ((-59.84334 8.361998, -5… #> 5  41057 Shell … Managed … GUY         1 New …  83.9   ((-59.84334 8.361998, -5… #> 6  41057 Shell … Managed … GUY         1 Seas…  28.9   ((-59.84334 8.361998, -5… #> 7  41057 Shell … Managed … GUY         1 Perm…   1.07  ((-59.84334 8.361998, -5… #> 8  41057 Shell … Managed … GUY         1 Ephe…   0.609 ((-59.84334 8.361998, -5… #> 9  41057 Shell … Managed … GUY         1 Ephe…  21.6   ((-59.84334 8.361998, -5… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Register or list indicators in mapme.biodiversity — indicators","title":"Register or list indicators in mapme.biodiversity — indicators","text":"register_indicator() used register new indicator function base information package's internal environment used inform users available indicators. Note, registering custom indicator effect current R session. available_indicators() returns tibble registered indicators basic information required resources.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register or list indicators in mapme.biodiversity — indicators","text":"","code":"register_indicator(name = NULL, description = NULL, resources = NULL)  available_indicators(indicators = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register or list indicators in mapme.biodiversity — indicators","text":"name character vector indicating name indicator. description character vector basic description resources character vector required resources need available calculate indicator. names must correspond already registered resources. indicators NULL returns list registered indicators (default). Otherwise ones specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register or list indicators in mapme.biodiversity — indicators","text":"register_indicator() called side-effect registering indicator available_resources() returns tibble listing available indicators.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register or list indicators in mapme.biodiversity — indicators","text":"","code":"# \\dontrun{ register_indicator(   name = \"treecover_area\",   description = \"Area of forest cover by year\",   resources = c(     \"gfw_treecover\",     \"gfw_lossyear\"   ) ) # } available_indicators() #> # A tibble: 27 × 3 #>    name                   description                                  resources #>    <chr>                  <chr>                                        <list>    #>  1 active_fire_counts     Number of detected fires by NASA FIRMS       <tibble>  #>  2 active_fire_properties Extraction of properties of fires detected … <tibble>  #>  3 biome                  Areal statistics of biomes from TEOW         <tibble>  #>  4 deforestation_drivers  Areal statistics of deforestation drivers    <tibble>  #>  5 drought_indicator      Relative wetness statistics based on NASA G… <tibble>  #>  6 ecoregion              Areal statstics of ecoregions based on TEOW  <tibble>  #>  7 elevation              Statistics of elevation based on NASA SRTM   <tibble>  #>  8 fatalities             Number of fatalities by group of conflict b… <tibble>  #>  9 gsw_change             Statistics of the surface water change laye… <tibble>  #> 10 gsw_occurrence         Areal statistic of surface water based on o… <tibble>  #> # ℹ 17 more rows"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate area of different landcover classes — landcover","title":"Calculate area of different landcover classes — landcover","text":"land cover data shows us much region covered forests, rivers, wetlands, barren land, urban infrastructure thus allowing observation land cover dynamics period time. function allows efficiently calculate area different landcover classes polygons. polygon, area classes hectare(ha) returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate area of different landcover classes — landcover","text":"","code":"calc_landcover()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate area of different landcover classes — landcover","text":"function returns tibble column area (ha) percentage covered per landcover class.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate area of different landcover classes — landcover","text":"required resources indicator : esalandcover","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/landcover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate area of different landcover classes — landcover","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_esalandcover(years = 2016:2017)) %>%   calc_indicators(calc_landcover()) %>%   tidyr::unnest(landcover)  aoi #> Simple feature collection with 22 features and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 22 × 10 #>    WDPAID NAME           DESIG_ENG ISO3  assetid classes year    area percentage #>     <dbl> <chr>          <chr>     <chr>   <int> <chr>   <chr>  <dbl>      <dbl> #>  1 478140 Sierra de Nei… National… DOM         1 shrubs  2016  5.06e2  0.0260    #>  2 478140 Sierra de Nei… National… DOM         1 herbac… 2016  1.84e3  0.0943    #>  3 478140 Sierra de Nei… National… DOM         1 cropla… 2016  1.15e0  0.0000590 #>  4 478140 Sierra de Nei… National… DOM         1 closed… 2016  4.65e3  0.239     #>  5 478140 Sierra de Nei… National… DOM         1 closed… 2016  1.03e1  0.000531  #>  6 478140 Sierra de Nei… National… DOM         1 closed… 2016  4.98e3  0.256     #>  7 478140 Sierra de Nei… National… DOM         1 closed… 2016  1.46e2  0.00750   #>  8 478140 Sierra de Nei… National… DOM         1 open_f… 2016  1.90e3  0.0977    #>  9 478140 Sierra de Nei… National… DOM         1 open_f… 2016  8.85e1  0.00455   #> 10 478140 Sierra de Nei… National… DOM         1 open_f… 2016  1.49e1  0.000767  #> # ℹ 12 more rows #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/make_global_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to create a grid of regular resolution and CRS — make_global_grid","title":"Helper to create a grid of regular resolution and CRS — make_global_grid","text":"Use function create regular grid custom CRS. used e.g. create tile grid Global Forest Watch order retrieve intersecting tiles given portfolio.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/make_global_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to create a grid of regular resolution and CRS — make_global_grid","text":"","code":"make_global_grid(   xmin = -180,   xmax = 170,   dx = 10,   ymin = -50,   ymax = 80,   dy = 10,   proj = NULL )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/make_global_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to create a grid of regular resolution and CRS — make_global_grid","text":"xmin minimum longitude value (E/W) xmax maximum longitude value (E/W) dx difference longitude value per grid ymin minimum latitude value (S/N) ymax maximum latitude value (E/W) dy difference latitude value per grid proj projection system","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/make_global_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to create a grid of regular resolution and CRS — make_global_grid","text":"sf object defined grid.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"function allows efficiently calculate area mangrove Global Mangrove Watch - World Conservation Monitoring Centre (WCMC) polygons. polygon, area mangrove (hectare) desired year returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"","code":"calc_mangroves_area()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"function returns tibble column area mangrove (ha) corresponding year.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"required resources indicator : gmw","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mangroves_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mangrove extent based on Global Mangrove Watch (GMW) — mangroves_area","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"shell_beach_protected_area_41057_B.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_gmw(years = c(1996, 2016))) %>%   calc_indicators(calc_mangroves_area()) %>%   tidyr::unnest(mangroves_area)  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.84866 ymin: 8.307999 xmax: -59.71 ymax: 8.364002 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME                      DESIG_ENG ISO3  assetid mangrove_extent year  #>    <dbl> <chr>                     <chr>     <chr>   <int>           <dbl> <chr> #> 1  41057 Shell Beach Protected Ar… Managed … GUY         1           1215. 1996  #> 2  41057 Shell Beach Protected Ar… Managed … GUY         1           1207. 2016  #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mapme.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio methods for mapme.biodiversity — mapme","title":"Portfolio methods for mapme.biodiversity — mapme","text":"mapme_options() sets default options mapme.biodiversity control behavior downstream functions. Mainly, output path well temporal directory intermediate files can set. Additionally, verbosity can set. testing options set users, controls behavior package automated test pipelines. Might extended options future. get_resources() data sets required calculation indicators can made available. function supports specification several resource functions. determine output path, temporary directory verbosity, output mapme_options() used. calc_indicators() calculates specific biodiversity indicators. requirement resources mandatory inputs requested indicators available locally. Multiple indicators respective additional arguments can supplied.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mapme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio methods for mapme.biodiversity — mapme","text":"","code":"mapme_options(..., outdir, verbose, aria_bin, testing)  get_resources(x, ...)  calc_indicators(x, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mapme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio methods for mapme.biodiversity — mapme","text":"... One functions resources/indicators outdir length one character indicating output path. verbose logical, indicating informative messages printed. aria_bin character vector aria2c executable parallel downloads. testing logical. set users. Controls behavior automated test pipelines. x sf object features type \"POLYGON\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mapme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio methods for mapme.biodiversity — mapme","text":"mapme_options() returns list options arguments specified. Otherwise sets matching arguments new values package's internal environment. get_resources() called side effect making resources available package environment. Returns x, invisibly. calc_indicators() returns x, invisibly, additional nested list column per requested indicator.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/mapme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Portfolio methods for mapme.biodiversity — mapme","text":"","code":"library(mapme.biodiversity) mapme_options() #> $outdir #> [1] \"/tmp/RtmpyJ7Dhk/mapme-data\" #>  #> $verbose #> [1] FALSE #>  #> $aria_bin #> NULL #>  #> $testing #> [1] FALSE #>"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":null,"dir":"Reference","previous_headings":"","what":"Active Fire Polygon — nasa_firms","title":"Active Fire Polygon — nasa_firms","text":"resource published Fire Information Resource Management System (FIRMS) NASA Near Real Time (NRT) active fire data. data collected Moderate Resolution Imaging Spectroradiometer (MODIS) Visible Infrared Imaging Radiometer Suite (VIIRS). resource represents fire hotspot lat/lon coordinates along information fire pixel brightness temperature, fire radiative power (frp). data MODIS available 2000 2021 VIIRS available 2012-2021 year range.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Active Fire Polygon — nasa_firms","text":"","code":"get_nasa_firms(years = 2012:2021, instrument = \"VIIRS\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Active Fire Polygon — nasa_firms","text":"https://firms.modaps.eosdis.nasa.gov/download/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Active Fire Polygon — nasa_firms","text":"years numeric vector indicating years make resource available. instrument character vector specifying data collection instrument.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Active Fire Polygon — nasa_firms","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Active Fire Polygon — nasa_firms","text":"data following instruments available: \"MODIS\" \"VIIRS\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_firms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Active Fire Polygon — nasa_firms","text":"NRT VIIRS 375 m Active Fire product VNP14IMGT distributed NASA FIRMS. Available -line https://earthdata.nasa.gov/firms. doi:10.5067/FIRMS/VIIRS/VNP14IMGT_NRT.002.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":null,"dir":"Reference","previous_headings":"","what":"NASA GRACE-based Drought Indicator layer — nasa_grace","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"resource published NASA GRACE Tellus. data set reflects potential drought conditions shallow groundwater section relative reference period spanning 1948 2012. available global raster weekly temporal resolution starting year 2003. value indicates wetness percentile given pixel regard reference period.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"","code":"get_nasa_grace(years = 2003:2022)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_grace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NASA GRACE-based Drought Indicator layer — nasa_grace","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":null,"dir":"Reference","previous_headings":"","what":"NASADEM HGT v001 — nasa_srtm","title":"NASADEM HGT v001 — nasa_srtm","text":"resource processed Land Processes Distributed Active Archive Center (LP DAAC) made available Microsoft Planetery Computer. NASADEM distributed 1 degree latitude 1 degree longitude tiles consist land 60° N 56° S latitude. accounts 80% Earth’s total landmass.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NASADEM HGT v001 — nasa_srtm","text":"","code":"get_nasa_srtm()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NASADEM HGT v001 — nasa_srtm","text":"https://planetarycomputer.microsoft.com/dataset/nasadem","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NASADEM HGT v001 — nasa_srtm","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nasa_srtm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NASADEM HGT v001 — nasa_srtm","text":"NASA JPL (2020). NASADEM Merged DEM Global 1 arc second V001. NASA EOSDIS Land Processes DAAC. Accessed 2023-07-01 https://doi.org/10.5067/MEaSUREs/NASADEM/NASADEM_HGT.001","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessibility to Cities layer — nelson_et_al","title":"Accessibility to Cities layer — nelson_et_al","text":"resource published Weiss et al. (2018) \"global map travel time cities assess inequalities accessibility 2015\" journal nature. Accessibility ease larger cities can reached certain location. resource represents travel time major cities year 2015. Encoded minutes, representing time needed reach particular cell nearby city target population range. following ranges nearby cities available: \"5k_10k\" \"10k_20k\" \"20k_50k\" \"50k_100k\" \"100k_200k\" \"200k_500k\" \"500k_1mio\" \"1mio_5mio\" \"50k_50mio\" \"5k_110mio\" \"20k_110mio\" \"5mio_50mio\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessibility to Cities layer — nelson_et_al","text":"","code":"get_nelson_et_al(ranges = \"20k_50k\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Accessibility to Cities layer — nelson_et_al","text":"https://figshare.com/articles/dataset/Travel_time_to_cities_and_ports_in_the_year_2015/7638134/3","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessibility to Cities layer — nelson_et_al","text":"ranges character vector indicating one ranges download.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessibility to Cities layer — nelson_et_al","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/nelson_et_al.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accessibility to Cities layer — nelson_et_al","text":"Weiss, D. J., Nelson, ., Gibson, H. S., Temperley, W., Peedell, S., Lieber, ., … & Gething, P. W. (2018). global map travel time cities assess inequalities accessibility 2015. Nature, 553(7688), 333-336.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate population count statistics — population_count","title":"Calculate population count statistics — population_count","text":"WorldPop, initiated 2013, offers easy access spatial demographic datasets, claiming use peer-reviewed fully transparent methods create global mosaics years 2000 2020. function allows efficiently calculate population count statistics (e.g. total number population) polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate population count statistics — population_count","text":"","code":"calc_population_count(engine = \"extract\", stats = \"sum\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate population count statistics — population_count","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either one multiple inputs character \"min\", \"max\", \"sum\", \"mean\", \"median\" \"sd\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate population count statistics — population_count","text":"function returns tibble column population count statistics.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate population count statistics — population_count","text":"required resources indicator : worldpop","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/population_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate population count statistics — population_count","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_worldpop(years = 2000:2010)) %>%   calc_indicators(     calc_population_count(engine = \"extract\", stats = c(\"sum\", \"median\"))   ) %>%   tidyr::unnest(population_count)  aoi #> Simple feature collection with 11 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 9 #>    WDPAID NAME            DESIG_ENG     ISO3  assetid population_count_sum #>     <dbl> <chr>           <chr>         <chr>   <int>                <dbl> #>  1 478140 Sierra de Neiba National Park DOM         1                3941. #>  2 478140 Sierra de Neiba National Park DOM         1                3786. #>  3 478140 Sierra de Neiba National Park DOM         1                4012. #>  4 478140 Sierra de Neiba National Park DOM         1                4083. #>  5 478140 Sierra de Neiba National Park DOM         1                4336. #>  6 478140 Sierra de Neiba National Park DOM         1                4323. #>  7 478140 Sierra de Neiba National Park DOM         1                4569. #>  8 478140 Sierra de Neiba National Park DOM         1                4339. #>  9 478140 Sierra de Neiba National Park DOM         1                4784. #> 10 478140 Sierra de Neiba National Park DOM         1                4923. #> 11 478140 Sierra de Neiba National Park DOM         1                4016. #> # ℹ 3 more variables: population_count_median <dbl>, year <chr>, #> #   geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Writing a portfolio to disk — portfolio","title":"Writing a portfolio to disk — portfolio","text":"write_portfolio() writes processed biodiversity portfolio disk. order ensure interoperability geospatial software supported format GeoPackage. metadata portfolio together geometry written table called 'metadata'. calculated indicators, expected present nested list columns, written respective tables. order allow re-joining metadata indicators, expected column called 'assetid' uniquely identifies assets present. Usually, users take care since usual mapme.biodiversity workflow ensure columns present. Additional arguments st_write() can supplied. read_portfolio() used read portfolio object previously written disk via write_portfolio() back R sf object. directed GeoPackage output write_portfolio(), otherwise function likely fail. available indicators read back R nested list columns reflecting output calc_indicators() called.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writing a portfolio to disk — portfolio","text":"","code":"write_portfolio(x, dsn, overwrite = FALSE, ...)  read_portfolio(src, ...)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writing a portfolio to disk — portfolio","text":"x portfolio object processed mapme.biodiversity dsn file path output file. end '.gpkg' overwrite logical indicating output file overwritten exists ... Additional arguments supplied st_read() src character vector pointing GeoPackage previously written disk via write_portfolio()","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writing a portfolio to disk — portfolio","text":"write_portfolio() returns x, invisibly. read_portfolio() reutnrs sf object object nested list columns every indicator table found GeoPackage source file.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"functions allows calculate precipitation statistics based CHIRPS rainfall estimates. Corresponding time-frame analysis portfolio, monthly precipitation statistics calculated. include total rainfall amount, rainfall anomaly 1981-2010 climate normal, Standardized Precipitation Index (SPI) available scales 1 48 months. Th function needs SPEI package installed.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"","code":"calc_precipitation_chirps(   years = 1981:2020,   engine = \"extract\",   scales_spi = 3,   spi_prev_years = 8 )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"years numeric vector indicating years calculate precipitation statistics. engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. scales_spi Integers specifying time-scales SPI spi_prev_years Integer specifying many previous years include order fit SPI. Defaults 8.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"function returns tibble column years, months, absolute rainfall (mm), rainfall anomaly (mm) one columns per selected time-scale SPI (dimensionless).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"required resources indicator : chirps","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_chirps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate precipitation statistics based on CHIRPS — precipitation_chirps","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_chirps()) %>%   calc_indicators(     calc_precipitation_chirps(       years = 2010,       engine = \"extract\",       scales_spi = 3,       spi_prev_years = 8     )   ) %>%   tidyr::unnest(precipitation_chirps) #> Error in purrr::map(req_resources, function(resource_name) {    resource <- avail_resources[[resource_name]]    resource_type <- ifelse(inherits(resource, \"sf\"), \"raster\",         \"vector\")    reader <- switch(resource_type, raster = .read_raster, vector = .read_vector,         stop(sprintf(\"Resource type '%s' currently not supported\",             resource_type)))    reader(x, resource)}): ℹ In index: 1. #> Caused by error in `reader()`: #> ! Did not find equal number of tiles per timestep.  aoi #> Error in eval(expr, envir, enclos): object 'aoi' not found # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate precipitation statistics — precipitation_wc","title":"Calculate precipitation statistics — precipitation_wc","text":"function allows efficiently calculate precipitation statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate precipitation statistics — precipitation_wc","text":"","code":"calc_precipitation_wc(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate precipitation statistics — precipitation_wc","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate precipitation statistics — precipitation_wc","text":"function returns tibble column precipitation statistics (mm).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate precipitation statistics — precipitation_wc","text":"required resources indicator : precipitation layer worldclim_precipitation","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/precipitation_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate precipitation statistics — precipitation_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_worldclim_precipitation(years = 2018)) %>%   calc_indicators(     calc_precipitation_wc(       engine = \"extract\",       stats = c(\"mean\", \"median\")     )   ) %>%   tidyr::unnest(precipitation_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid prec_mean prec_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      26.9        26.8 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1      26.3        26.6 2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1      66.8        68.8 2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1      81.8        81.9 2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1     327.        336.  2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1      76.0        77.5 2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1      98.9        98.5 2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1     106.        108.  2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1     214.        217.  2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1     165.        174.  2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1      60.7        61.9 2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1      24.9        26.5 2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Register or list resources in mapme.biodiversity — resources","title":"Register or list resources in mapme.biodiversity — resources","text":"register_resource() used register new resource function base information package's internal environment used inform users available resources. Note, registering custom resource effect current R session. available_resources() returns tibble registered resources basic information source licence.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register or list resources in mapme.biodiversity — resources","text":"","code":"register_resource(   name = NULL,   description = NULL,   licence = NULL,   source = NULL,   type = NULL )  available_resources(resources = NULL)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register or list resources in mapme.biodiversity — resources","text":"name character vector indicating name resource. description character vector basic description licence character vector indicating licence resource. case custom licence, put link licence text. source Optional, preferably URL data found. type character vector indicating type resource. Either 'vector' 'raster'. resources NULL returns list resources (default). Otherwise ones specified.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register or list resources in mapme.biodiversity — resources","text":"register_resource() called side-effect registering resource. available_resources() returns tibble listing available resources.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register or list resources in mapme.biodiversity — resources","text":"","code":"# \\dontrun{ register_resource(   name = \"gfw_treecover\",   description = \"Global Forest Watch - Percentage of canopy closure in 2000\",   licence = \"CC-BY 4.0\",   source = \"https://data.globalforestwatch.org/documents/tree-cover-2000/explore\",   type = \"raster\" ) # } available_resources() #> # A tibble: 24 × 5 #>    name                            description              licence source type  #>    <chr>                           <chr>                    <chr>   <chr>  <chr> #>  1 chirps                          Climate Hazards Group I… CC - u… https… rast… #>  2 esalandcover                    Copernicus Land Monitor… CC-BY … https… rast… #>  3 fritz_et_al                     Drivers of deforestatio… CC-BY … https… rast… #>  4 gfw_emissions                   Global Forest Watch - C… CC-BY … https… rast… #>  5 gfw_lossyear                    Global Forest Watch - Y… CC-BY … https… rast… #>  6 gfw_treecover                   Global Forest Watch - P… CC-BY … https… rast… #>  7 gfw_treecover                   Global Forest Watch - P… CC-BY … https… rast… #>  8 global_surface_water_change     Global Surface Water - … https:… https… rast… #>  9 global_surface_water_occurrence Global Surface Water - … https:… https… rast… #> 10 global_surface_water_recurrence Global Surface Water - … https:… https… rast… #> # ℹ 14 more rows"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"SoilGrids data layers — soilgrids","title":"SoilGrids data layers — soilgrids","text":"SoilGrids project combining global observation data machine learning map spatial distribution soil properties across globe. produced spatial resolution 250 meters parameters mapped different depths. order able assess prediction uncertainty, besides mean median prediction, 0.05 0.95 percentile predictions available. following parameters available: bdod Bulk density fine earth fraction (kg/dm3) cec Cation Exchange Capacity soil (cmol(c)/kg) cfvo Volumetric fraction coarse fragments > 2 mm (cm3/100cm3 (volPerc)) clay Proportion clay particles < 0.002 mm fine earth fraction (g/100g) nitrogen Total nitrogen (g/kg) phh2o Soil pH (pH) sand Proportion sand particles > 0.05 mm fine earth fraction (g/100g) silt Proportion silt particles >= 0.002 mm <= 0.05 mm fine earth fraction (g/100g) soc Soil organic carbon content fine earth fraction (g/kg) ocd Organic carbon density (kg/m3) ocs Organic carbon stocks (kg/m²)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SoilGrids data layers — soilgrids","text":"","code":"get_soilgrids(layers, depths, stats)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SoilGrids data layers — soilgrids","text":"https://www.isric.org/explore/soilgrids","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SoilGrids data layers — soilgrids","text":"layers character vector indicating layers download soilgrids depths character vector indicating depths download stats character vector indicating statistics download.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SoilGrids data layers — soilgrids","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SoilGrids data layers — soilgrids","text":"Except ocs, available depth \"0-30cm\", parameters available following depths: \"0-5cm\" \"5-15cm\" \"15-30cm\" \"30-60cm\" \"60-100cm\" \"100-200cm\" parameter depth available following statistics: \"Q0.05\" \"Q0.50\" \"mean\" \"Q0.95\"","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilgrids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SoilGrids data layers — soilgrids","text":"Hengl T, Mendes de Jesus J, Heuvelink GBM, Ruiperez Gonzalez M, Kilibarda M, et al. (2017) SoilGrids250m: Global gridded soil information based machine learning. PLOS ONE 12(2): e0169748. doi:10.1371/journal.pone.0169748","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Zonal Soil Properties — soilproperties","title":"Calculate Zonal Soil Properties — soilproperties","text":"indicator allows extraction zonal statistics resource layers previously downloaded SoilGrids, thus total supporting calculation zonal statistics 10 different soil properties 6 different depths total 4 different model outputs (stat). Zonal statistics calculated SoilGrid layers previously made available vie get_resources().","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Zonal Soil Properties — soilproperties","text":"","code":"calc_soilproperties(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Zonal Soil Properties — soilproperties","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Zonal Soil Properties — soilproperties","text":"tibble column SoilGrid layer, depth model output statistic well additional columns zonal statistics specified via stats_soil","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Zonal Soil Properties — soilproperties","text":"required resource indicator : soilgrids","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/soilproperties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Zonal Soil Properties — soilproperties","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(     get_soilgrids(       layers = c(\"clay\", \"silt\"),       depths = c(\"0-5cm\", \"5-15cm\"),       stats = \"mean\"     )   ) %>%   calc_indicators(     calc_soilproperties(engine = \"extract\", stats = c(\"mean\", \"median\"))   ) %>%   tidyr::unnest(soilproperties)  aoi #> Simple feature collection with 4 features and 10 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 4 × 11 #>   WDPAID NAME            DESIG_ENG  ISO3  assetid layer depth stat   mean median #>    <dbl> <chr>           <chr>      <chr>   <int> <chr> <chr> <chr> <dbl>  <dbl> #> 1 478140 Sierra de Neiba National … DOM         1 clay  0-5cm mean   35.0   34.8 #> 2 478140 Sierra de Neiba National … DOM         1 clay  5-15… mean   35.4   35.3 #> 3 478140 Sierra de Neiba National … DOM         1 silt  0-5cm mean   33.8   33.7 #> 4 478140 Sierra de Neiba National … DOM         1 silt  5-15… mean   33.9   33.8 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate maximum temperature statistics — temperature_max_wc","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"function allows efficiently calculate maximum temperature statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"","code":"calc_temperature_max_wc(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"tibble column maximum temperature statistics (°C)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"required resources indicator : maximum temperature layer worldclim_max_temperature","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_max_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate maximum temperature statistics — temperature_max_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_worldclim_max_temperature(years = 2018)) %>%   calc_indicators(     calc_temperature_max_wc(       engine = \"extract\",       stats = c(\"mean\", \"median\")     )   ) %>%   tidyr::unnest(temperature_max_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid tmax_mean tmax_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      20.8        20.6 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1      20.5        20.3 2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1      22.1        22.0 2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1      22.5        22.4 2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1      21.4        21.3 2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1      22.7        22.7 2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1      23.1        23.1 2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1      23.8        23.7 2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1      23.1        23.0 2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1      22.4        22.3 2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1      22.1        21.9 2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1      21.3        21.2 2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"function allows efficiently calculate minimum temperature statistics Worldclim polygons. polygon, desired statistic/s (min, max, sum, mean, median, sd var) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"","code":"calc_temperature_min_wc(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"function returns tibble column minimum temperature statistics (°C).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"required resources indicator : minimum temperature layer worldclim_min_temperature","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/temperature_min_wc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate minimum temperature statistics based on WorldClim — temperature_min_wc","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_worldclim_min_temperature(years = 2018)) %>%   calc_indicators(     calc_temperature_min_wc(       engine = \"extract\",       stats = c(\"mean\", \"median\")     )   ) %>%   tidyr::unnest(temperature_min_wc)  aoi #> Simple feature collection with 12 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 9 #>    WDPAID NAME          DESIG_ENG ISO3  assetid tmin_mean tmin_median date       #>     <dbl> <chr>         <chr>     <chr>   <int>     <dbl>       <dbl> <date>     #>  1 478140 Sierra de Ne… National… DOM         1      9.96        9.85 2018-01-01 #>  2 478140 Sierra de Ne… National… DOM         1     10.2        10.1  2018-02-01 #>  3 478140 Sierra de Ne… National… DOM         1     10.1        10.0  2018-03-01 #>  4 478140 Sierra de Ne… National… DOM         1     11.0        11.0  2018-04-01 #>  5 478140 Sierra de Ne… National… DOM         1     12.6        12.5  2018-05-01 #>  6 478140 Sierra de Ne… National… DOM         1     14.0        13.9  2018-06-01 #>  7 478140 Sierra de Ne… National… DOM         1     13.0        13.0  2018-07-01 #>  8 478140 Sierra de Ne… National… DOM         1     14.0        14.0  2018-08-01 #>  9 478140 Sierra de Ne… National… DOM         1     13.6        13.6  2018-09-01 #> 10 478140 Sierra de Ne… National… DOM         1     13.2        13.1  2018-10-01 #> 11 478140 Sierra de Ne… National… DOM         1     12.5        12.4  2018-11-01 #> 12 478140 Sierra de Ne… National… DOM         1     10.3        10.2  2018-12-01 #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":null,"dir":"Reference","previous_headings":"","what":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"resource part publication Olson et al. (2004) \"Terrestrial Ecosystems World (TEOW) WWF-US (Olson)\". depicts 867 terrestrial ecoregions around world classified 14 different terrestrial biomes forests, grasslands, deserts. polygons represent ecoregions, defined relatively large units land inland water sharing large majority biodiversity. datasets made available World Wildlife Fund (WWF) year 2001.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"","code":"get_teow()"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"https://www.worldwildlife.org","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/teow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Terrestrial Ecoregions of the World (TEOW) Polygon — teow","text":"Olson, D. M., Dinerstein, E., Wikramanayake, E. D., Burgess, N. D., Powell, G. V. N., Underwood, E. C., D’Amico, J. ., Itoua, ., Strand, H. E., Morrison, J. C., Loucks, C. J., Allnutt, T. F., Ricketts, T. H., Kura, Y., Lamoreux, J. F., Wettengel, W. W., Hedao, P., Kassem, K. R. 2001. Terrestrial ecoregions world: new map life Earth. Bioscience 51(11):933-938. doi:10.1641/0006-3568(2001)051[0933:TEOTWA]2.0.CO;2","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate accessibility statistics — traveltime","title":"Calculate accessibility statistics — traveltime","text":"Accessibility ease larger cities can reached certain location. function allows efficiently calculate accessibility statistics (.e. travel time nearby major cities) polygons. polygon, desired statistic/s (mean, median sd) /returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate accessibility statistics — traveltime","text":"","code":"calc_traveltime(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate accessibility statistics — traveltime","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate accessibility statistics — traveltime","text":"function returns tibble column accessibility statistics (minutes).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate accessibility statistics — traveltime","text":"required resources indicator : nelson_et_al","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/traveltime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate accessibility statistics — traveltime","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nelson_et_al(     ranges = c(\"5k_10k\", \"100k_200k\", \"500k_1mio\", \"1mio_5mio\")   )) %>%   calc_indicators(     calc_traveltime(engine = \"extract\", stats = c(\"min\", \"max\"))   ) %>%   tidyr::unnest(traveltime)  aoi #> Simple feature collection with 4 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 4 × 9 #>   WDPAID NAME           DESIG_ENG ISO3  assetid minutes_min minutes_max distance #>    <dbl> <chr>          <chr>     <chr>   <int>       <dbl>       <dbl> <chr>    #> 1 478140 Sierra de Nei… National… DOM         1          35         348 5k_10k   #> 2 478140 Sierra de Nei… National… DOM         1         162         528 100k_20… #> 3 478140 Sierra de Nei… National… DOM         1         239         553 500k_1m… #> 4 478140 Sierra de Nei… National… DOM         1         106         464 1mio_5m… #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate treecover statistics — treecover_area","title":"Calculate treecover statistics — treecover_area","text":"functions allows efficiently calculate treecover statistics polygons. year analysis timeframe, forest losses preceding current years subtracted treecover year 2000 actual treecover figures within polygon returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate treecover statistics — treecover_area","text":"","code":"calc_treecover_area(years = 2000:2020, min_size = 10, min_cover = 35)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate treecover statistics — treecover_area","text":"years numeric vector years calculate treecover area. min_size minimum size forest patch considered forest ha. min_cover minimum cover percentage per pixel considered forest.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate treecover statistics — treecover_area","text":"function returns tibble column years treecover (ha).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate treecover statistics — treecover_area","text":"required resources indicator : gfw_treecover gfw_lossyear","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate treecover statistics — treecover_area","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(     get_gfw_treecover(version = \"GFC-2022-v1.10\"),     get_gfw_lossyear(version = \"GFC-2022-v1.10\")   ) %>%   calc_indicators(calc_treecover_area(years = 2016:2017, min_size = 1, min_cover = 30)) %>%   tidyr::unnest(treecover_area)  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME  DESIG_ENG ISO3  assetid years treecover                      geom #>    <dbl> <chr> <chr>     <chr>   <int> <int>     <dbl>             <POLYGON [°]> #> 1 478140 Sier… National… DOM         1  2016    11942. ((-71.76134 18.66333, -7… #> 2 478140 Sier… National… DOM         1  2017    11871. ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate treeloss statistics — treecover_area_and_emissions","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"functions allows efficiently calculate treecover emissions indicators single function call together. Since pre-processing operations treecover emissions , efficient calculate one run users actually interested statistics. Otherwise users advised use respective single indicator functions.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"","code":"calc_treecover_area_and_emissions(   years = 2000:2020,   min_size = 10,   min_cover = 35 )"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"years numeric vector years calculate treecover area emissions. min_size minimum size forest patch ha. min_cover minimum threshold stand density pixel considered forest year 2000.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"function returns tibble column years, treecover (ha), emissions (Mg CO2).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"required resources indicator : gfw_treecover gfw_lossyear gfw_emissions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecover_area_and_emissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate treeloss statistics — treecover_area_and_emissions","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(     get_gfw_treecover(version = \"GFC-2020-v1.8\"),     get_gfw_lossyear(version = \"GFC-2020-v1.8\"),     get_gfw_emissions()   ) %>%   calc_indicators(     calc_treecover_area_and_emissions(years = 2016:2017, min_size = 1, min_cover = 30)   ) %>%   tidyr::unnest(treecover_area_and_emissions) #> Resource 'gfw_treecover' is already available. #> Resource 'gfw_lossyear' is already available.  aoi #> Simple feature collection with 2 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 9 #>   WDPAID NAME            DESIG_ENG     ISO3  assetid years emissions treecover #>    <dbl> <chr>           <chr>         <chr>   <int> <int>     <dbl>     <dbl> #> 1 478140 Sierra de Neiba National Park DOM         1  2016      2400     2360. #> 2 478140 Sierra de Neiba National Park DOM         1  2017      2839     2348. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate emission statistics — treecoverloss_emissions","title":"Calculate emission statistics — treecoverloss_emissions","text":"functions allows efficiently calculate emission statistics areas interest. year analysis timeframe, forest losses Hansen et al. (2013) overlayed respective emission layer Harris et al. (2021) area-wise emission statistics calculated year.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate emission statistics — treecoverloss_emissions","text":"","code":"calc_treecoverloss_emissions(years = 2000:2020, min_size = 10, min_cover = 35)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate emission statistics — treecoverloss_emissions","text":"years numeric vector years calculate emissions caused treecover loss. min_size minimum size forest patch ha. min_cover minimum threshold stand density pixel considered forest year 2000.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate emission statistics — treecoverloss_emissions","text":"function returns tibble column years emissions (Mg).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate emission statistics — treecoverloss_emissions","text":"required resources indicator : gfw_treecover gfw_lossyear gfw_emissions","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/treecoverloss_emissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate emission statistics — treecoverloss_emissions","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(     get_gfw_treecover(version = \"GFC-2020-v1.8\"),     get_gfw_lossyear(version = \"GFC-2020-v1.8\"),     get_gfw_emissions()   ) %>%   calc_indicators(     calc_treecoverloss_emissions(years = 2016:2017, min_size = 1, min_cover = 30)   ) %>%   tidyr::unnest(treecoverloss_emissions) #> Resource 'gfw_treecover' is already available. #> Resource 'gfw_lossyear' is already available. #> Resource 'gfw_emissions' is already available.  aoi #> Simple feature collection with 2 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 2 × 8 #>   WDPAID NAME  DESIG_ENG ISO3  assetid years emissions                      geom #>    <dbl> <chr> <chr>     <chr>   <int> <int>     <dbl>             <POLYGON [°]> #> 1 478140 Sier… National… DOM         1  2016      2400 ((-71.76134 18.66333, -7… #> 2 478140 Sier… National… DOM         1  2017      2839 ((-71.76134 18.66333, -7… # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"Terrain Ruggedness Index measurement developed Riley, et al. (1999). elevation difference centre pixel eight immediate pixels squared averaged square root taken get TRI value. function allows calculate terrain ruggedness index (tri) statistics polygons. polygon, desired statistic(s) returned.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"","code":"calc_tri(engine = \"extract\", stats = \"mean\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"engine preferred processing functions either one \"zonal\", \"extract\" \"exactextract\" character. stats Function applied compute statistics polygons either single multiple inputs character. Supported statistics : \"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\" \"var\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"function returns tibble column terrain ruggedness index statistics (meters). range index values corresponding meaning: (1) 0 - 80 m  :- level surface (2) 81-116 m  :- nearly level surface (3) 117-161 m :- slightly rugged surface (4) 162-239 m :- intermediately rugged surface (5) 240-497 m :- moderately rugged surface (6) 498-958 m :- highly rugged surface (7) 959-4367 m:- extremely rugged surface","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"required resources indicator : nasa_srtm","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"Riley, S. J., DeGloria, S. D., & Elliot, R. (1999). Index quantifies topographic heterogeneity. intermountain Journal sciences, 5(1-4), 23-27.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/tri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Terrain Ruggedness Index (TRI) statistics — tri","text":"","code":"# \\dontshow{ mapme.biodiversity:::.copy_resource_dir(file.path(tempdir(), \"mapme-data\")) # } # \\dontrun{ library(sf) library(mapme.biodiversity)  outdir <- file.path(tempdir(), \"mapme-data\") dir.create(outdir, showWarnings = FALSE)  mapme_options(   outdir = outdir,   verbose = FALSE )  aoi <- system.file(\"extdata\", \"sierra_de_neiba_478140_2.gpkg\",   package = \"mapme.biodiversity\" ) %>%   read_sf() %>%   get_resources(get_nasa_srtm()) %>%   calc_indicators(     calc_tri(stats = c(\"mean\", \"median\", \"sd\", \"var\"), engine = \"extract\")   ) %>%   tidyr::unnest(tri) #> Resource 'nasa_srtm' is already available.  aoi #> Simple feature collection with 1 feature and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.80933 ymin: 18.57668 xmax: -71.33201 ymax: 18.69931 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 10 #>   WDPAID NAME         DESIG_ENG ISO3  assetid tri_mean tri_median tri_sd tri_var #>    <dbl> <chr>        <chr>     <chr>   <int>    <dbl>      <dbl>  <dbl>   <dbl> #> 1 478140 Sierra de N… National… DOM         1     33.3       30.8   18.7    349. #> # ℹ 1 more variable: geom <POLYGON [°]> # }"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":null,"dir":"Reference","previous_headings":"","what":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"resource distributed Uppsala Conflict Data Program (UCDP) constitutes diaggregated dataset individual events organized violence. encodes different actors involved, spatially disaggregated village levels anc currently covers time period 1989 2021. Older versions data set can downloaded, users recommended download latest data set.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"","code":"get_ucdp_ged(version = \"latest\")"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"https://ucdp.uu.se/downloads/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"version character vector specifying version download. Defaults \"latest\".","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"following versions available 5.0 17.1 17.2 18.1 19.1 20.1 21.1 22.1 latest","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/ucdp_ged.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"UCDP Georeferenced Event Dataset (UCDP GED) — ucdp_ged","text":"Davies, Shawn, Therese Pettersson & Magnus Öberg (2022). Organized violence 1989-2021 drone warfare. Journal Peace Research 59(4). doi:10.1177/00223433221108428","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/unzip_and_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to unzip and remove zip/gzip files — unzip_and_remove","title":"Helper to unzip and remove zip/gzip files — unzip_and_remove","text":"Use function unzip zip/gzip file remove original archive, required.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/unzip_and_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to unzip and remove zip/gzip files — unzip_and_remove","text":"","code":"unzip_and_remove(zip = NULL, dir = tempdir(), remove = TRUE)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/unzip_and_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to unzip and remove zip/gzip files — unzip_and_remove","text":"zip zip file unzip dir directory extracted files written . remove TRUE, removes zip else keeps ","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"resource published Fick et al. (2017) \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas\" represents multiple climatic variables requiring minimum temperature, maximum temperature, mean precipitation layers. layers available download period 2000 - 2018 monthly basis WorldClim.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"","code":"get_worldclim_max_temperature(years = 2000:2018)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_max_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downloads WorldClim Maximum Temperature layer — worldclim_max_temperature","text":"resource represents maximum temperature, layers available download period 2000 - 2018 monthly basis WorldClim. Encoded (°C), representing maximum temperature per output grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"resource published Fick et al. (2017) \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas\" represents multiple climatic variables requiring minimum temperature, maximum temperature, mean precipitation layers. layers available download period 2000 - 2018 monthly basis WorldClim.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"","code":"get_worldclim_min_temperature(years = 2000:2018)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"function returns character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_min_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downloads WorldClim Minimum Temperature layer — worldclim_min_temperature","text":"resource represents minimum temperature, layers available download period 2000 - 2018 monthly basis WorldClim. Encoded (°C), representing minimum temperature per output grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"resource published Fick et al. (2017) \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas\" represents multiple climatic variables requiring minimum temperature, maximum temperature, mean precipitation layers. layers available download period 2000 - 2018 monthly basis WorldClim.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"","code":"get_worldclim_precipitation(years = 2000:2018)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"character file paths.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldclim_precipitation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downloads WorldClim Mean Precipitation layer — worldclim_precipitation","text":"resource represents average precipitation, layers available download period 2000 - 2018 monthly basis WorldClim. Encoded (mm), representing mean precipitation per output grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Count layer for year 2000-2020 — worldpop","title":"Population Count layer for year 2000-2020 — worldpop","text":"resource published open spatial demographic data research organization called WorldPop. resource represents population count, 1 km spatial resolution layers available download year 2000 2020. dataset called WorldPop Unconstrained Global Mosaics. encoded cell value represents total number people particular grid cell.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Count layer for year 2000-2020 — worldpop","text":"","code":"get_worldpop(years = 2000)"},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population Count layer for year 2000-2020 — worldpop","text":"https://www.worldpop.org/","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Count layer for year 2000-2020 — worldpop","text":"years numeric vector indicating years make resource available.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/reference/worldpop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Count layer for year 2000-2020 — worldpop","text":"function returns character file paths.","code":""},{"path":[]},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity (development version)","text":"introduces new UI based closures resources indicators, see #240 information","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"general-development-version","dir":"Changelog","previous_headings":"","what":"General","title":"mapme.biodiversity (development version)","text":"improves output available_resources() available_indicators() introduces mapme_options() add fine-control packages behaviour deprecates init_portfolio() favor mapme_options() check_available_years() check_namespace() download_or_skip() check_engine() check_stats() select_engine() make_global_grid() unzip_and_remove()","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity (development version)","text":"added Global Surface Water resources respective indicators (#235, @karpfen)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-development-version","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity (development version)","text":"removed st_make_valid() .read_vector().","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-050","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.5.0","title":"mapme.biodiversity 0.5.0","text":"CRAN release: 2024-01-08","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"general-0-5-0","dir":"Changelog","previous_headings":"","what":"General","title":"mapme.biodiversity 0.5.0","text":"Quickstart vignette uses WorldPop resource instead CHIRPS, relying working internet connection (#230).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.5.0","text":"GFW resources indicators include latest GFC-2022-v1.10 version (#203). Raster resources CRS different WGS84 now supported (#213).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.5.0","text":"argument add_resources init_portfolio() deprecated. means get_resources() run every new R session make resource available processing (#219). Rasters now cropped spatial extent asset setting snap=\"\", thus delivering slightly bigger extent (#212). Speed improvements GFW indicators (x10 larger rasters) now require R package exactextractr installed. Also, advised R package landscapemetrics installed gain full computation speed improvement.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mapme.biodiversity 0.5.0","text":"calc_indicators() checks 0-length tibbles (#196, #199, #215). Fix bug reading rasters temporal dimensions (#209). raster cells touching polygon now returned (#208).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-5-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.5.0","text":".read_raster_source() now uses simplified logic cover cases (e.g. single tiles, tiled rasters without temporal dimension, single temporal rasters) (#211). Rasters cropped using snap=\"\" default (#212). .read_raster_source() now projects assets case CRS differs portfolio (#213). tile indices raster resources now appended portfolio attributes sf objects instead written disk (#219). .read_raster_source() now applies precision round-trip 5 decimal point match rasters slight changes spatial extent (#217). register_resource() register_indicator() now issue warnings resources/indicators names already registered overwrites (#220).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-040","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.4.0","title":"mapme.biodiversity 0.4.0","text":"CRAN release: 2023-08-28","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.4.0","text":"added new resource called ucdp_ged providing database violent conflict 1989 today added new indicator called fatalities aggregating number deaths type conflict monthly time scale based ucdp_ged resource. Added new resource called fritz_et_al providing raster layer deforestation added new resource called fritz_et_al providing raster layer deforestation drivers tropical forests based Fritz et al. (2022) added new indicator called deforestation_drivers using fritz_et_al resource obtain information absolute relative area driving forest losses assets period 2008-2019 added two new exported functions register_resource() register_indicator() allow users register custom functions resources/indicators added new vignette web-version package informing obtain wide-output indicators added new vignette web-version custom analysis NASA FIRMS resource example section added data years 2017-2020 Global Mangrove Watch resource","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.4.0","text":"Changed parallel backend future package. Parallel processing now implemented furrr::future_map() asset level within calc_indicators() function. User code now required set plan() enable parallel processing. function call needs wrapped user side progressr::with_progress() show progress bar. mapme.biodiversity longer sets terra’s temporal directory . Instead call terra::terraOptions() manually","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mapme.biodiversity 0.4.0","text":"esalandcover indicator now returns value per land cover class exactly (#177)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-4-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.4.0","text":"disabled running examples CRAN disabled tests get_* functions CRAN terra engines now use get() resolve requested zonal statistic function applying tidyverse coding style existing code (#156, @karpfen) extensive re-factoring vector-raster zonal statistic engines (#150) extensive re-writing testing infrastructure indicator functions omitting usage snapshot tests far possible (#142) rundir todisk arguments removed indicator functions since practical use instead resource indicator backlog, resources indicators now registered .pkgenv queried runtime. also allows users register custom resources/indicator functions removed deprecation warnings old resource/indicator name","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-030","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.3.0","title":"mapme.biodiversity 0.3.0","text":"CRAN release: 2023-01-21","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.3.0","text":"MacOS s2-based calculations now enabled users can expect package return numerically equivalent results operating system (#131) online source nasa_srtm resource shows expired SSL certificate since November 2022. get_resources() function now includes error instructions disable SSL certification users risk. websites maintainers contacted asked renew certification. (#131)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.3.0","text":"GFW resources now updated use latest version allowing analysis additional year 2021 (#123, @fBedecarrats) GFW indicators now accept numeric min_size argument allowing specify fractional covers (#110) fire indicators now allow simultaneous calculation indicators based MODIS VIIRS. users chose one instruments analysis (#126)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.3.0","text":"case one multiple assets return NA instead tibble now properly tested handled (#101) Rasters longer temporary written disk omit bug caused applying mask/classify already existing raster file (#108, @Jo-Schie) Bug soilproperties set NA caused function return data.frame instead tibble fixed (#116) , treecoverloss_emissions treecover_area_and_emissions now return 0 instead NaN observation years now forest loss occurred (#120)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-3-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.3.0","text":".make_global_grid() now specifies CRS constructing bounding box returns grid specified CRS instead Lat/Lon (#113) .calc_active_fire_properties now uses st_coordinates retrieve locations fires (#119, @DavisVaughan) tests MacOS re-enabled (#131) tests downloading nasa_srtm resource skipped SSL certificate online source expired (#131)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-021","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.2.1","title":"mapme.biodiversity 0.2.1","text":"CRAN release: 2022-09-09","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.2.1","text":"fixes serious bug occurred tiled resources multiple assets within tile resulting returning tile multiple times","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-2-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.2.1","text":"tests catch mentioned bug introduced tiled resources","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-020","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.2.0","title":"mapme.biodiversity 0.2.0","text":"CRAN release: 2022-08-23","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.2.0","text":"extensive renaming resources indicators. handled gracefully next release (.e. warning issued names replaced): resources: treecover2000 -> gfw_treecover lossyear -> gfw_lossyear greenhouse -> gfw_emissions traveltime -> nelson_et_al nasagrace -> nasa_grace mintemperature -> worldclim_min_temperature maxtemperature -> worldclim_max_temperature precipitation -> worldclim_precipitation ecoregions -> teow mangrove -> gmw srtmdem -> nasa_srtm indicators: treecover -> treecover_area emissions -> treecoverloss_emissions treeloss -> treecover_area_and_emissions chirpsprec -> precipitation_chirps accessibility -> traveltime popcount -> population_count wctmin -> temperature_min_wc wctmax -> temperature_max_wc wcprec -> precipitation_wc gmw -> mangroves_area teow -> ecoregion","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.2.0","text":"nasa_firms active_fire_properties active_fire_counts","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-2-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.2.0","text":"adapted download routine GMW v3 (#80) removed data.table imports","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mapme.biodiversity 0.2.0","text":"fixing issue #84 concerning intersection tiled datasets (#86, @Jo-Schie)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-012","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.2","title":"mapme.biodiversity 0.1.2","text":"CRAN release: 2022-06-24","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-2","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.2","text":"unit tests silenced order informative reverse dependency checks checks tile availability reactivated SRTM fixed notes due uninitialized variables TEOW biome indicators","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-011","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.1","title":"mapme.biodiversity 0.1.1","text":"CRAN release: 2022-05-02","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.1","text":"init_portfolio() now sets testing attribute FALSE default. get_<resource>() functions now return filenames early testing set TRUE. calc_<indicator>() examples now copy files R temporal directory wrapped try() avoid errors/warnings CRAN internet resource available. examples calc_tri() calc_elevation() now disabled CRAN responsiveness CIGAR servers.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-010","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.1.0","title":"mapme.biodiversity 0.1.0","text":"CRAN release: 2022-04-27","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"mapme.biodiversity 0.1.0","text":"renamed ‘.assetid’ ‘assetid’ (#22)","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"mapme.biodiversity 0.1.0","text":"None","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-1-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.1.0","text":"ensures tests examples adhere CRAN policies writing temporal directory (#22).","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"mapmebiodiversity-001","dir":"Changelog","previous_headings":"","what":"mapme.biodiversity 0.0.1","title":"mapme.biodiversity 0.0.1","text":"CRAN release: 2022-04-19","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"initial-release-0-0-1","dir":"Changelog","previous_headings":"","what":"Initial release","title":"mapme.biodiversity 0.0.1","text":"Added NEWS.md file track changes package. ecoregions esalandcover greenhouse lossyear mangrove nasagrace soilgrids srtmdem traveltime treecover worldclim worldpop acessibility biome chirpsprec drought_indicator elevation emissions gmw landcover popcount soilproperties teow treecover treeloss tri wcprec wctmax wctmin init_portfolio() used initialize portfolio object. input must sf object geometries type POLYGON users can request download one resources via get_resources() users can request processing indicator via calc_indicators() indicators added portfolio object nested list columns processed portfolio object can exported GeoPackage via write_portfolio() portfolio saved disk GeoPackage can read back R via read_portfolio(). users wish download additional resources calculate indicators, init_portfolio() called . Parallelization using multiple cores host machine disabled Windows MacOS, s2 engine spherical geometric vector operations disabled lwgeom used instead.","code":""},{"path":"https://mapme-initiative.github.io/mapme.biodiversity/news/index.html","id":"internal-0-0-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"mapme.biodiversity 0.0.1","text":"Introduced absolute URLS userguide.Rmd pointing online documentation (#59) tags added exported functions explaining output/side effect (#59) using requireNamespace() instead installed.packages() check packages listed SUGGEST loadable (#58)","code":""}]
